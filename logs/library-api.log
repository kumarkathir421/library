2025-10-23 20:21:24.933 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 20:21:25.386 [main] INFO  [:] c.e.library.LibraryApiApplication - Starting LibraryApiApplication using Java 17.0.16 with PID 11668 (C:\Users\Prakash\Documents\workspace\library\library-api\target\classes started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 20:21:25.388 [main] DEBUG [:] c.e.library.LibraryApiApplication - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 20:21:25.411 [main] INFO  [:] c.e.library.LibraryApiApplication - The following 1 profile is active: "dev"
2025-10-23 20:21:29.626 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 20:21:29.910 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 231 ms. Found 3 JPA repository interfaces.
2025-10-23 20:21:32.105 [main] INFO  [:] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-23 20:21:32.168 [main] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-23 20:21:32.185 [main] INFO  [:] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 20:21:32.186 [main] INFO  [:] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-23 20:21:32.444 [main] INFO  [:] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-23 20:21:32.445 [main] INFO  [:] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6700 ms
2025-10-23 20:21:32.658 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 20:21:33.608 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 20:21:33.616 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 20:21:33.722 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 20:21:34.235 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 20:21:34.236 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 20:21:34.723 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 20:21:35.187 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 20:21:35.469 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 20:21:36.859 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 20:21:40.879 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 20:21:41.221 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 20:21:43.140 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 20:21:43.361 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 20:21:45.179 [main] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-23 20:21:45.334 [main] INFO  [:] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-23 20:21:45.381 [main] INFO  [:] c.e.library.LibraryApiApplication - Started LibraryApiApplication in 23.201 seconds (process running for 28.204)
2025-10-23 20:21:54.397 [http-nio-8080-exec-1] INFO  [:] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 20:21:54.398 [http-nio-8080-exec-1] INFO  [:] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 20:21:54.403 [http-nio-8080-exec-1] INFO  [:] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-23 20:21:54.446 [http-nio-8080-exec-1] DEBUG [86aa8cba-ffb:10c2c28f] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=86aa8cba-ffb, spanId=10c2c28f, URI=/library.html
2025-10-23 20:21:54.726 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 20:21:54.760 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 300 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerId = document.getElementById("borrowerSelect").value;
    const bookId = document.getElementById("bookSelect").value;

    if (!borrowerId || !bookId) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookId}?borrowerId=${borrowerId}`, { method: "POST" });
    const msg = await res.text();
    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookId = document.getElementById("bookSelect").value;
    if (!bookId) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookId}`, { method: "POST" });
    const msg = await res.text();
    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 20:21:55.036 [http-nio-8080-exec-2] DEBUG [7c97f32a-143:ee5743e1] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=7c97f32a-143, spanId=ee5743e1, URI=/favicon.ico
2025-10-23 20:21:55.090 [http-nio-8080-exec-3] DEBUG [81c20745-4a2:de1b30e8] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=81c20745-4a2, spanId=de1b30e8, URI=/api/books
2025-10-23 20:21:55.136 [http-nio-8080-exec-4] DEBUG [340c136f-57d:9bdb7b54] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=340c136f-57d, spanId=9bdb7b54, URI=/api/borrowers
2025-10-23 20:21:55.136 [http-nio-8080-exec-5] DEBUG [4cd8daef-661:f21da281] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=4cd8daef-661, spanId=f21da281, URI=/api/history
2025-10-23 20:21:55.421 [http-nio-8080-exec-3] INFO  [81c20745-4a2:de1b30e8] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:21:55.424 [http-nio-8080-exec-3] DEBUG [81c20745-4a2:de1b30e8] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:21:55.786 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 20:21:56.040 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 750 ms]
Body:
{
  "timestamp" : "2025-10-23T20:21:55",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:21:56.199 [http-nio-8080-exec-3] DEBUG [81c20745-4a2:de1b30e8] c.e.l.controller.BookController - Total books fetched: 0
2025-10-23 20:21:56.208 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:21:56.210 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1073 ms]
Body:
[ ]
2025-10-23 20:21:56.230 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:21:56.231 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1095 ms]
Body:
[ ]
2025-10-23 20:21:56.252 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:21:56.252 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1161 ms]
Body:
[ ]
2025-10-23 20:22:05.965 [http-nio-8080-exec-6] DEBUG [af340849-bc5:c293b9e7] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=af340849-bc5, spanId=c293b9e7, URI=/api/borrowers
2025-10-23 20:22:06.580 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "name",
  "email" : "email@email.com"
}
2025-10-23 20:22:06.581 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 615 ms]
Body:
{
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
}
2025-10-23 20:22:06.598 [http-nio-8080-exec-7] DEBUG [d758f345-875:533de97c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d758f345-875, spanId=533de97c, URI=/api/borrowers
2025-10-23 20:22:06.622 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:22:06.623 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 24 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:22:16.088 [http-nio-8080-exec-8] DEBUG [811acf5d-3da:0711b200] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=811acf5d-3da, spanId=0711b200, URI=/api/books
2025-10-23 20:22:16.116 [http-nio-8080-exec-8] INFO  [811acf5d-3da:0711b200] c.e.l.controller.BookController - Registering new book: title by author
2025-10-23 20:22:16.118 [http-nio-8080-exec-8] INFO  [811acf5d-3da:0711b200] c.e.library.service.BookServiceImpl - Registering new book: [1111 - title]
2025-10-23 20:22:16.138 [http-nio-8080-exec-8] DEBUG [811acf5d-3da:0711b200] c.e.library.service.BookServiceImpl - Book saved with ID: 1
2025-10-23 20:22:16.151 [http-nio-8080-exec-8] DEBUG [811acf5d-3da:0711b200] c.e.l.controller.BookController - Book registered successfully with ID: 1
2025-10-23 20:22:16.184 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "1111",
  "title" : "title",
  "author" : "author"
}
2025-10-23 20:22:16.186 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 88 ms]
Body:
{
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
}
2025-10-23 20:22:16.207 [http-nio-8080-exec-8] DEBUG [029110ec-368:df7d9617] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=029110ec-368, spanId=df7d9617, URI=/api/books
2025-10-23 20:22:16.222 [http-nio-8080-exec-8] INFO  [029110ec-368:df7d9617] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:22:16.223 [http-nio-8080-exec-8] DEBUG [029110ec-368:df7d9617] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:22:16.241 [http-nio-8080-exec-8] DEBUG [029110ec-368:df7d9617] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:22:16.244 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:22:16.246 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 37 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
} ]
2025-10-23 20:22:22.277 [http-nio-8080-exec-9] DEBUG [d3a44e87-57d:326f6266] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d3a44e87-57d, spanId=326f6266, URI=/api/books/borrow/1
2025-10-23 20:22:22.330 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/1]
Body:
(no body)
2025-10-23 20:22:22.331 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 53 ms]
Body:
{
  "timestamp" : "2025-10-23T20:22:22",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:22:22.357 [http-nio-8080-exec-10] DEBUG [6325e16d-ad1:af005ad5] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6325e16d-ad1, spanId=af005ad5, URI=/api/books
2025-10-23 20:22:22.365 [http-nio-8080-exec-10] INFO  [6325e16d-ad1:af005ad5] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:22:22.370 [http-nio-8080-exec-10] DEBUG [6325e16d-ad1:af005ad5] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:22:22.398 [http-nio-8080-exec-10] DEBUG [6325e16d-ad1:af005ad5] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:22:22.405 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:22:22.406 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 48 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
} ]
2025-10-23 20:26:03.193 [http-nio-8080-exec-4] DEBUG [6b9359a7-cbf:3fc6e5d8] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6b9359a7-cbf, spanId=3fc6e5d8, URI=/api/books
2025-10-23 20:26:12.213 [http-nio-8080-exec-4] INFO  [6b9359a7-cbf:3fc6e5d8] c.e.l.controller.BookController - Registering new book: title2 by author2
2025-10-23 20:26:30.369 [http-nio-8080-exec-4] INFO  [6b9359a7-cbf:3fc6e5d8] c.e.library.service.BookServiceImpl - Registering new book: [2222 - title2]
2025-10-23 20:26:35.211 [http-nio-8080-exec-4] DEBUG [6b9359a7-cbf:3fc6e5d8] c.e.library.service.BookServiceImpl - Book saved with ID: 2
2025-10-23 20:26:51.134 [http-nio-8080-exec-4] DEBUG [6b9359a7-cbf:3fc6e5d8] c.e.l.controller.BookController - Book registered successfully with ID: 2
2025-10-23 20:26:51.139 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2"
}
2025-10-23 20:26:51.139 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 47946 ms]
Body:
{
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
}
2025-10-23 20:26:51.202 [http-nio-8080-exec-3] DEBUG [2bc7b990-138:8dbe450c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2bc7b990-138, spanId=8dbe450c, URI=/api/books
2025-10-23 20:26:51.217 [http-nio-8080-exec-3] INFO  [2bc7b990-138:8dbe450c] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:26:51.218 [http-nio-8080-exec-3] DEBUG [2bc7b990-138:8dbe450c] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:26:51.230 [http-nio-8080-exec-3] DEBUG [2bc7b990-138:8dbe450c] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:26:51.233 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:26:51.235 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 32 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:27:01.037 [http-nio-8080-exec-5] DEBUG [08f42ff8-3dd:8c22fbfa] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=08f42ff8-3dd, spanId=8c22fbfa, URI=/api/books/borrow/2
2025-10-23 20:27:01.049 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/2]
Body:
(no body)
2025-10-23 20:27:01.051 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 13 ms]
Body:
{
  "timestamp" : "2025-10-23T20:27:01",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:27:01.076 [http-nio-8080-exec-6] DEBUG [cd4ccd38-ecb:a4b2e0c9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=cd4ccd38-ecb, spanId=a4b2e0c9, URI=/api/books
2025-10-23 20:27:01.081 [http-nio-8080-exec-6] INFO  [cd4ccd38-ecb:a4b2e0c9] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:27:01.082 [http-nio-8080-exec-6] DEBUG [cd4ccd38-ecb:a4b2e0c9] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:27:01.093 [http-nio-8080-exec-6] DEBUG [cd4ccd38-ecb:a4b2e0c9] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:27:01.100 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:27:01.101 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 25 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:27:11.419 [http-nio-8080-exec-7] DEBUG [880dcadb-c1b:fd1de3ea] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=880dcadb-c1b, spanId=fd1de3ea, URI=/api/books/borrow/2
2025-10-23 20:27:11.426 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/2]
Body:
(no body)
2025-10-23 20:27:11.433 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 8 ms]
Body:
{
  "timestamp" : "2025-10-23T20:27:11",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:27:11.454 [http-nio-8080-exec-8] DEBUG [b262547c-c5c:5a519cc4] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b262547c-c5c, spanId=5a519cc4, URI=/api/books
2025-10-23 20:27:11.458 [http-nio-8080-exec-8] INFO  [b262547c-c5c:5a519cc4] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:27:11.459 [http-nio-8080-exec-8] DEBUG [b262547c-c5c:5a519cc4] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:27:11.467 [http-nio-8080-exec-8] DEBUG [b262547c-c5c:5a519cc4] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:27:11.471 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:27:11.472 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 18 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:27:42.835 [http-nio-8080-exec-9] DEBUG [0d325a12-9f0:2c7baef4] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0d325a12-9f0, spanId=2c7baef4, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:27:57.255 [http-nio-8080-exec-9] INFO  [0d325a12-9f0:2c7baef4] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:27:59.040 [http-nio-8080-exec-9] INFO  [0d325a12-9f0:2c7baef4] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:28:03.814 [http-nio-8080-exec-9] INFO  [0d325a12-9f0:2c7baef4] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 20:28:06.544 [http-nio-8080-exec-9] INFO  [0d325a12-9f0:2c7baef4] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 20:28:14.408 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:28:14.410 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 31573 ms]
Body:
Book borrowed successfully
2025-10-23 20:31:06.258 [http-nio-8080-exec-1] DEBUG [dc404a1c-284:d07eef76] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=dc404a1c-284, spanId=d07eef76, URI=/library.html
2025-10-23 20:31:06.469 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 20:31:06.473 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 210 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 20:31:06.782 [http-nio-8080-exec-2] DEBUG [94629ecf-b8b:98b2aaf4] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=94629ecf-b8b, spanId=98b2aaf4, URI=/favicon.ico
2025-10-23 20:31:06.791 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 20:31:06.792 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 10 ms]
Body:
{
  "timestamp" : "2025-10-23T20:31:06",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:31:06.874 [http-nio-8080-exec-4] DEBUG [464eb418-99a:0462d1ab] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=464eb418-99a, spanId=0462d1ab, URI=/api/books
2025-10-23 20:31:06.877 [http-nio-8080-exec-4] INFO  [464eb418-99a:0462d1ab] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:31:06.878 [http-nio-8080-exec-4] DEBUG [464eb418-99a:0462d1ab] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:31:06.890 [http-nio-8080-exec-3] DEBUG [057b46fe-667:f6df986e] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=057b46fe-667, spanId=f6df986e, URI=/api/borrowers
2025-10-23 20:31:06.893 [http-nio-8080-exec-5] DEBUG [f3fdc5aa-7dd:6743adac] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=f3fdc5aa-7dd, spanId=6743adac, URI=/api/history
2025-10-23 20:31:06.924 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:31:06.925 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 35 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:31:06.929 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:31:06.932 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 35 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:28:03.456601",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:31:07.057 [http-nio-8080-exec-4] DEBUG [464eb418-99a:0462d1ab] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:31:07.061 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:31:07.104 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 188 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:37:56.672 [http-nio-8080-exec-9] DEBUG [1721762d-0b3:06b1b5bd] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=1721762d-0b3, spanId=06b1b5bd, URI=/library.html
2025-10-23 20:37:56.849 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 20:37:56.882 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 178 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 20:37:57.286 [http-nio-8080-exec-10] DEBUG [dd744e79-ab4:9a8b4cf3] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=dd744e79-ab4, spanId=9a8b4cf3, URI=/favicon.ico
2025-10-23 20:37:57.313 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 20:37:57.314 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 28 ms]
Body:
{
  "timestamp" : "2025-10-23T20:37:57",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:37:57.346 [http-nio-8080-exec-1] DEBUG [c06c7886-474:f36c8d26] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c06c7886-474, spanId=f36c8d26, URI=/api/books
2025-10-23 20:37:57.349 [http-nio-8080-exec-1] INFO  [c06c7886-474:f36c8d26] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:37:57.350 [http-nio-8080-exec-1] DEBUG [c06c7886-474:f36c8d26] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:37:57.355 [http-nio-8080-exec-1] DEBUG [c06c7886-474:f36c8d26] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:37:57.358 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:37:57.360 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 12 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:37:57.376 [http-nio-8080-exec-2] DEBUG [bf062c87-3f6:bd388a26] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=bf062c87-3f6, spanId=bd388a26, URI=/api/borrowers
2025-10-23 20:37:57.386 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:37:57.387 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 14 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:37:57.402 [http-nio-8080-exec-3] DEBUG [89a59d7b-b1e:de98ce43] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=89a59d7b-b1e, spanId=de98ce43, URI=/api/history
2025-10-23 20:37:57.429 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:37:57.431 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 28 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:28:03.456601",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:38:00.467 [http-nio-8080-exec-5] DEBUG [a3aa8a1f-92b:e0897e9c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a3aa8a1f-92b, spanId=e0897e9c, URI=/library.html
2025-10-23 20:38:00.481 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 20:38:00.485 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 13 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 20:38:00.685 [http-nio-8080-exec-4] DEBUG [4aede0c0-d3d:6dca2624] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=4aede0c0-d3d, spanId=6dca2624, URI=/favicon.ico
2025-10-23 20:38:00.694 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 20:38:00.697 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 10 ms]
Body:
{
  "timestamp" : "2025-10-23T20:38:00",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:38:00.761 [http-nio-8080-exec-6] DEBUG [bffdf3c1-2cc:471b651c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=bffdf3c1-2cc, spanId=471b651c, URI=/api/books
2025-10-23 20:38:00.764 [http-nio-8080-exec-6] INFO  [bffdf3c1-2cc:471b651c] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:38:00.766 [http-nio-8080-exec-6] DEBUG [bffdf3c1-2cc:471b651c] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:38:00.767 [http-nio-8080-exec-8] DEBUG [2beaa0d8-2c7:e92e2d9f] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2beaa0d8-2c7, spanId=e92e2d9f, URI=/api/borrowers
2025-10-23 20:38:00.769 [http-nio-8080-exec-7] DEBUG [b7d13415-c6a:d5ca8a20] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b7d13415-c6a, spanId=d5ca8a20, URI=/api/history
2025-10-23 20:38:00.783 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:38:00.784 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 17 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:38:00.789 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:38:00.793 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 20 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:28:03.456601",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:38:00.791 [http-nio-8080-exec-6] DEBUG [bffdf3c1-2cc:471b651c] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:38:00.805 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:38:00.806 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 44 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:38:13.591 [http-nio-8080-exec-9] DEBUG [4e6f78fd-be1:14ecb885] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=4e6f78fd-be1, spanId=14ecb885, URI=/api/books/return/BOOK-00001
2025-10-23 20:38:13.602 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 20:38:13.603 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 12 ms]
Body:
{
  "timestamp" : "2025-10-23T20:38:13",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:38:13.629 [http-nio-8080-exec-10] DEBUG [28d1c99b-b6a:49b01393] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=28d1c99b-b6a, spanId=49b01393, URI=/api/books
2025-10-23 20:38:13.634 [http-nio-8080-exec-10] INFO  [28d1c99b-b6a:49b01393] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:38:13.635 [http-nio-8080-exec-10] DEBUG [28d1c99b-b6a:49b01393] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:38:13.652 [http-nio-8080-exec-10] DEBUG [28d1c99b-b6a:49b01393] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:38:13.657 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:38:13.661 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 29 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:38:34.371 [http-nio-8080-exec-1] DEBUG [e1b4b5c1-6a7:c7ada6ff] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=e1b4b5c1-6a7, spanId=c7ada6ff, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:38:35.913 [http-nio-8080-exec-2] DEBUG [e50376ed-0b7:53fa7d4d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=e50376ed-0b7, spanId=53fa7d4d, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:38:42.142 [http-nio-8080-exec-1] INFO  [e1b4b5c1-6a7:c7ada6ff] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:38:42.144 [http-nio-8080-exec-1] INFO  [e1b4b5c1-6a7:c7ada6ff] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:38:42.263 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:38:42.264 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 7893 ms]
Body:
{
  "timestamp" : "2025-10-23T20:38:42",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 20:38:42.299 [http-nio-8080-exec-3] DEBUG [6072cadd-ef3:b93d85aa] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6072cadd-ef3, spanId=b93d85aa, URI=/api/books
2025-10-23 20:38:42.301 [http-nio-8080-exec-3] INFO  [6072cadd-ef3:b93d85aa] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:38:42.302 [http-nio-8080-exec-3] DEBUG [6072cadd-ef3:b93d85aa] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:38:42.308 [http-nio-8080-exec-3] DEBUG [6072cadd-ef3:b93d85aa] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:38:42.312 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:38:42.316 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 13 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:38:44.235 [http-nio-8080-exec-2] INFO  [e50376ed-0b7:53fa7d4d] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:38:44.248 [http-nio-8080-exec-2] INFO  [e50376ed-0b7:53fa7d4d] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:38:44.267 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:38:44.268 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 8355 ms]
Body:
{
  "timestamp" : "2025-10-23T20:38:44",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 20:38:44.296 [http-nio-8080-exec-5] DEBUG [902ce8e3-fe5:fa810906] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=902ce8e3-fe5, spanId=fa810906, URI=/api/books
2025-10-23 20:38:44.298 [http-nio-8080-exec-5] INFO  [902ce8e3-fe5:fa810906] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:38:44.299 [http-nio-8080-exec-5] DEBUG [902ce8e3-fe5:fa810906] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:38:44.311 [http-nio-8080-exec-5] DEBUG [902ce8e3-fe5:fa810906] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:38:44.315 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:38:44.316 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 19 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:38:51.084 [http-nio-8080-exec-4] DEBUG [b9246d86-ecf:8246b788] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b9246d86-ecf, spanId=8246b788, URI=/api/books/return/BOOK-00001
2025-10-23 20:38:51.092 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 20:38:51.092 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 8 ms]
Body:
{
  "timestamp" : "2025-10-23T20:38:51",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:38:51.114 [http-nio-8080-exec-8] DEBUG [0a275523-19a:8b711837] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0a275523-19a, spanId=8b711837, URI=/api/books
2025-10-23 20:38:51.116 [http-nio-8080-exec-8] INFO  [0a275523-19a:8b711837] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:38:51.118 [http-nio-8080-exec-8] DEBUG [0a275523-19a:8b711837] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:38:51.130 [http-nio-8080-exec-8] DEBUG [0a275523-19a:8b711837] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:38:51.136 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:38:51.138 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 22 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:39:01.852 [http-nio-8080-exec-7] DEBUG [466240aa-dae:8f0d07f6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=466240aa-dae, spanId=8f0d07f6, URI=/api/books/return/BOOK-00001
2025-10-23 20:39:01.858 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 20:39:01.859 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 7 ms]
Body:
{
  "timestamp" : "2025-10-23T20:39:01",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:39:01.907 [http-nio-8080-exec-6] DEBUG [d86a4624-f93:9b4a6e6d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d86a4624-f93, spanId=9b4a6e6d, URI=/api/books
2025-10-23 20:39:01.909 [http-nio-8080-exec-6] INFO  [d86a4624-f93:9b4a6e6d] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:39:01.910 [http-nio-8080-exec-6] DEBUG [d86a4624-f93:9b4a6e6d] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:39:01.920 [http-nio-8080-exec-6] DEBUG [d86a4624-f93:9b4a6e6d] c.e.l.controller.BookController - Total books fetched: 2
2025-10-23 20:39:01.925 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:39:01.930 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 18 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
}, {
  "id" : 2,
  "code" : "BOOK-00002",
  "isbn" : "2222",
  "title" : "title2",
  "author" : "author2",
  "borrowedById" : null
} ]
2025-10-23 20:40:14.598 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 20:40:14.922 [main] INFO  [:] c.e.library.LibraryApiApplication - Starting LibraryApiApplication using Java 17.0.16 with PID 3060 (C:\Users\Prakash\Documents\workspace\library\library-api\target\classes started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 20:40:14.925 [main] DEBUG [:] c.e.library.LibraryApiApplication - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 20:40:14.927 [main] INFO  [:] c.e.library.LibraryApiApplication - The following 1 profile is active: "dev"
2025-10-23 20:40:20.048 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 20:40:20.355 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 281 ms. Found 3 JPA repository interfaces.
2025-10-23 20:40:22.854 [main] INFO  [:] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-23 20:40:22.922 [main] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-23 20:40:22.942 [main] INFO  [:] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 20:40:22.944 [main] INFO  [:] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-23 20:40:23.354 [main] INFO  [:] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-23 20:40:23.356 [main] INFO  [:] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8227 ms
2025-10-23 20:40:23.539 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 20:40:24.858 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 20:40:24.872 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 20:40:24.920 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 20:40:25.177 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 20:40:25.185 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 20:40:25.729 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 20:40:26.349 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 20:40:26.779 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 20:40:28.713 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 20:40:34.013 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 20:40:34.334 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 20:40:36.302 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 20:40:36.390 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 20:40:37.813 [main] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-23 20:40:37.955 [main] INFO  [:] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-23 20:40:38.051 [main] INFO  [:] c.e.library.LibraryApiApplication - Started LibraryApiApplication in 28.999 seconds (process running for 35.655)
2025-10-23 20:40:51.178 [http-nio-8080-exec-1] INFO  [:] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 20:40:51.179 [http-nio-8080-exec-1] INFO  [:] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 20:40:51.183 [http-nio-8080-exec-1] INFO  [:] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-10-23 20:40:51.223 [http-nio-8080-exec-1] DEBUG [e1404f37-263:5f00dac4] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=e1404f37-263, spanId=5f00dac4, URI=/library.html
2025-10-23 20:40:51.355 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 20:40:51.388 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 147 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.id}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 20:40:51.508 [http-nio-8080-exec-2] DEBUG [c290a425-e4a:93ec538d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c290a425-e4a, spanId=93ec538d, URI=/favicon.ico
2025-10-23 20:40:51.588 [http-nio-8080-exec-3] DEBUG [5d7bfdba-9ea:07576eac] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=5d7bfdba-9ea, spanId=07576eac, URI=/api/books
2025-10-23 20:40:51.588 [http-nio-8080-exec-5] DEBUG [8a73b122-221:c1a00266] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=8a73b122-221, spanId=c1a00266, URI=/api/history
2025-10-23 20:40:51.589 [http-nio-8080-exec-4] DEBUG [695e9bee-cbd:e09831b3] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=695e9bee-cbd, spanId=e09831b3, URI=/api/borrowers
2025-10-23 20:40:51.746 [http-nio-8080-exec-3] INFO  [5d7bfdba-9ea:07576eac] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:40:51.809 [http-nio-8080-exec-3] DEBUG [5d7bfdba-9ea:07576eac] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:40:52.150 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 20:40:52.272 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 642 ms]
Body:
{
  "timestamp" : "2025-10-23T20:40:51",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:40:52.501 [http-nio-8080-exec-3] DEBUG [5d7bfdba-9ea:07576eac] c.e.l.controller.BookController - Total books fetched: 0
2025-10-23 20:40:52.515 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:40:52.517 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 927 ms]
Body:
[ ]
2025-10-23 20:40:52.533 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:40:52.534 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 946 ms]
Body:
[ ]
2025-10-23 20:40:52.558 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:40:52.559 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 970 ms]
Body:
[ ]
2025-10-23 20:41:04.275 [http-nio-8080-exec-6] DEBUG [321fab9d-7a0:3345dcb9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=321fab9d-7a0, spanId=3345dcb9, URI=/api/borrowers
2025-10-23 20:41:04.992 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "name",
  "email" : "email@email.com"
}
2025-10-23 20:41:04.996 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 716 ms]
Body:
{
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
}
2025-10-23 20:41:05.025 [http-nio-8080-exec-8] DEBUG [81d79b36-4c4:662c7595] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=81d79b36-4c4, spanId=662c7595, URI=/api/borrowers
2025-10-23 20:41:05.062 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:41:05.067 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 39 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:41:14.782 [http-nio-8080-exec-7] DEBUG [6edf5183-99e:037a6c01] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6edf5183-99e, spanId=037a6c01, URI=/api/books
2025-10-23 20:41:14.810 [http-nio-8080-exec-7] INFO  [6edf5183-99e:037a6c01] c.e.l.controller.BookController - Registering new book: title by author
2025-10-23 20:41:14.812 [http-nio-8080-exec-7] INFO  [6edf5183-99e:037a6c01] c.e.library.service.BookServiceImpl - Registering new book: [1111 - title]
2025-10-23 20:41:14.834 [http-nio-8080-exec-7] DEBUG [6edf5183-99e:037a6c01] c.e.library.service.BookServiceImpl - Book saved with ID: 1
2025-10-23 20:41:14.843 [http-nio-8080-exec-7] DEBUG [6edf5183-99e:037a6c01] c.e.l.controller.BookController - Book registered successfully with ID: 1
2025-10-23 20:41:14.871 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "1111",
  "title" : "title",
  "author" : "author"
}
2025-10-23 20:41:14.872 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 88 ms]
Body:
{
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
}
2025-10-23 20:41:14.892 [http-nio-8080-exec-9] DEBUG [26e441b8-c44:c2d86cd9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=26e441b8-c44, spanId=c2d86cd9, URI=/api/books
2025-10-23 20:41:14.895 [http-nio-8080-exec-9] INFO  [26e441b8-c44:c2d86cd9] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:41:14.899 [http-nio-8080-exec-9] DEBUG [26e441b8-c44:c2d86cd9] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:41:14.916 [http-nio-8080-exec-9] DEBUG [26e441b8-c44:c2d86cd9] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:41:14.920 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:41:14.921 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 28 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
} ]
2025-10-23 20:41:20.426 [http-nio-8080-exec-10] DEBUG [e56fadee-3a7:f12af81b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=e56fadee-3a7, spanId=f12af81b, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:41:20.470 [http-nio-8080-exec-10] INFO  [e56fadee-3a7:f12af81b] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:41:20.472 [http-nio-8080-exec-10] INFO  [e56fadee-3a7:f12af81b] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:41:20.621 [http-nio-8080-exec-10] INFO  [e56fadee-3a7:f12af81b] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 20:41:20.627 [http-nio-8080-exec-10] INFO  [e56fadee-3a7:f12af81b] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 20:41:20.631 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:41:20.632 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 205 ms]
Body:
Book borrowed successfully
2025-10-23 20:41:20.658 [http-nio-8080-exec-10] DEBUG [9ebd6d9a-1e9:7e6cad23] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=9ebd6d9a-1e9, spanId=7e6cad23, URI=/api/books
2025-10-23 20:41:20.663 [http-nio-8080-exec-10] INFO  [9ebd6d9a-1e9:7e6cad23] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:41:20.664 [http-nio-8080-exec-10] DEBUG [9ebd6d9a-1e9:7e6cad23] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:41:20.696 [http-nio-8080-exec-10] DEBUG [9ebd6d9a-1e9:7e6cad23] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:41:20.705 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:41:20.707 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 48 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:41:58.636 [http-nio-8080-exec-3] DEBUG [b16bafa0-bfa:14e600fc] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b16bafa0-bfa, spanId=14e600fc, URI=/api/books/return/BOOK-00001
2025-10-23 20:41:58.649 [http-nio-8080-exec-3] INFO  [b16bafa0-bfa:14e600fc] c.e.l.controller.BookController - Return request - Book Code: BOOK-00001
2025-10-23 20:41:58.697 [http-nio-8080-exec-3] INFO  [b16bafa0-bfa:14e600fc] c.e.l.controller.BookController - Book returned successfully - Book Code: BOOK-00001
2025-10-23 20:41:58.701 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 20:41:58.703 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 65 ms]
Body:
Book returned successfully
2025-10-23 20:41:58.731 [http-nio-8080-exec-5] DEBUG [5ccc444c-9bd:da878cb2] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=5ccc444c-9bd, spanId=da878cb2, URI=/api/books
2025-10-23 20:41:58.736 [http-nio-8080-exec-5] INFO  [5ccc444c-9bd:da878cb2] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:41:58.737 [http-nio-8080-exec-5] DEBUG [5ccc444c-9bd:da878cb2] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:41:58.748 [http-nio-8080-exec-5] DEBUG [5ccc444c-9bd:da878cb2] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:41:58.754 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:41:58.755 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 23 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
} ]
2025-10-23 20:42:04.130 [http-nio-8080-exec-4] DEBUG [a62296f3-4b6:8650a57f] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a62296f3-4b6, spanId=8650a57f, URI=/api/history
2025-10-23 20:42:04.152 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:42:04.153 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 24 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:41:20.614345",
  "returnDate" : "2025-10-23T20:41:58.687061",
  "status" : "RETURNED"
} ]
2025-10-23 20:42:14.218 [http-nio-8080-exec-6] DEBUG [160f1b3f-018:3ef69aee] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=160f1b3f-018, spanId=3ef69aee, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:42:14.230 [http-nio-8080-exec-6] INFO  [160f1b3f-018:3ef69aee] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:42:14.232 [http-nio-8080-exec-6] INFO  [160f1b3f-018:3ef69aee] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:42:14.257 [http-nio-8080-exec-6] INFO  [160f1b3f-018:3ef69aee] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 20:42:14.271 [http-nio-8080-exec-6] INFO  [160f1b3f-018:3ef69aee] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 20:42:14.274 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:42:14.278 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 56 ms]
Body:
Book borrowed successfully
2025-10-23 20:42:14.298 [http-nio-8080-exec-8] DEBUG [5e19c854-621:e45d5bb6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=5e19c854-621, spanId=e45d5bb6, URI=/api/books
2025-10-23 20:42:14.303 [http-nio-8080-exec-8] INFO  [5e19c854-621:e45d5bb6] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:42:14.304 [http-nio-8080-exec-8] DEBUG [5e19c854-621:e45d5bb6] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:42:14.328 [http-nio-8080-exec-8] DEBUG [5e19c854-621:e45d5bb6] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:42:14.332 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:42:14.333 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 34 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:42:17.905 [http-nio-8080-exec-7] DEBUG [25b97cb4-74f:1eaf0bcb] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=25b97cb4-74f, spanId=1eaf0bcb, URI=/api/history
2025-10-23 20:42:17.929 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:42:17.930 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 25 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:41:20.614345",
  "returnDate" : "2025-10-23T20:41:58.687061",
  "status" : "RETURNED"
}, {
  "id" : 2,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:14.255834",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:42:31.251 [http-nio-8080-exec-9] DEBUG [632177fb-666:5cb71df6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=632177fb-666, spanId=5cb71df6, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:42:31.255 [http-nio-8080-exec-9] INFO  [632177fb-666:5cb71df6] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:42:31.256 [http-nio-8080-exec-9] INFO  [632177fb-666:5cb71df6] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:42:31.283 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:42:31.284 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 33 ms]
Body:
{
  "timestamp" : "2025-10-23T20:42:31",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 20:42:31.306 [http-nio-8080-exec-10] DEBUG [c2336c53-7ca:75f5fc87] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c2336c53-7ca, spanId=75f5fc87, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:42:31.309 [http-nio-8080-exec-10] INFO  [c2336c53-7ca:75f5fc87] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:42:31.313 [http-nio-8080-exec-10] INFO  [c2336c53-7ca:75f5fc87] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:42:31.307 [http-nio-8080-exec-9] DEBUG [b36534f6-e81:5052832b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b36534f6-e81, spanId=5052832b, URI=/api/books
2025-10-23 20:42:31.336 [http-nio-8080-exec-9] INFO  [b36534f6-e81:5052832b] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:42:31.337 [http-nio-8080-exec-9] DEBUG [b36534f6-e81:5052832b] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:42:31.347 [http-nio-8080-exec-9] DEBUG [b36534f6-e81:5052832b] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:42:31.349 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:42:31.350 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 43 ms]
Body:
{
  "timestamp" : "2025-10-23T20:42:31",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 20:42:31.350 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:42:31.351 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 43 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:42:31.380 [http-nio-8080-exec-2] DEBUG [3d564ff8-6b3:4db2d3ae] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=3d564ff8-6b3, spanId=4db2d3ae, URI=/api/books
2025-10-23 20:42:31.383 [http-nio-8080-exec-2] INFO  [3d564ff8-6b3:4db2d3ae] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:42:31.384 [http-nio-8080-exec-2] DEBUG [3d564ff8-6b3:4db2d3ae] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:42:31.390 [http-nio-8080-exec-2] DEBUG [3d564ff8-6b3:4db2d3ae] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:42:31.396 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:42:31.397 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 17 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:42:33.872 [http-nio-8080-exec-1] DEBUG [88bd1639-715:90d56ec9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=88bd1639-715, spanId=90d56ec9, URI=/api/history
2025-10-23 20:42:33.883 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:42:33.884 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 11 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:41:20.614345",
  "returnDate" : "2025-10-23T20:41:58.687061",
  "status" : "RETURNED"
}, {
  "id" : 2,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:14.255834",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:42:37.558 [http-nio-8080-exec-3] DEBUG [64a4bb07-23c:e5208511] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=64a4bb07-23c, spanId=e5208511, URI=/api/books/return/BOOK-00001
2025-10-23 20:42:37.562 [http-nio-8080-exec-3] INFO  [64a4bb07-23c:e5208511] c.e.l.controller.BookController - Return request - Book Code: BOOK-00001
2025-10-23 20:42:37.594 [http-nio-8080-exec-3] INFO  [64a4bb07-23c:e5208511] c.e.l.controller.BookController - Book returned successfully - Book Code: BOOK-00001
2025-10-23 20:42:37.601 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 20:42:37.602 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 44 ms]
Body:
Book returned successfully
2025-10-23 20:42:37.622 [http-nio-8080-exec-3] DEBUG [d04fddfd-b4e:cfedc296] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d04fddfd-b4e, spanId=cfedc296, URI=/api/books
2025-10-23 20:42:37.651 [http-nio-8080-exec-3] INFO  [d04fddfd-b4e:cfedc296] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:42:37.651 [http-nio-8080-exec-3] DEBUG [d04fddfd-b4e:cfedc296] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:42:37.662 [http-nio-8080-exec-3] DEBUG [d04fddfd-b4e:cfedc296] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:42:37.668 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:42:37.669 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 46 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
} ]
2025-10-23 20:42:39.257 [http-nio-8080-exec-5] DEBUG [c8a63e3b-23a:aaf8b5f1] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c8a63e3b-23a, spanId=aaf8b5f1, URI=/api/history
2025-10-23 20:42:39.268 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:42:39.269 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 11 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:41:20.614345",
  "returnDate" : "2025-10-23T20:41:58.687061",
  "status" : "RETURNED"
}, {
  "id" : 2,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:14.255834",
  "returnDate" : "2025-10-23T20:42:37.585823",
  "status" : "RETURNED"
} ]
2025-10-23 20:42:55.361 [http-nio-8080-exec-4] DEBUG [7ea7ae26-90e:3b05f560] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=7ea7ae26-90e, spanId=3b05f560, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:42:55.366 [http-nio-8080-exec-4] INFO  [7ea7ae26-90e:3b05f560] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:42:55.367 [http-nio-8080-exec-4] INFO  [7ea7ae26-90e:3b05f560] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:42:55.388 [http-nio-8080-exec-4] INFO  [7ea7ae26-90e:3b05f560] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 20:42:55.394 [http-nio-8080-exec-4] INFO  [7ea7ae26-90e:3b05f560] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 20:42:55.396 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:42:55.397 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 35 ms]
Body:
Book borrowed successfully
2025-10-23 20:42:55.415 [http-nio-8080-exec-6] DEBUG [80f65e8e-cfe:b428d167] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=80f65e8e-cfe, spanId=b428d167, URI=/api/books
2025-10-23 20:42:55.417 [http-nio-8080-exec-6] INFO  [80f65e8e-cfe:b428d167] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:42:55.418 [http-nio-8080-exec-6] DEBUG [80f65e8e-cfe:b428d167] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:42:55.427 [http-nio-8080-exec-6] DEBUG [80f65e8e-cfe:b428d167] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:42:55.431 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:42:55.431 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 16 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:42:58.171 [http-nio-8080-exec-8] DEBUG [dd1611fc-b75:e4775cf2] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=dd1611fc-b75, spanId=e4775cf2, URI=/api/history
2025-10-23 20:42:58.183 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:42:58.185 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 12 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:41:20.614345",
  "returnDate" : "2025-10-23T20:41:58.687061",
  "status" : "RETURNED"
}, {
  "id" : 2,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:14.255834",
  "returnDate" : "2025-10-23T20:42:37.585823",
  "status" : "RETURNED"
}, {
  "id" : 3,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:55.385186",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:43:35.683 [http-nio-8080-exec-10] DEBUG [139694fd-0a5:b98c8850] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=139694fd-0a5, spanId=b98c8850, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:43:35.686 [http-nio-8080-exec-10] INFO  [139694fd-0a5:b98c8850] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:43:35.687 [http-nio-8080-exec-10] INFO  [139694fd-0a5:b98c8850] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:43:35.717 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:43:35.719 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 33 ms]
Body:
{
  "timestamp" : "2025-10-23T20:43:35",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 20:44:11.837 [http-nio-8080-exec-9] DEBUG [72286f25-419:44aa9277] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=72286f25-419, spanId=44aa9277, URI=/api/borrowers
2025-10-23 20:44:11.845 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:44:11.846 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 10 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:44:24.672 [http-nio-8080-exec-2] DEBUG [5ccca75b-d1e:6ce666f0] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=5ccca75b-d1e, spanId=6ce666f0, URI=/api/books
2025-10-23 20:44:24.674 [http-nio-8080-exec-2] INFO  [5ccca75b-d1e:6ce666f0] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:44:24.674 [http-nio-8080-exec-2] DEBUG [5ccca75b-d1e:6ce666f0] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:44:24.679 [http-nio-8080-exec-2] DEBUG [5ccca75b-d1e:6ce666f0] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:44:24.682 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:44:24.683 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 11 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:11.205 [http-nio-8080-exec-3] DEBUG [7c154a8e-8ae:26326a84] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=7c154a8e-8ae, spanId=26326a84, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:51:11.211 [http-nio-8080-exec-3] INFO  [7c154a8e-8ae:26326a84] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:51:11.212 [http-nio-8080-exec-3] INFO  [7c154a8e-8ae:26326a84] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:51:11.237 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:51:11.238 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 33 ms]
Body:
{
  "timestamp" : "2025-10-23T20:51:11",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 20:51:11.287 [http-nio-8080-exec-5] DEBUG [8c00ba13-81c:4a323d24] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=8c00ba13-81c, spanId=4a323d24, URI=/api/books
2025-10-23 20:51:11.291 [http-nio-8080-exec-5] INFO  [8c00ba13-81c:4a323d24] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:11.292 [http-nio-8080-exec-5] DEBUG [8c00ba13-81c:4a323d24] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:11.333 [http-nio-8080-exec-5] DEBUG [8c00ba13-81c:4a323d24] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:11.336 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:11.337 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 49 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:13.225 [http-nio-8080-exec-4] DEBUG [d9dfdb4b-b13:c266013d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d9dfdb4b-b13, spanId=c266013d, URI=/api/books/return/Select%20Book
2025-10-23 20:51:13.228 [http-nio-8080-exec-4] INFO  [d9dfdb4b-b13:c266013d] c.e.l.controller.BookController - Return request - Book Code: Select Book
2025-10-23 20:51:13.241 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/Select%20Book]
Body:
(no body)
2025-10-23 20:51:13.243 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 404] [Time: 17 ms]
Body:
{
  "timestamp" : "2025-10-23T20:51:13",
  "status" : 404,
  "error" : "Not Found",
  "message" : "Book not found with code: Select Book"
}
2025-10-23 20:51:13.266 [http-nio-8080-exec-6] DEBUG [66504c29-de9:399ca339] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=66504c29-de9, spanId=399ca339, URI=/api/books
2025-10-23 20:51:13.269 [http-nio-8080-exec-6] INFO  [66504c29-de9:399ca339] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:13.270 [http-nio-8080-exec-6] DEBUG [66504c29-de9:399ca339] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:13.289 [http-nio-8080-exec-6] DEBUG [66504c29-de9:399ca339] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:13.293 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:13.297 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 27 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:16.225 [http-nio-8080-exec-8] DEBUG [a51d4067-8ce:19fa903c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a51d4067-8ce, spanId=19fa903c, URI=/api/books/return/BOOK-00001
2025-10-23 20:51:16.229 [http-nio-8080-exec-8] INFO  [a51d4067-8ce:19fa903c] c.e.l.controller.BookController - Return request - Book Code: BOOK-00001
2025-10-23 20:51:16.290 [http-nio-8080-exec-8] INFO  [a51d4067-8ce:19fa903c] c.e.l.controller.BookController - Book returned successfully - Book Code: BOOK-00001
2025-10-23 20:51:16.292 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 20:51:16.293 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 67 ms]
Body:
Book returned successfully
2025-10-23 20:51:16.309 [http-nio-8080-exec-7] DEBUG [b00598d2-e41:20f5f0d3] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b00598d2-e41, spanId=20f5f0d3, URI=/api/books
2025-10-23 20:51:16.318 [http-nio-8080-exec-7] INFO  [b00598d2-e41:20f5f0d3] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:16.319 [http-nio-8080-exec-7] DEBUG [b00598d2-e41:20f5f0d3] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:16.326 [http-nio-8080-exec-7] DEBUG [b00598d2-e41:20f5f0d3] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:16.333 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:16.334 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 24 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : null
} ]
2025-10-23 20:51:19.645 [http-nio-8080-exec-10] DEBUG [e480a184-6ef:5d743e39] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=e480a184-6ef, spanId=5d743e39, URI=/api/books/borrow/BOOK-00001
2025-10-23 20:51:19.659 [http-nio-8080-exec-10] INFO  [e480a184-6ef:5d743e39] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 20:51:19.659 [http-nio-8080-exec-10] INFO  [e480a184-6ef:5d743e39] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 20:51:19.689 [http-nio-8080-exec-10] INFO  [e480a184-6ef:5d743e39] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 20:51:19.696 [http-nio-8080-exec-10] INFO  [e480a184-6ef:5d743e39] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 20:51:19.722 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 20:51:19.723 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 78 ms]
Body:
Book borrowed successfully
2025-10-23 20:51:19.737 [http-nio-8080-exec-9] DEBUG [c4cca4a3-1be:d7c0651c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c4cca4a3-1be, spanId=d7c0651c, URI=/api/books
2025-10-23 20:51:19.738 [http-nio-8080-exec-9] INFO  [c4cca4a3-1be:d7c0651c] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:19.739 [http-nio-8080-exec-9] DEBUG [c4cca4a3-1be:d7c0651c] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:19.749 [http-nio-8080-exec-9] DEBUG [c4cca4a3-1be:d7c0651c] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:19.756 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:19.757 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 20 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:39.414 [http-nio-8080-exec-2] DEBUG [2274b252-487:b8dd7dc4] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2274b252-487, spanId=b8dd7dc4, URI=/library.html
2025-10-23 20:51:39.639 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 20:51:39.642 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 225 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 20:51:39.817 [http-nio-8080-exec-1] DEBUG [0213b44f-dd1:ab6394d0] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0213b44f-dd1, spanId=ab6394d0, URI=/favicon.ico
2025-10-23 20:51:39.829 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 20:51:39.830 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 12 ms]
Body:
{
  "timestamp" : "2025-10-23T20:51:39",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 20:51:39.878 [http-nio-8080-exec-3] DEBUG [47697a44-12f:2b9b941b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=47697a44-12f, spanId=2b9b941b, URI=/api/books
2025-10-23 20:51:39.881 [http-nio-8080-exec-3] INFO  [47697a44-12f:2b9b941b] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:39.881 [http-nio-8080-exec-3] DEBUG [47697a44-12f:2b9b941b] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:39.882 [http-nio-8080-exec-5] DEBUG [50c88b3e-d27:ad806273] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=50c88b3e-d27, spanId=ad806273, URI=/api/borrowers
2025-10-23 20:51:39.887 [http-nio-8080-exec-3] DEBUG [47697a44-12f:2b9b941b] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:39.890 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:39.891 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 12 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:39.898 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 20:51:39.898 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 16 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 20:51:39.906 [http-nio-8080-exec-3] DEBUG [d84f1abb-20c:30918a0c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d84f1abb-20c, spanId=30918a0c, URI=/api/history
2025-10-23 20:51:39.924 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 20:51:39.928 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 18 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:41:20.614345",
  "returnDate" : "2025-10-23T20:41:58.687061",
  "status" : "RETURNED"
}, {
  "id" : 2,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:14.255834",
  "returnDate" : "2025-10-23T20:42:37.585823",
  "status" : "RETURNED"
}, {
  "id" : 3,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:42:55.385186",
  "returnDate" : "2025-10-23T20:51:16.255742",
  "status" : "RETURNED"
}, {
  "id" : 4,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name",
  "borrowDate" : "2025-10-23T20:51:19.686744",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 20:51:44.254 [http-nio-8080-exec-6] DEBUG [113482f0-e63:5c8654e7] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=113482f0-e63, spanId=5c8654e7, URI=/api/books
2025-10-23 20:51:44.256 [http-nio-8080-exec-6] INFO  [113482f0-e63:5c8654e7] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:44.257 [http-nio-8080-exec-6] DEBUG [113482f0-e63:5c8654e7] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:44.266 [http-nio-8080-exec-6] DEBUG [113482f0-e63:5c8654e7] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:44.271 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:44.272 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 17 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:45.199 [http-nio-8080-exec-8] DEBUG [b567c3cf-c6f:4f7b6f62] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b567c3cf-c6f, spanId=4f7b6f62, URI=/api/books
2025-10-23 20:51:45.201 [http-nio-8080-exec-8] INFO  [b567c3cf-c6f:4f7b6f62] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:45.201 [http-nio-8080-exec-8] DEBUG [b567c3cf-c6f:4f7b6f62] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:45.206 [http-nio-8080-exec-8] DEBUG [b567c3cf-c6f:4f7b6f62] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:45.208 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:45.209 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 9 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:51:52.086 [http-nio-8080-exec-7] DEBUG [1ac0f71b-d26:af973a64] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=1ac0f71b-d26, spanId=af973a64, URI=/api/books
2025-10-23 20:51:52.087 [http-nio-8080-exec-7] INFO  [1ac0f71b-d26:af973a64] c.e.l.controller.BookController - Fetching all books
2025-10-23 20:51:52.089 [http-nio-8080-exec-7] DEBUG [1ac0f71b-d26:af973a64] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 20:51:52.095 [http-nio-8080-exec-7] DEBUG [1ac0f71b-d26:af973a64] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 20:51:52.099 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 20:51:52.100 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 13 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 20:56:12.852 [http-nio-8080-exec-1] DEBUG [b23529b8-466:1b431a03] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b23529b8-466, spanId=1b431a03, URI=/swagger-ui/index.html
2025-10-23 20:56:14.674 [http-nio-8080-exec-5] DEBUG [a6857491-658:7c5deb08] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a6857491-658, spanId=7c5deb08, URI=/swagger-ui/swagger-ui.css
2025-10-23 20:56:14.701 [http-nio-8080-exec-4] DEBUG [15ef51a4-2ca:e831a78e] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=15ef51a4-2ca, spanId=e831a78e, URI=/swagger-ui/index.css
2025-10-23 20:56:14.725 [http-nio-8080-exec-3] DEBUG [d0efbb96-dce:7e062316] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d0efbb96-dce, spanId=7e062316, URI=/swagger-ui/swagger-ui-bundle.js
2025-10-23 20:56:14.725 [http-nio-8080-exec-6] DEBUG [8e8551cf-acf:bd2e37c6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=8e8551cf-acf, spanId=bd2e37c6, URI=/swagger-ui/swagger-ui-standalone-preset.js
2025-10-23 20:56:14.733 [http-nio-8080-exec-8] DEBUG [4149a0c2-bdf:5b3f9b13] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=4149a0c2-bdf, spanId=5b3f9b13, URI=/swagger-ui/swagger-initializer.js
2025-10-23 20:56:15.689 [http-nio-8080-exec-7] DEBUG [b744721e-036:89f551e3] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b744721e-036, spanId=89f551e3, URI=/v3/api-docs/swagger-config
2025-10-23 20:56:15.720 [http-nio-8080-exec-10] DEBUG [ba87a732-20b:cca35ccb] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=ba87a732-20b, spanId=cca35ccb, URI=/v3/api-docs
2025-10-23 20:56:18.245 [http-nio-8080-exec-10] INFO  [ba87a732-20b:cca35ccb] o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2515 ms
2025-10-23 21:05:41.658 [http-nio-8080-exec-5] DEBUG [0735b633-e39:4afcc308] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0735b633-e39, spanId=4afcc308, URI=/h2-console/
2025-10-23 21:05:41.702 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/]
Body:
(no body)
2025-10-23 21:05:41.703 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 45 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html><head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
<script type="text/javascript">
location.href = 'login.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84';
</script>
</head>
<body style="margin: 20px;">

<h1>Welcome to H2</h1>
<h2>No Javascript</h2>
If you are not automatically redirected to the login page, then
Javascript is currently disabled or your browser does not support Javascript.
For this application to work, Javascript is essential.
Please enable Javascript now, or use another web browser that supports it.

</body></html>

2025-10-23 21:05:41.900 [http-nio-8080-exec-4] DEBUG [d64552b7-0e1:e5fe4179] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d64552b7-0e1, spanId=e5fe4179, URI=/h2-console/stylesheet.css
2025-10-23 21:05:42.237 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/stylesheet.css]
Body:
(no body)
2025-10-23 21:05:42.240 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 338 ms]
Body:
/*
 * Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (https://h2database.com/html/license.html).
 * Initial Developer: H2 Group
 */

td, input, select, textarea, body, code, pre {
    font: 12px/1.4 Arial, sans-serif;
}

h1, h2, h3, h4, h5 {
    font: 12px/1.4 Arial, sans-serif;
    font-weight: bold;
}

a {
    text-decoration: none;
    color: #0000ff;
}

a:hover {
    text-decoration: underline;
}

body {
    margin: 4px;
}

code {
    background-color: #ece9d8;
    padding: 0px 2px;
}

h1 {
    background-color: #0000bb;
    padding: 2px 4px 2px 4px;
    color: #fff;
    font-size: 22px;
    line-height: normal;
}

h2 {
    font-size: 19px;
}

h3 {
    font-size: 16px;
}

li {
    margin-top: 6px;
}

ol {
    list-style-type: upper-roman;
    list-style-position: outside;
}

table {
    background-color: #ffffff;
    border-collapse: collapse;
    border: 1px solid #aca899;
}

td {
    background-color: #ffffff;
    padding: 2px;
    text-align: left;
    vertical-align:top;
    border: 1px solid #aca899;
}

textarea {
    width: 100%;
    overflow: auto;
}

th {
    font-weight: normal;
    text-align: left;
    background-color: #ece9d8;
    padding: 2px;
    border: 1px solid #aca899;
}

ul {
    list-style-type: disc;
    list-style-position: outside;
    padding-left: 20px;
}

.result {
    background-color: #f4f0e0;
    margin: 10px;
}

table.resultSet {
    white-space: pre;
}

.toolbar {
    background-color: #ece9d8;
}

table.toolbar {
    border-collapse: collapse;
    border: 0px;
    padding: 0px 0px;
}

th.toolbar {
    border: 0px;
}

tr.toolbar {
    border: 0px;
}

td.toolbar {
    vertical-align: middle;
    border: 0px;
    padding: 0px 0px;
}

table.nav {
    border: 0px;
}

tr.nav {
    border: 0px;
}

td.nav {
    border: 0px;
}

table.login {
    background-color: #ece9d8;
    border:1px solid #aca899;
}

tr.login {
    border: 0px;
}

th.login {
    color: #ffffff;
    text-align: left;
    border: 0px;
    background-color: #ece9d8;
    padding: 4px 10px;
    background-image: url(background.gif);
}

td.login {
    background-color: #ece9d8;
    padding: 5px 10px;
    text-align: left;
    border: 0px;
}

.iconLine {
    border-width:0px;
    border-style:solid;
}

.icon {
    border-top-color:#ece9d8;
    border-left-color:#ece9d8;
    border-right-color:#ece9d8;
    border-bottom-color:#ece9d8;
    border-width:1px;
    border-style:solid;
}

.icon_hover {
    border-color:#aca899;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-width:1px;
    border-style:solid;
}

table.empty {
    background-color: #ffffff;
    border: 0px;
}

td.empty {
    background-color: #ffffff;
    border: 0px;
    padding: 5px 10px;
    text-align: left;
}

.error {
    color: #771111;
}

div.error {
    background-color: #eecccc;
    border-color: #ddbbbb;
}

div.success {
    color: #226622;
    background-color: #cceecc;
    border-color: #bbddbb;
}

div.error, div.success {
    border-radius: 4px;
    padding: 10px;
    border-width: 1px;
    border-style: solid;
}

input.button {
    padding: 3px;
    background-color: #ece9d8;
    border-color: #aca899;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-width: 1px;
    border-style: solid;
}

input.button:hover {
    border-color: #5e5c55;
}

input.button:active {
    position:relative;
    top:1px;
}

.tree {
    border: 0px;
    vertical-align: middle;
    white-space: nowrap;
}

.tree img  {
    height: 18px;
    width: 18px;
    border: 0px;
    vertical-align: middle;
}

.tree a {
    border: 0px;
    text-decoration: none;
    vertical-align: middle;
    white-space: nowrap;
    color: #000000;
}

.tree a:hover {
    color: #345373;
}

table.content {
    width: 100%;
    height: 100%;
    border: 0px;
}

tr.content {
    border:0px;
    border-left:1px solid #aca899;
}

td.content {
    border:0px;
    border-left:1px solid #aca899;
}

.contentDiv {
    margin:10px;
}

tr.contentResult {
    border:0px;
    border-top:1px solid #aca899;
    border-left:1px solid #aca899;
}

td.contentResult {
    border:0px;
    border-top:1px solid #aca899;
    border-left:1px solid #aca899;
}

table.autoComp {
    background-color: #e0ecff;
    border: 1px solid #7f9db9;
    cursor: pointer;
    position: absolute;
    top: 1px;
    left: 1px;
    z-index:0;
    padding: 0px;
    margin: 0px;
    border-spacing:2px;
}

td.autoComp0 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #cce0ff;
    border: 0px;
}

td.autoComp1 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #e7f0ff;
    border: 0px;
}

td.autoComp2 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #ffffff;
    border: 0px;
}

td.autoCompHide {
    padding: 2px;
    display: none;
}

table.tool, table.tool tr, table.tool tr td {
    padding: 0px;
    border: 0px;
}

2025-10-23 21:05:42.310 [http-nio-8080-exec-6] DEBUG [0fe75582-4ed:d21a62e0] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0fe75582-4ed, spanId=d21a62e0, URI=/h2-console/login.jsp
2025-10-23 21:05:42.334 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/login.jsp]
Body:
(no body)
2025-10-23 21:05:42.335 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 24 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html><head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=0.9" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
    <script type="text/javascript">
        if (self.name == 'h2result' || self.name == 'h2query' || self.name == 'h2menu') {
            parent.location = "login.jsp";
        }
    </script>
</head>
<body style="margin: 20px">
    <form name="login" method="post" action="login.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" id="login">
    <p>                    <select name="language" size="1"
                        onchange="javascript:document.location='index.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;language='+login.language.value;"
                    >
                    <option value="cs">&#268;e&#353;tina</option><option value="de">Deutsch</option><option value="en" selected>English</option><option value="es">Espa&#241;ol</option><option value="fr">Fran&#231;ais</option><option value="hi">Hindi &#2361;&#2367;&#2306;&#2342;&#2368;</option><option value="hu">Magyar</option><option value="ko">&#54620;&#44397;&#50612;</option><option value="in">Indonesia</option><option value="it">Italiano</option><option value="ja">&#26085;&#26412;&#35486;</option><option value="nl">Nederlands</option><option value="pl">Polski</option><option value="pt_BR">Portugu&#234;s (Brasil)</option><option value="pt_PT">Portugu&#234;s (Europeu)</option><option value="ru">&#1088;&#1091;&#1089;&#1089;&#1082;&#1080;&#1081;</option><option value="sk">Slovensky</option><option value="tr">T&#252;rk&#231;e</option><option value="uk">&#1059;&#1082;&#1088;&#1072;&#1111;&#1085;&#1089;&#1100;&#1082;&#1072;</option><option value="zh_CN">&#20013;&#25991; (&#31616;&#20307;)</option><option value="zh_TW">&#20013;&#25991; (&#32321;&#39636;)</option>
                    </select>
    &nbsp;&nbsp; <a href="admin.do?jsessionid=c621022208ee1e33d5590bf69abdeb84">Preferences</a>
<!--
-->
    &nbsp;&nbsp; <a href="tools.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84">Tools</a>
    &nbsp;&nbsp; <a href="help.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84">Help</a>
    </p>
        <table class="login" cellspacing="0" cellpadding="0">
            <tr class="login">
                <th class="login">Login</th>
                <th class="login"></th>
            </tr>
            <tr><td  class="login" colspan="2"></td></tr>
            <tr class="login">
                <td class="login">Saved Settings:</td>
                <td class="login">
                    <select name="setting" size="1"
                        style="width:300px"
                        onchange="javascript:document.location='index.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;setting='+login.setting.value;"
                    >
                    <option value="Generic H2 (Embedded)" selected>Generic H2 (Embedded)</option><option value="Generic H2 (Server)">Generic H2 (Server)</option><option value="Generic Derby (Embedded)">Generic Derby (Embedded)</option><option value="Generic Derby (Server)">Generic Derby (Server)</option><option value="Generic HSQLDB">Generic HSQLDB</option><option value="Generic MariaDB">Generic MariaDB</option><option value="Generic MySQL">Generic MySQL</option><option value="Generic PostgreSQL">Generic PostgreSQL</option><option value="Generic MS SQL Server 2005">Generic MS SQL Server 2005</option><option value="Generic MS SQL Server 2000">Generic MS SQL Server 2000</option><option value="Generic Oracle">Generic Oracle</option><option value="Generic DB2">Generic DB2</option><option value="Generic SQLite">Generic SQLite</option><option value="Generic Firebird Server">Generic Firebird Server</option><option value="Generic Azure SQL">Generic Azure SQL</option><option value="Generic Hive">Generic Hive</option><option value="Generic Hive 2">Generic Hive 2</option><option value="Generic Impala">Generic Impala</option><option value="Generic Redshift">Generic Redshift</option><option value="Generic Snowflake">Generic Snowflake</option><option value="Generic Teradata">Generic Teradata</option><option value="Generic JNDI Data Source">Generic JNDI Data Source</option>
                    </select>
                </td>
            </tr>
            <tr class="login">
                <td class="login">Setting Name:</td>
                <td class="login">
                    <input type="text" name="name" value="Generic H2 (Embedded)" style="width:200px;" />
                    <input type="button" class="button" value="Save" onclick="javascript:document.login.action='settingSave.do?jsessionid=c621022208ee1e33d5590bf69abdeb84';submit()" />
                    <input type="button" class="button" value="Remove" onclick="javascript:document.login.action='settingRemove.do?jsessionid=c621022208ee1e33d5590bf69abdeb84';submit()" />
                </td>
            </tr>
            <tr class="login">
                <td class="login" colspan="2">
                    <hr />
                </td>
            </tr>
            <tr class="login">
                <td class="login">Driver Class:</td>
                <td class="login"><input type="text" name="driver" value="org.h2.Driver" style="width:300px;" /></td>
            </tr>
            <tr class="login">
                <td class="login">
                    <a href="#" onclick="var x=document.getElementById('url').style;x.display=x.display==''?'none':'';">
                        JDBC URL</a>:</td>
                <td class="login"><input type="text" name="url" value="jdbc:h2:mem:librarydb" style="width:300px;" /></td>
            </tr>
            <tr class="login">
                <td class="login">User Name:</td>
                <td class="login"><input type="text" name="user" value="sa" style="width:200px;" /></td>
            </tr>
            <tr class="login">
                <td class="login">Password:</td>
                <td class="login"><input type="password" name="password" value="" style="width:200px;" /></td>
            </tr>
            <tr class="login">
                <td class="login"></td>
                <td class="login">
                    <input type="submit" class="button" value="Connect" />
                    &nbsp;
                    <input type="button" class="button" value="Test Connection" onclick="javascript:document.login.action='test.do?jsessionid=c621022208ee1e33d5590bf69abdeb84';submit()" />
                    <br />
                    <br />
                </td>
            </tr>
        </table>
        <br />
        <div id="url" style="display: none">
            <h2>H2 Database URLs</h2>
            <h3>Embedded</h3>
            <p>
            The URL <code>jdbc:h2:~/test</code> means the database is stored in
            the user home directory in files starting with 'test'.
            Absolute locations like <code>jdbc:h2:/data/db/test</code> are supported.
            In embedded mode, the database runs in the same process as the application.
            Only one process may access a database at any time.
            Databases are automatically created if they don't exist
            <a target="_blank" href="https://h2database.com/html/tutorial.html#creating_new_databases">if you have a permission</a>.
            URLs of the form <code>jdbc:h2:./data/test</code> are relative to
            the current working directory (the directory where the application was started).
            It is recommended to use locations relative to <code>~</code>
            or absolute locations.
            </p>

            <h4>Remote (client/server)</h4>
            <p>
            The URL <code>jdbc:h2:tcp://localhost/~/test</code> means connect
            over TCP/IP to the H2 TCP server running on this computer, and open a database
            called test in the user home directory. The server must be started first.
            Any number of clients can connect to the same database.
            The same location rules as for embedded databases apply.
            </p>

            <h4>In-Memory</h4>
            <p>
            The URL <code>jdbc:h2:mem:test</code> means open an in-memory database
            named 'test'. Data is not persisted, and lost when the last connection to the database
            is closed. Multiple threads can access the same database, but data is only visible
            within the same process.
            </p>

            <p>
            For more information, see <a target="_blank" href="https://h2database.com/html/features.html#database_url">Database URL Overview</a>.
            </p>
        </div>
        <p class="error"></p>
    </form>
</body></html>
2025-10-23 21:05:42.487 [http-nio-8080-exec-3] DEBUG [c7825b2a-e23:b71f48a9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c7825b2a-e23, spanId=b71f48a9, URI=/h2-console/background.gif
2025-10-23 21:05:42.494 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/background.gif]
Body:
(no body)
2025-10-23 21:05:42.500 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 7 ms]
Body:
GIF89a  ÔøΩ 4TÔøΩ\ÔøΩÔøΩ^ÔøΩÔøΩ_ÔøΩÔøΩaÔøΩÔøΩbÔøΩÔøΩdÔøΩÔøΩeÔøΩÔøΩgÔøΩÔøΩhÔøΩÔøΩjÔøΩÔøΩkÔøΩÔøΩlÔøΩÔøΩnÔøΩÔøΩoÔøΩÔøΩpÔøΩÔøΩrÔøΩÔøΩsÔøΩÔøΩtÔøΩÔøΩuÔøΩÔøΩvÔøΩÔøΩwÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩCreated with The GIMP ,       ` DaHÔøΩ,LÔøΩ<P$MTeÔøΩ ÔøΩ ;
2025-10-23 21:05:42.909 [http-nio-8080-exec-8] DEBUG [20a6e1ff-eab:d559b6c1] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=20a6e1ff-eab, spanId=d559b6c1, URI=/favicon.ico
2025-10-23 21:05:42.922 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 21:05:42.923 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 14 ms]
Body:
{
  "timestamp" : "2025-10-23T21:05:42",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 21:05:45.560 [http-nio-8080-exec-7] DEBUG [2b482a87-eff:8cd736f8] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2b482a87-eff, spanId=8cd736f8, URI=/h2-console/login.do
2025-10-23 21:05:45.643 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /h2-console/login.do]
Body:
jsessionid=c621022208ee1e33d5590bf69abdeb84&language=en&setting=Generic+H2+%28Embedded%29&name=Generic+H2+%28Embedded%29&driver=org.h2.Driver&url=jdbc%3Ah2%3Amem%3Alibrarydb&user=sa&password=
2025-10-23 21:05:45.644 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 82 ms]
Body:
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<frameset cols="*" rows="36,*" frameborder="1" framespacing="4" border="4" bordercolor="white">
    <frame noresize="noresize" frameborder="0" marginheight="0" marginwidth="0" src="header.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84" name="header" scrolling="no" />
    <frameset cols="200,*" rows="*" frameborder="1" framespacing="4" border="4" bordercolor="white">
        <frame frameborder="0" marginheight="0" marginwidth="0" src="tables.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" name="h2menu" />
        <frameset  rows="180,*" frameborder="1" framespacing="4" border="4" bordercolor="white">
            <frame frameborder="0" marginheight="0" marginwidth="0" src="query.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84" name="h2query" scrolling="no" />
            <frame frameborder="0" marginheight="0" marginwidth="0" src="help.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84" name="h2result" />
        </frameset>
    </frameset>
</frameset>
<noframes>
<body>
    Sorry, Lynx is not supported yet
</body>
</noframes>
</html>

2025-10-23 21:05:45.809 [http-nio-8080-exec-10] DEBUG [0d5ce30b-dc3:057e8e13] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0d5ce30b-dc3, spanId=057e8e13, URI=/h2-console/header.jsp
2025-10-23 21:05:45.824 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/header.jsp]
Body:
(no body)
2025-10-23 21:05:45.825 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 15 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<title>H2 Console</title>
<link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body bgcolor="#FF00FF" class="toolbar">
    <form name="header" method="post" action="header.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84">
        <table class="toolbar" cellspacing="0" cellpadding="0">
            <tr class="toolbar">
                <td class="toolbar">
                    <a href="logout.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" target="_parent">
                        <img src="icon_disconnect.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Disconnect"
                            title="Disconnect" border="1"/>
                    </a>
                    <img src="icon_line.gif" class="iconLine" alt=""/>
                    <a href="tables.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" target="h2menu">
                        <img src="icon_refresh.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Refresh"
                            title="Refresh" border="1"/>
                    </a>
                    <img src="icon_line.gif" class="iconLine" alt=""/>
                </td>
                <td class="toolbar">
                    <input type="checkbox" name="autoCommit" value="autoCommit" onclick=
                        "javascript:parent.h2result.document.location='query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;sql=@autocommit_' + (document.header.autoCommit.checked ? 'true' : 'false') + '.';"/>
                </td>
                <td class="toolbar">
                    Auto commit&nbsp;
                </td>
                <td class="toolbar">
                    <a href="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;sql=ROLLBACK" target="h2result">
                        <img src="icon_rollback.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Rollback"
                            title="Rollback" border="1"/>
                    </a>
                    <a href="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;sql=COMMIT" target="h2result">
                        <img src="icon_commit.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Commit"
                            title="Commit" border="1"/>
                    </a>
                    <img src="icon_line.gif" class="iconLine" alt=""/>
                </td>
                <td class="toolbar">
                    &nbsp;Max rows:&nbsp;
                </td>
                <td class="toolbar">
                    <select name="rowcount" size="1" onchange=
                    "javascript:parent.h2result.document.location='query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;sql=@maxrows+'+header.rowcount.value+'.';">
                    <option value="0">
                            All
                        </option>
                        <option value="10000">
                            10000
                        </option>
                        <option selected="selected" value="1000">
                            1000
                        </option>
                        <option value="100">
                            100
                        </option>
                        <option value="10">
                            10
                        </option>
                    </select>&nbsp;
                </td>
                <td class="toolbar">
                    <a href="javascript:parent.h2query.submitAll();">
                        <img src="icon_run.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Run"
                            title="Run" border="1"/>
                    </a>
                </td>
                <td class="toolbar">
                    <a href="javascript:parent.h2query.submitSelected();">
                        <img src="icon_run_selected.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Run Selected"
                            title="Run Selected" border="1"/>
                    </a>
                </td>
                <td class="toolbar">
                    <a href="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;sql=@cancel." target="h2result">
                        <img src="icon_stop.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Cancel the current statement"
                            title="Cancel the current statement" border="1"/>
                    </a>
                    <img src="icon_line.gif" class="iconLine" alt=""/>
                    <a href="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&amp;sql=@history." target="h2result">
                        <img src="icon_history.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Command history"
                            title="Command history" border="1"/>
                    </a>
                    <img src="icon_line.gif" class="iconLine" alt=""/>
                </td>
                <td class="toolbar">
                    Auto complete&nbsp;
                    <select name="autoComplete" size="1"
                        onchange="javascript:parent.h2query.setAutoComplete(this.value)">
                        <option selected="selected" value="0">
                            Off
                        </option>
                        <option value="1">
                            Normal
                        </option>
                        <option value="2">
                            Full
                        </option>
                    </select>&nbsp;
                </td>
                <td class="toolbar">
                    Auto select&nbsp;
                    <select name="autoSelect" size="1"
                        onchange="javascript:parent.h2query.setAutoSelect(this.value)">
                        <option value="0">
                            Off
                        </option>
                        <option selected="selected" value="1">
                            On
                        </option>
                    </select>
                </td>
                <td class="toolbar">
                    <a href="help.jsp?jsessionid=c621022208ee1e33d5590bf69abdeb84" target="h2result">
                        <img src="icon_help.gif"
                            onmouseover="this.className ='icon_hover'"
                            onmouseout="this.className ='icon'"
                            class="icon" alt="Help"
                            title="Help" border="1"/>
                    </a>
                </td>
            </tr>
        </table>
    </form>
<script type="text/javascript">
<!--
    document.header.autoCommit.checked = 'checked' != '';
//-->
</script>
</body>
</html>

2025-10-23 21:05:45.830 [http-nio-8080-exec-2] DEBUG [a4437507-681:32d200b8] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a4437507-681, spanId=32d200b8, URI=/h2-console/query.jsp
2025-10-23 21:05:45.835 [http-nio-8080-exec-9] DEBUG [6ebc5f4e-2e9:0923332f] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6ebc5f4e-2e9, spanId=0923332f, URI=/h2-console/tables.do
2025-10-23 21:05:45.868 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/query.jsp]
Body:
(no body)
2025-10-23 21:05:45.869 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 41 ms]
Body:
<!-- can not use doctype -->
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
        <title>H2 Console</title>
        <link rel="stylesheet" type="text/css" href="stylesheet.css" />
        <script type="text/javascript">
//<!--

var agent=navigator.userAgent.toLowerCase();
var is_opera = agent.indexOf("opera") >= 0;
var autoComplete = 0; // 0: off, 1: normal, 2: full
var autoSelect = 1; // 0: off, 1: on
var selectedRow = -1;
var lastList = '';
var lastQuery = null;
var columnsByTable = new Object();
var tableAliases = new Object();
var showAutoCompleteWait = 0;
var autoCompleteManual = false;
var req;

function refreshTables() {
    columnsByTable = new Object();
    var tables = parent.h2menu.tables;
    for(var i=0; i<tables.length; i++) {
        columnsByTable[tables[i].name] = tables[i].columns;
    }
}

function sizeTextArea() {
    var height=document.body.clientHeight;
    var sql = document.h2query.sql;
    sql.style.height=(height-sql.offsetTop)+'px';
}

function buildTableAliases(input) {
    tableAliases = new Object();
    var list = splitSQL(input);
    var last = "";
    for(var i=0; i<list.length; i++) {
        var word = list[i].toUpperCase();
        if (word != "AS") {
            if (columnsByTable[last]) {
                tableAliases[word] = last;
            }
            last = word;
        }
    }
}

function splitSQL(s) {
    var list = new Array();
    s = s.toUpperCase() + ' ';
    var e = s.length;
    for(var i=0; i<e; i++) {
        var ch = s.charAt(i);
        if (ch == '_' || (ch >= 'A' && ch <= 'Z')) {
            var start = i;
            do {
                ch = s.charAt(++i);
            } while (ch == '_' || (ch >= '0' && ch <= '9') || (ch >= 'A' && ch <= 'Z'));
            list[list.length] = s.substring(start, i);
        }
    }
    return list;
}

function help() {
    var input = document.h2query.sql;
    setSelection(input);
    var pos = input.selectionStart;
    if (pos > 0) {
        var s = input.value.substring(0, pos).toUpperCase();
        var e = pos-1;
        for(; e>=0; e-=1) {
            var ch = s.charAt(e);
            if (ch != '_' && (ch < '0' || ch > '9') && (ch < 'A' || ch > 'Z')) {
                break;
            }
        }
        s = s.substring(e+1, s.length);
        buildTableAliases(input.value);
        if (!columnsByTable[s]) {
            s = tableAliases[s];
        }
        if (columnsByTable[s]) {
            if (parent.h2menu.goToTable(s)) {
                parent.h2menu.document.location='tables.do?jsessionid=c621022208ee1e33d5590bf69abdeb84#' + s;
                // parent.h2menu.window.blur();
                document.h2query.sql.focus();
            }
        }
    }
}

function setSelection(element) {
    if (document.all && !is_opera) {
        try {
            var range = document.selection.createRange();
            var copy = range.duplicate();
            copy.moveToElementText(element);
            copy.setEndPoint('EndToEnd', range);
            element.selectionStart = copy.text.length - range.text.length;
            element.selectionEnd = element.selectionStart + range.text.length;
        } catch (e) {
            element.selectionEnd = element.selectionStart = 0;
        }
    }
}

function set(field, combo) {
    field.value=combo.value;
    combo.value='';
    field.focus();
}

function trim(s) {
    while (s.charAt(0)==' ' && s.length>0) {
        s=s.substring(1);
    }
    while (s.charAt(s.length-1)==' ' && s.length>0) {
        s=s.substring(0, s.length-1);
    }
    return s;
}

function trimCommas(s) {
    while (s.charAt(0)==',' && s.length>0) {
        s=s.substring(1);
    }
    while (s.charAt(s.length-1)==',' && s.length>0) {
        s=s.substring(0, s.length-1);
    }
    return s;
}

function insert(field, combo) {
    insertText(combo.value);
    combo.value='';
}

function insertText(s, isTable) {
    s = decodeURIComponent(s);
    var field = document.h2query.sql;
    var last = s.substring(s.length-1);
    if (last != '.' && last != '\'' && last != '"' && last > ' ') {
        s += ' ';
    }
    if (isTable && trim(field.value)=='') {
        field.value = 'SELECT * FROM ' + s;
    } else {
        if (document.selection) {
            // IE
            field.focus();
            selection = document.selection.createRange();
            selection.text = s;
        } else if (field.selectionStart || field.selectionStart == '0') {
            // Firefox
            var startPos = field.selectionStart;
            var endPos = field.selectionEnd;
            field.value = field.value.substring(0, startPos) + s + field.value.substring(endPos, field.value.length);
            var pos = endPos + s.length;
            field.selectionStart = pos;
            field.selectionEnd = pos;
        } else {
            field.value += s;
        }
    }
    field.focus();
}

function showAutoComplete() {
    if (showAutoCompleteWait==0) {
        showAutoCompleteWait=5;
        setTimeout('showAutoCompleteNow()', 100);
    } else {
        showAutoCompleteWait-=1;
    }
}

function showAutoCompleteNow() {
    var input = document.h2query.sql;
    setSelection(input);
    var pos = input.selectionStart;
    var s = input.value.substring(0, pos);
    if (s != lastQuery) {
        lastQuery = s;
        retrieveList(s);
    }
    showAutoCompleteWait = 0;
}

function keyDown(event) {
    var key=event.keyCode? event.keyCode : event.charCode;
    if (key == null) {
        return false;
    }
    if (key == 13 && (event.ctrlKey || event.metaKey)) {
        // ctrl + return, cmd + return
        submitAll();
        return false;
    } else if (key == 13 && event.shiftKey) {
        // shift + return
        submitSelected();
        return false;
    } else if (key == 32 && (event.ctrlKey || event.altKey)) {
        // ctrl + space
        manualAutoComplete();
        return false;
    } else if (key == 190 && autoComplete == 0) {
        // dot
        help();
        return true;
    }
    var table = getAutoCompleteTable();
    if (table.rows.length > 0) {
        if (key == 27) {
            // escape
            while (table.rows.length > 0) {
                table.deleteRow(0);
            }
            showOutput('');
            return false;
        } else if ((key == 9 && !event.shiftKey) || (key == 13 && !event.shiftKey && !event.ctrlKey && !event.altKey)) {
            // tab
            if (table.rows.length > selectedRow) {
                var row = table.rows[selectedRow];
                if (row.cells.length>1) {
                    insertText(row.cells[1].innerHTML);
                }
                removeAutoComplete();
                return false;
            }
        } else if (key == 38 && !event.shiftKey) {
            // up
            if (table.rows.length > selectedRow) {
                selectedRow = selectedRow <= 0 ? table.rows.length-1 : selectedRow-1;
                highlightRow(selectedRow);
                return false;
            }
        } else if (key == 40 && !event.shiftKey) {
            // down
            if (table.rows.length > selectedRow) {
                selectedRow = selectedRow >= table.rows.length-1 ? 0 : selectedRow+1;
                highlightRow(selectedRow);
                return false;
            }
        }
        if (autoComplete == 0) {
            // remove auto-complete if manually started
            while (table.rows.length > 0) {
                table.deleteRow(0);
            }
            showOutput('');
        }
    }
    // alert('key:' + key);
    return true;
    // bs:8 ret:13 lt:37 up:38 rt:39 dn:40 tab:9
    // pgup:33 pgdn:34 home:36 end:35 del:46 shift:16
    // ctrl, alt gr:17 alt:18 caps:20 5(num):12 ins:45
    // pause:19 f1..13:112..123 win-start:91 win-ctx:93 esc:27
    // cmd:224
}

function keyUp(event) {
    var key = event == null ? 0 : (event.keyCode ? event.keyCode : event.charCode);
    if (autoComplete != 0) {
        if (key != 37 && key != 38 && key != 39 && key != 40) {
            // left, right, up, down: don't show autocomplete
            showAutoComplete();
        }
    }
    if (key == 13 && event.shiftKey) {
        // shift + return
        return false;
    }
    return true;
}

function setAutoComplete(value) {
    autoComplete = value;
    if (value == 0) {
        removeAutoComplete();
    } else {
        var s = lastList;
        lastList = '';
        showList(s);
    }
}

function setAutoSelect(value) {
    autoSelect = value;
}

function manualAutoComplete() {
    autoCompleteManual = true;
    lastQuery = null;
    lastList = '';
    showAutoCompleteNow();
}

function removeAutoComplete() {
    var table = getAutoCompleteTable();
    while (table.rows.length > 0) {
        table.deleteRow(0);
    }
    showOutput('');
}

function highlightRow(row) {
    if (row != null) {
        selectedRow = row;
    }
    var table = getAutoCompleteTable();
    highlightThisRow(table.rows[selectedRow]);
}

function highlightThisRow(row) {
    var table = getAutoCompleteTable();
    for(var i=0; i<table.rows.length; i++) {
        var r = table.rows[i];
        var col = (r == row) ? '#95beff' : '';
        var cells = r.cells;
        if (cells.length > 0) {
            cells[0].style.backgroundColor = col;
        }
    }
    showOutput('none');
}

function getAutoCompleteTable() {
    return parent.h2result.document.getElementById('h2auto');
}

function showOutput(x) {
//     parent.h2result.document.getElementById('output').style.display=x;
}

function showList(s) {
    if (lastList == s) {
        return;
    }
    lastList = s;
    var list = s.length == 0 ? null : s.split('|');
    var table = getAutoCompleteTable();
    if (table == null) {
        return;
    }
    while (table.rows.length > 0) {
        table.deleteRow(0);
    }
    selectedRow = 0;
    var count = 0;
    var doc = parent.h2result.document;
    var tbody = table.tBodies[0];
    for(var i=0; list != null && i<list.length; i++) {
        var kv = list[i].split('#');
        var type = kv[0];
        if (type > 0 && autoComplete != 2 && !autoCompleteManual) {
            continue;
        }
        var row = doc.createElement("tr");
        tbody.appendChild(row);
        var cell = doc.createElement("td");
        var key = kv[1];
        var value = kv[2];
        if (!key || !value) {
            break;
        }
        count++;
        cell.className = 'autoComp' + type;
        key = decodeURIComponent(key);
        row.onmouseover = function(){highlightThisRow(this)};
        if (!document.all || is_opera) {
            row.onclick = function(){insertText(this.cells[1].innerHTML);keyUp()};
        }
    //    addEvent(row, "click", function(e){var row=e?e.target:window.event.srcElement;alert(row);insertText(row.cells[1].innerHTML)});
//        addEvent(row, "mouseover", function(e){var row=e?e.target:window.event.srcElement;alert(row);highlightThisRow(row)});
//        addEvent(row, "click", function(e){var row=e?e.target:window.event.srcElement;alert(row);insertText(row.cells[1].innerHTML)});
//            addEvent(row, "mouseover", eval('function(){highlightRow('+i+')}'));
//            addEvent(row, "click", eval('function(){insertText(\''+value+'\')}'));
        var text = doc.createTextNode(key);
        cell.appendChild(text);
        row.appendChild(cell);
        cell = doc.createElement("td");
        cell.style.display='none';
        text = doc.createTextNode(value);
        cell.appendChild(text);
        row.appendChild(cell);
    }
    if (count > 0) {
        highlightRow();
        showOutput('none');
    } else {
        showOutput('');
    }
    // scroll to the top left
    parent.h2result.scrollTo(0, 0);
    autoCompleteManual = false;
}

function retrieveList(s) {
    if (s.length > 2000) {
        s = s.substring(s.length - 2000);
    }
    sendAsyncRequest('autoCompleteList.do?jsessionid=c621022208ee1e33d5590bf69abdeb84&query=' + encodeURIComponent(s));
}

function addEvent(element, eventType, fn) {
    // cross-browser event handling for IE5+,  NS6 and Mozilla by Scott Andrew
    if (fn == null) {
        return;
    }
    if (element.addEventListener) {
        element.addEventListener(eventType, fn, true);
        return true;
    } else if (element.attachEvent){
        return element.attachEvent('on'+eventType, fn);
    } else {
        alert('Event handler could not be added');
    }
}

function sendAsyncRequest(url) {
    req = false;
    if (window.XMLHttpRequest) {
        try {
            req = new XMLHttpRequest();
        } catch(e) {
            req = false;
        }
    } else if (window.ActiveXObject) {
        try {
            req = new ActiveXObject("Msxml2.XMLHTTP");
        } catch(e) {
            try {
                req = new ActiveXObject("Microsoft.XMLHTTP");
            } catch(e) {
                req = false;
            }
        }
    }
    if (req) {
        req.onreadystatechange = processAsyncResponse;
        req.open("GET", url, true);
        req.send("");
    } else {
        var getList = document.getElementById('h2iframeTransport');
        getList.src = url;
    }
}

function processAsyncResponse() {
    if (req.readyState == 4) {
        if (req.status == 200) {
            showList(req.responseText);
        } else {
            // alert('Could not retrieve data');
        }
    }
}

function submitAll() {
    document.h2querysubmit.sql.value = document.h2query.sql.value;
    document.h2querysubmit.submit();
}

function submitSelected() {
    var field = document.h2query.sql;
    //alert('contents ' + field.selectionStart + '  ' + field.selectionEnd);
    if (field.selectionStart == field.selectionEnd) {
        if (autoSelect == 0) {
            return;
        }
        doAutoSelect();
        if (field.selectionStart == field.selectionEnd) {
            return;
        }
    }
    var startPos = field.selectionStart;
    var endPos = field.selectionEnd;
    var selectedText = field.value.substring(startPos, endPos);
    document.h2querysubmit.sql.value = selectedText;
    document.h2querysubmit.submit();
}

function doAutoSelect() {
    var field = document.h2query.sql;
    var position = field.selectionStart;
    try {
        var prevDoubleLine = field.value.lastIndexOf('\n\n',position - 1) + 2;
        if (prevDoubleLine == 1) prevDoubleLine = 0;
        var nextDoubleLine = field.value.indexOf('\n\n',position);
        if (nextDoubleLine == -1) nextDoubleLine = field.value.length;
        field.setSelectionRange(prevDoubleLine,nextDoubleLine);
    } catch (e) {
        field.selectionStart = field.selectionEnd = position;
    }
}

//-->
</script>
</head>
    <body onresize="sizeTextArea();" onload="sizeTextArea();" style="margin: 0px; padding: 0px;">
        <form name="h2query" action="javascript:alert('should not be submitting this form');">
            <span style="white-space:nowrap">
                <input type="button" class="button" value="Run" onclick="javascript:submitAll();sql.focus();return true;" />
                <input type="button" class="button" value="Run Selected" onclick="javascript:submitSelected();sql.focus();return true;" />
                <input type="button" class="button" value="Auto complete" onclick="javascript:manualAutoComplete();sql.focus();return true;" />
                <input type="button" class="button" value="Clear" onclick="javascript:sql.value='';keyUp();sql.focus();return true;" />
                SQL statement:
            </span>
            <div style="display:none">
                <iframe id="h2iframeTransport" src="" onload="showList(this.contentWindow.document.body.innerHTML);"></iframe>
            </div>
            <textarea id="sql" name="sql" cols="80" rows="5" onkeydown="return keyDown(event)" onkeyup="return keyUp(event)"
                onfocus="keyUp()" onchange="return keyUp()"></textarea>
        </form>
        <form name="h2querysubmit" method="post" action="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" target="h2result" style="display:none">
            <textarea id="sql" name="sql" style="display:none"></textarea>
        </form>
    </body>
</html>
2025-10-23 21:05:45.906 [http-nio-8080-exec-4] DEBUG [47009407-ddc:ca9e2f8e] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=47009407-ddc, spanId=ca9e2f8e, URI=/h2-console/icon_line.gif
2025-10-23 21:05:45.835 [http-nio-8080-exec-1] DEBUG [0ee7c733-669:fb69f753] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0ee7c733-669, spanId=fb69f753, URI=/h2-console/help.jsp
2025-10-23 21:05:45.933 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_line.gif]
Body:
(no body)
2025-10-23 21:05:45.934 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 27 ms]
Body:
GIF89a  ÔøΩ    ÔøΩ   ÔøΩ ÔøΩÔøΩ   ÔøΩÔøΩ ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ   ÔøΩ ÔøΩÔøΩ   ÔøΩÔøΩ ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ                                                                             3  f  ÔøΩ  ÔøΩ  ÔøΩ 3  33 3f 3ÔøΩ 3ÔøΩ 3ÔøΩ f  f3 ff fÔøΩ fÔøΩ fÔøΩ ÔøΩ  ÔøΩ3 ÔøΩf ÔøΩÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ ÔøΩ  ÔøΩ3 ÔøΩf Ãô ÔøΩÔøΩ ÔøΩÔøΩ ÔøΩ  ÔøΩ3 ÔøΩf ÔøΩÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ3  3 33 f3 ÔøΩ3 ÔøΩ3 ÔøΩ33 33333f33ÔøΩ33ÔøΩ33ÔøΩ3f 3f33ff3fÔøΩ3fÔøΩ3fÔøΩ3ÔøΩ 3ÔøΩ33ÔøΩf3ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩ 3ÔøΩ33ÔøΩf3Ãô3ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩ 3ÔøΩ33ÔøΩf3ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩÔøΩf  f 3f ff ÔøΩf ÔøΩf ÔøΩf3 f33f3ff3ÔøΩf3ÔøΩf3ÔøΩff ff3fffffÔøΩffÔøΩffÔøΩfÔøΩ fÔøΩ3fÔøΩffÔøΩÔøΩfÔøΩÔøΩfÔøΩÔøΩfÔøΩ fÔøΩ3fÔøΩffÃôfÔøΩÔøΩfÔøΩÔøΩfÔøΩ fÔøΩ3fÔøΩffÔøΩÔøΩfÔøΩÔøΩfÔøΩÔøΩÔøΩ  ÔøΩ 3ÔøΩ fÔøΩ ÔøΩÔøΩ Ãô ÔøΩÔøΩ3 ÔøΩ33ÔøΩ3fÔøΩ3ÔøΩÔøΩ3Ãô3ÔøΩÔøΩf ÔøΩf3ÔøΩffÔøΩfÔøΩÔøΩfÃôfÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÃôÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÃôÔøΩÔøΩÃôÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÃôÔøΩÔøΩÔøΩ  ÔøΩ 3ÔøΩ fÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ3 ÔøΩ33ÔøΩ3fÔøΩ3ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩÔøΩf ÔøΩf3ÔøΩffÔøΩfÔøΩÔøΩfÔøΩÔøΩfÔøΩÃô Ãô3ÃôfÃôÔøΩÃôÔøΩÃôÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÃôÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ  ÔøΩ 3ÔøΩ fÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ3 ÔøΩ33ÔøΩ3fÔøΩ3ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩÔøΩf ÔøΩf3ÔøΩffÔøΩfÔøΩÔøΩfÔøΩÔøΩfÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÃôÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ  ÔøΩ ,      ÔøΩHpÔøΩÔøΩÔøΩ*, ;
2025-10-23 21:05:45.934 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/help.jsp]
Body:
(no body)
2025-10-23 21:05:45.905 [http-nio-8080-exec-5] DEBUG [e630bfd6-755:11db9876] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=e630bfd6-755, spanId=11db9876, URI=/h2-console/icon_disconnect.gif
2025-10-23 21:05:45.909 [http-nio-8080-exec-6] DEBUG [0a443c48-1be:e406f52c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0a443c48-1be, spanId=e406f52c, URI=/h2-console/icon_refresh.gif
2025-10-23 21:05:45.939 [http-nio-8080-exec-3] DEBUG [7bb759b8-1b9:753db3f8] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=7bb759b8-1b9, spanId=753db3f8, URI=/h2-console/icon_rollback.gif
2025-10-23 21:05:45.935 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 104 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body class="result" onkeyup="auto(event)">
                                                                                                                                                                                                                                                                                                                                                                                                                <!-- added 2008-02 --><script type="text/javascript">/*<!--*/var L=264,M=new Array(),S,R,P,W,C,D=document;D.write('<div id="div"style="display:none"><input id="O"onkeydown="k(event)"readonly="readonly"/><table>');var O=D.getElementById("O");function z(){S=R=0;P=17;W=200;C=1;for(i=0;i<L;i++)M[i]=i<253&&(i+1)%12>1?0:8;}function d(){for(i=0;i<L;i++)D.getElementsByTagName("td")[i].style.backgroundColor="#"+"fffff000e00c00a008006004000".substr(3*M[i],3);}function k(e){c=e.keyCode;c?c=c:e.charCode;r=R;p=P;if(c==37)p-=1;if(c==38||c==32)r="AHILMNQBJKCDEOPFRSG".charCodeAt(R)-65;if(c==39)p++;if(c==40)W=10;s(0);if(!t(p,r)){P=p;R=r;s(C);d();s(0);}else s(C);}function f(){setTimeout("f()",W);O.focus();s(0);if(!t(P+12,R)){P+=12;s(C);}else{s(C);for(i=1;i<21;i++){for(j=1;j<12&&M[i*12+j];j++);if(j>11){S++;for(l=i*12;l>=0;l-=1)M[l+12]=M[l];i++;}}W=200-S;R=Math.random()*7&7;C=R+1;if(P<24)z();P=17;}d();O.value=S;}function g(x){return("01<=/012$/01$01=%01<$0<=$0;<$0<H$01</01<$/0<01;</0<=/01;#$0<"+"%/01#/01$%0</01=").charCodeAt(x)-48;}function s(n){for(i=0;i<4;i++)M[P+g(4*R+i)]=n;}function t(x,y){for(i=3;i>=0&&!M[x+g(4*y+i)];i-=1);return i+1;}for(i=0;i<L;i++)D.write('<td style="padding:0;width:10px;height:10px;">'+((i%12)>10?'<tr>':''));function auto(e){c=e.keyCode;c=c?c:e.charCode;if(c==51){D.getElementById('output').style.display='none';D.getElementById('div').style.display='';z();f();}}D.write('</table></div>');/*-->*/</script>
<script type="text/javascript">
<!--
function set(s) {
    if (parent.h2query) {
        parent.h2query.document.h2query.sql.value = s;
    }
}
//-->
</script>

<div id="output">

<h3>Important Commands</h3>
<table>
<tr>
    <td style="padding:0px"><img src="icon_help.gif" alt="Help"/></td>
    <td style="vertical-align: middle;"></td>
    <td style="vertical-align: middle;">Displays this Help Page</td>
</tr>
<tr>
    <td style="padding:0px"><img src="icon_history.gif" alt="Command history"/></td>
    <td style="vertical-align: middle;"></td>
    <td style="vertical-align: middle;">Shows the Command History</td>
</tr>
<tr>
    <td style="padding:0px"><img src="icon_run.gif" alt="Run"/></td>
    <td style="vertical-align: middle;">Ctrl+Enter</td>
    <td style="vertical-align: middle;">Executes the current SQL statement</td>
</tr>
<tr>
    <td style="padding:0px"><img src="icon_run_selected.gif" alt="Run Selected"/></td>
    <td style="vertical-align: middle;">Shift+Enter</td>
    <td style="vertical-align: middle;">Executes the SQL statement defined by the text selection</td>
</tr>
<tr>
    <td style="padding:0px"></td>
    <td style="vertical-align: middle;">Ctrl+Space</td>
    <td style="vertical-align: middle;">Auto complete</td>
</tr>
<tr>
    <td style="padding:0px"><img src="icon_disconnect.gif" alt="Disconnect"/></td>
    <td style="vertical-align: middle;"></td>
    <td style="vertical-align: middle;">Disconnects from the database</td>
</tr>

</table>

<h3>Sample SQL Script</h3>
<table>
<tr><td><a href="javascript:set('DROP TABLE IF EXISTS TEST;\rCREATE TABLE TEST(ID INT PRIMARY KEY, NAME VARCHAR(255));\rINSERT INTO TEST VALUES(1, \'Hello\');\rINSERT INTO TEST VALUES(2, \'World\');\rSELECT * FROM TEST ORDER BY ID;\rUPDATE TEST SET NAME=\'Hi\' WHERE ID=1;\rDELETE FROM TEST WHERE ID=2;');">
    Delete the table if it exists<br />
    Create a new table<br />
    &nbsp;&nbsp;with ID and NAME columns<br />
    Add a new row<br />
    Add another row<br />
    Query the table<br />
    Change data in a row<br />
    Remove a row
</a></td><td>
    DROP TABLE IF EXISTS TEST;<br />
    CREATE TABLE TEST(ID INT PRIMARY KEY,<br />
    &nbsp;&nbsp; NAME VARCHAR(255));<br />
    INSERT INTO TEST VALUES(1, 'Hello');<br />
    INSERT INTO TEST VALUES(2, 'World');<br />
    SELECT * FROM TEST ORDER BY ID;<br />
    UPDATE TEST SET NAME='Hi' WHERE ID=1;<br />
    DELETE FROM TEST WHERE ID=2;
</td></tr>
<tr><td><a href="javascript:set('HELP ');">
    Help
</a></td><td>
    HELP ...
</td></tr>
</table>

<h3>Adding Database Drivers</h3>
<p>
Additional database drivers can be registered by adding the Jar file location of the driver to the environment variables H2DRIVERS or CLASSPATH. Example (Windows): to add the database driver library  C:/Programs/hsqldb/lib/hsqldb.jar, set the environment variable H2DRIVERS to  C:/Programs/hsqldb/lib/hsqldb.jar.
</p>

</div>

<table id="h2auto" class="autoComp"><tbody></tbody></table>

</body></html>

2025-10-23 21:05:45.939 [http-nio-8080-exec-4] DEBUG [8f7733ca-968:74aade9e] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=8f7733ca-968, spanId=74aade9e, URI=/h2-console/icon_commit.gif
2025-10-23 21:05:45.948 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_commit.gif]
Body:
(no body)
2025-10-23 21:05:45.951 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_rollback.gif]
Body:
(no body)
2025-10-23 21:05:45.951 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 9 ms]
Body:
GIF89a  ÔøΩ#    _?\wÔøΩd~ÔøΩhÔøΩÔøΩkÔøΩÔøΩlÔøΩÔøΩoÔøΩÔøΩrÔøΩÔøΩÔøΩ?uÔøΩÔøΩwÔøΩÔøΩ|ÔøΩÔøΩ}ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩƒÄÔøΩÀâÔøΩ»üÔøΩÔøΩÔøΩÔøΩÀíÔøΩÃøÔøΩÔøΩÔøΩÕòÔøΩœôÔøΩÔøΩﬂü_ÔøΩÔøΩœõÔøΩ–•ÔøΩ‘ßÔøΩ’øÔøΩÔøΩﬂøÔøΩÔøΩÔøΩÔøΩÔøΩﬂøÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ
 ? ,     `ÔøΩÔøΩpH,=ÔøΩLÔøΩhL&ÔøΩÔøΩ!RÔøΩÔøΩPÔøΩ4PÔøΩY`1ÔøΩ@ÔøΩX%ÔøΩ@HÔøΩÔøΩÔøΩŸä!@BD\ÔøΩVkVÔøΩVÔøΩÔøΩVÔøΩÔøΩQV?ÔøΩQA ;
2025-10-23 21:05:45.942 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_disconnect.gif]
Body:
(no body)
2025-10-23 21:05:45.952 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 37 ms]
Body:
GIF89a  ÔøΩ ÔøΩ)0ÔøΩ#ÔøΩ=AÔøΩ[gÔøΩ?SÔøΩÔøΩÔøΩÔøΩ||ÔøΩÔøΩÔøΩ!ÔøΩ   ,     7xÔøΩÔøΩÔøΩÔøΩ0pÔøΩÔøΩÔøΩeÔøΩ!~ÔøΩEÔøΩreÔøΩLÔøΩ+BÔøΩ`/s}fÔøΩÔøΩ)4ÔøΩÔøΩTÔøΩÔøΩÔøΩEÔøΩ8ÔøΩÔøΩC ;
2025-10-23 21:05:45.956 [http-nio-8080-exec-4] DEBUG [1a4fac5c-124:addaab4c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=1a4fac5c-124, spanId=addaab4c, URI=/h2-console/icon_run_selected.gif
2025-10-23 21:05:45.957 [http-nio-8080-exec-5] DEBUG [fcc539b6-311:5b5c8d7a] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=fcc539b6-311, spanId=5b5c8d7a, URI=/h2-console/icon_stop.gif
2025-10-23 21:05:45.959 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_run_selected.gif]
Body:
(no body)
2025-10-23 21:05:45.960 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 3 ms]
Body:
GIF89a  ÔøΩ    3w:-ÔøΩ3&ÔøΩA3ÔøΩ:3ÔøΩHAÔøΩH:ÔøΩHAÔøΩHHÔøΩWOÔøΩW^ÔøΩoWÔøΩWfÔøΩfoÔøΩ^fÔøΩwwÔøΩwÔøΩÔøΩoÔøΩÔøΩoÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩwÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÀ≠ÔøΩ“∫ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩCreated with GIMP !ÔøΩ
  ,       ÔøΩÔøΩ'ÔøΩdiÔøΩhÔøΩÔøΩlÔøΩhÔøΩÔøΩP<ÔøΩ;_ÔøΩQÔøΩ[Îëò\<ÔøΩJÔøΩbI<VÔøΩBDÔøΩÔøΩ %XI!ÔøΩ":UÔøΩÔøΩÔøΩ}ÔøΩ
ÔøΩtXÔøΩÔøΩTÔøΩ\cÔøΩsÔøΩÔøΩjÔøΩÔøΩÔøΩ}z)ÔøΩÔøΩÔøΩ(ÔøΩÔøΩ	N*	tÔøΩÔøΩ\]f+ÔøΩ	ÔøΩ' ÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ.ÔøΩ%ÔøΩ,ÔøΩ0ÔøΩÔøΩÔøΩ"! ;
2025-10-23 21:05:45.943 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_refresh.gif]
Body:
(no body)
2025-10-23 21:05:45.964 [http-nio-8080-exec-8] DEBUG [dc09cb77-f86:a3588dc6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=dc09cb77-f86, spanId=a3588dc6, URI=/h2-console/icon_run.gif
2025-10-23 21:05:45.965 [http-nio-8080-exec-4] DEBUG [c33c4458-d78:96c1523e] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c33c4458-d78, spanId=96c1523e, URI=/h2-console/icon_history.gif
2025-10-23 21:05:45.968 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_stop.gif]
Body:
(no body)
2025-10-23 21:05:45.957 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 12 ms]
Body:
GIF89a  ÔøΩ& ÔøΩl\wÔøΩd~ÔøΩhÔøΩÔøΩkÔøΩÔøΩÔøΩ~lÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩuÔøΩÔøΩwÔøΩÔøΩ|ÔøΩÔøΩ}ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩƒÄÔøΩÀâÔøΩ»ëÔøΩÀíÔøΩÃïÔøΩÕòÔøΩœôÔøΩœúÔøΩœõÔøΩ–•ÔøΩ‘ßÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩ◊ÑÔøΩÔøΩ|ÔøΩ€ÜÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ
 ? ,     hÔøΩÔøΩpH,ÔøΩQJ*ÔøΩÔøΩ&ÔøΩÔøΩCÔøΩHXÔøΩÔøΩIYx)ÔøΩÔøΩGD&s
…®cy,~ÔøΩÔøΩ+&ÔøΩBÔøΩ7 	y	Ct|?ÔøΩlTÔøΩTÔøΩÔøΩTÔøΩÔøΩOT?ÔøΩÔøΩÔøΩA ;
2025-10-23 21:05:45.981 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 11 ms]
Body:
GIF89a  ÔøΩ ÔøΩ08ÔøΩ8@ÔøΩ@HÔøΩHPÔøΩhpÔøΩ ÔøΩ 0ÔøΩ(8ÔøΩ`pÔøΩP@ÔøΩXHÔøΩÔøΩÔøΩÔøΩ@8ÔøΩ88ÔøΩPPÔøΩxxÔøΩÔøΩÔøΩÿòÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     TÔøΩ'ÔøΩdiÔøΩhjFJÔøΩQÔøΩ,t]'2ÔøΩÔøΩÔøΩ$Fd@,"ÔøΩÔøΩPÔøΩl
ÔøΩÔøΩÔøΩ@ÔøΩIRÔøΩ`ÔøΩzÔøΩFÔøΩ0ÔøΩRÔøΩR!hÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩ$DaÔøΩÔøΩ#TÔøΩÔøΩ! ;
2025-10-23 21:05:45.985 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_run.gif]
Body:
(no body)
2025-10-23 21:05:45.986 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_history.gif]
Body:
(no body)
2025-10-23 21:05:45.986 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 24 ms]
Body:
GIF89a  ÔøΩ-  ÔøΩA&ÔøΩA&ÔøΩAAÔøΩW^ÔøΩo:ÔøΩO3ÔøΩHfÔøΩw-ÔøΩAHÔøΩWHÔøΩW:ÔøΩHAÔøΩOfÔøΩo:ÔøΩA3w:AÔøΩHHÔøΩOOÔøΩWWÔøΩ^-ÔøΩ33ÔøΩ:AÔøΩHHÔøΩO:ÔøΩ:AÔøΩAWÔøΩWHÔøΩHfÔøΩfwÔøΩwÔøΩÀ≠ÔøΩ“∫ÔøΩÔøΩÔøΩ^ÔøΩWÔøΩÔøΩÔøΩoÔøΩ^ÔøΩÔøΩoÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩwÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ  ? ,     ÔøΩÔøΩÔøΩpH,AÔøΩB P8ÔøΩÔøΩÔøΩÔøΩaÔøΩ2ÔøΩDÔøΩfÔøΩ(ÔøΩZÔøΩT
ÔøΩJÔøΩ ÔøΩÔøΩiÔøΩOÔøΩÔøΩÔøΩÔøΩFmÔøΩÔøΩ~?ÔøΩ!ÔøΩyzÔøΩBÔøΩnÔøΩ,B ÔøΩÔøΩÔøΩÔøΩ BÔøΩÔøΩ-ÔøΩÔøΩQÔøΩÔøΩ~ ÔøΩtQ~C

ÔøΩDHKNPÔøΩEA ;
2025-10-23 21:05:45.986 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 21 ms]
Body:
GIF89a  ÔøΩ ÔøΩ~ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ ÔøΩÔøΩ"ÔøΩÔøΩ"ÔøΩÔøΩ#ÔøΩÔøΩ$ÔøΩÔøΩ%ÔøΩÔøΩ&ÔøΩÔøΩ'ÔøΩÔøΩ'ÔøΩÔøΩ(ÔøΩÔøΩ»òÔøΩ…´ÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ
  ,       UÔøΩ'ÔøΩdiÔøΩhÔøΩÔøΩlÔøΩ0-ÔøΩpÔøΩÔøΩÔøΩÔøΩmYrÔøΩÔøΩÔøΩCÔøΩ~ÔøΩBÔøΩB)$"ÔøΩD2ÔøΩÔøΩÔøΩHÔøΩ: ÔøΩ`ÔøΩcÔøΩpÔøΩÔøΩt#|#ÔøΩÔøΩÔøΩ5ÔøΩÔøΩ>;ÔøΩÔøΩ:\ÔøΩgÔøΩÔøΩ}ÔøΩÔøΩ$! ;
2025-10-23 21:05:45.987 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 34 ms]
Body:
GIF89a  ÔøΩ% ÔøΩkÔøΩnÔøΩnÔøΩnÔøΩrÔøΩrÔøΩsÔøΩrÔøΩsÔøΩxÔøΩ|ÔøΩ}ÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ√ñ¬ô ÔøΩÔøΩ_ÔøΩÔøΩ`ÔøΩÔøΩsÔøΩÔøΩxÔøΩÔøΩzÔøΩÿÄÔøΩ⁄ÉÔøΩÿÄÔøΩﬁÖÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ  ? ,     dÔøΩÔøΩpH,ÔøΩÔøΩÔøΩ!)ÔøΩCÔøΩÔøΩx<ÔøΩÔøΩÔøΩh+ÔøΩ0ÔøΩÔøΩÔøΩg<ÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩœ§ ÔøΩÔøΩ?#OGÔøΩ!I# ÔøΩE!ÔøΩÔøΩKÔøΩ
PPC }ÔøΩ{ÔøΩGA ;
2025-10-23 21:05:45.986 [http-nio-8080-exec-3] DEBUG [b7424558-7e7:74c2e588] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b7424558-7e7, spanId=74c2e588, URI=/h2-console/icon_help.gif
2025-10-23 21:05:45.998 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/icon_help.gif]
Body:
(no body)
2025-10-23 21:05:46.000 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 11 ms]
Body:
GIF89a  ÔøΩ& ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ»ëÔøΩÔøΩÔøΩÔøΩ»≥ÔøΩ»çÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(bÔøΩDvÔøΩ]ÔøΩÔøΩ_ÔøΩÔøΩjÔøΩÔøΩlÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÃ¢ÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ  ? ,     ÔøΩÔøΩÔøΩpH,ÔøΩ
ÔøΩQÔøΩ(ÔøΩ?DS! +ÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩ"ÔøΩÔøΩP**]EcÔøΩHÔøΩÔøΩÔøΩÔøΩGÔøΩ`D&KÔøΩ'.D_F_J"#gB_ÔøΩ!ÔøΩ"ÔøΩÔøΩÔøΩ?h_y"ÔøΩ	pÔøΩÔøΩ$|?g
  "K  ÔøΩC%
`
%E%SWÔøΩFWKSPÔøΩEA ;
2025-10-23 21:05:46.432 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tables.do]
Body:
(no body)
2025-10-23 21:05:46.432 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 597 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
    <script type="text/javascript" src="tree.js"></script>
<script type="text/javascript">
<!--
setNode(0, 0, 0, 'database', 'jdbc:h2:mem:librarydb', null);
setNode(1, 0, 1,  'table', 'BOOKS', 'javascript:ins(\'BOOKS\',true)');
setNode(2, 1, 1, 'column', 'ID', 'javascript:ins(\'ID\')');
setNode(3, 2, 2, 'type', 'BIGINT', null);
setNode(4, 1, 1, 'column', 'AUTHOR', 'javascript:ins(\'AUTHOR\')');
setNode(5, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(6, 1, 1, 'column', 'CODE', 'javascript:ins(\'CODE\')');
setNode(7, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(8, 1, 1, 'column', 'ISBN', 'javascript:ins(\'ISBN\')');
setNode(9, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(10, 1, 1, 'column', 'TITLE', 'javascript:ins(\'TITLE\')');
setNode(11, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(12, 1, 1, 'column', 'BORROWER_ID', 'javascript:ins(\'BORROWER_ID\')');
setNode(13, 2, 2, 'type', 'BIGINT', null);
setNode(14, 1, 1, 'index_az', 'Indexes', null);
setNode(15, 2, 1, 'index', 'PRIMARY_KEY_3', null);
setNode(16, 3, 2, 'type', 'Unique', null);
setNode(17, 3, 2, 'type', 'ID', null);
setNode(18, 2, 1, 'index', 'FKNP3N37YFX4LKFNY6U693VSK53_INDEX_3', null);
setNode(19, 3, 2, 'type', 'Non unique', null);
setNode(20, 3, 2, 'type', 'BORROWER_ID', null);
setNode(21, 2, 1, 'index', 'UKFODT4NN4UH16757AYNKMD7Q8C_INDEX_3', null);
setNode(22, 3, 2, 'type', 'Unique', null);
setNode(23, 3, 2, 'type', 'CODE', null);
addTable('BOOKS', 'ID AUTHOR CODE ISBN TITLE BORROWER_ID', 1);
setNode(24, 0, 1,  'table', 'BORROWERS', 'javascript:ins(\'BORROWERS\',true)');
setNode(25, 1, 1, 'column', 'ID', 'javascript:ins(\'ID\')');
setNode(26, 2, 2, 'type', 'BIGINT', null);
setNode(27, 1, 1, 'column', 'CODE', 'javascript:ins(\'CODE\')');
setNode(28, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(29, 1, 1, 'column', 'EMAIL', 'javascript:ins(\'EMAIL\')');
setNode(30, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(31, 1, 1, 'column', 'NAME', 'javascript:ins(\'NAME\')');
setNode(32, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(33, 1, 1, 'index_az', 'Indexes', null);
setNode(34, 2, 1, 'index', 'UKHT682RER8P1T67VS9F0OCM8CS_INDEX_C', null);
setNode(35, 3, 2, 'type', 'Unique', null);
setNode(36, 3, 2, 'type', 'EMAIL', null);
setNode(37, 2, 1, 'index', 'PRIMARY_KEY_C', null);
setNode(38, 3, 2, 'type', 'Unique', null);
setNode(39, 3, 2, 'type', 'ID', null);
setNode(40, 2, 1, 'index', 'UKCJS9HIDU1J1E2H7IHOWEMXTAJ_INDEX_C', null);
setNode(41, 3, 2, 'type', 'Unique', null);
setNode(42, 3, 2, 'type', 'CODE', null);
addTable('BORROWERS', 'ID CODE EMAIL NAME', 24);
setNode(43, 0, 1,  'table', 'BORROW_HISTORY', 'javascript:ins(\'BORROW_HISTORY\',true)');
setNode(44, 1, 1, 'column', 'ID', 'javascript:ins(\'ID\')');
setNode(45, 2, 2, 'type', 'BIGINT', null);
setNode(46, 1, 1, 'column', 'BOOK_CODE', 'javascript:ins(\'BOOK_CODE\')');
setNode(47, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(48, 1, 1, 'column', 'BOOK_TITLE', 'javascript:ins(\'BOOK_TITLE\')');
setNode(49, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(50, 1, 1, 'column', 'BORROW_DATE', 'javascript:ins(\'BORROW_DATE\')');
setNode(51, 2, 2, 'type', 'TIMESTAMP(6)', null);
setNode(52, 1, 1, 'column', 'BORROWER_CODE', 'javascript:ins(\'BORROWER_CODE\')');
setNode(53, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(54, 1, 1, 'column', 'BORROWER_NAME', 'javascript:ins(\'BORROWER_NAME\')');
setNode(55, 2, 2, 'type', 'CHARACTER VARYING(255)', null);
setNode(56, 1, 1, 'column', 'RETURN_DATE', 'javascript:ins(\'RETURN_DATE\')');
setNode(57, 2, 2, 'type', 'TIMESTAMP(6)', null);
setNode(58, 1, 1, 'column', 'STATUS', 'javascript:ins(\'STATUS\')');
setNode(59, 2, 2, 'type', 'ENUM(\'BORROWED\', \'RETURNED\')', null);
setNode(60, 1, 1, 'index_az', 'Indexes', null);
setNode(61, 2, 1, 'index', 'PRIMARY_KEY_B', null);
setNode(62, 3, 2, 'type', 'Unique', null);
setNode(63, 3, 2, 'type', 'ID', null);
addTable('BORROW_HISTORY', 'ID BOOK_CODE BOOK_TITLE BORROW_DATE BORROWER_CODE BORROWER_NAME RETURN_DATE STATUS', 43);
setNode(64, 0, 1, 'folder', 'INFORMATION_SCHEMA', null);
setNode(65, 1, 2,  'view', 'CHECK_CONSTRAINTS', 'javascript:ins(\'INFORMATION_SCHEMA.CHECK_CONSTRAINTS\',true)');
setNode(66, 1, 2,  'view', 'COLLATIONS', 'javascript:ins(\'INFORMATION_SCHEMA.COLLATIONS\',true)');
setNode(67, 1, 2,  'view', 'COLUMN_PRIVILEGES', 'javascript:ins(\'INFORMATION_SCHEMA.COLUMN_PRIVILEGES\',true)');
setNode(68, 1, 2,  'view', 'COLUMNS', 'javascript:ins(\'INFORMATION_SCHEMA.COLUMNS\',true)');
setNode(69, 1, 2,  'table', 'CONSTANTS', 'javascript:ins(\'INFORMATION_SCHEMA.CONSTANTS\',true)');
setNode(70, 1, 2,  'view', 'CONSTRAINT_COLUMN_USAGE', 'javascript:ins(\'INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE\',true)');
setNode(71, 1, 2,  'view', 'DOMAIN_CONSTRAINTS', 'javascript:ins(\'INFORMATION_SCHEMA.DOMAIN_CONSTRAINTS\',true)');
setNode(72, 1, 2,  'view', 'DOMAINS', 'javascript:ins(\'INFORMATION_SCHEMA.DOMAINS\',true)');
setNode(73, 1, 2,  'view', 'ELEMENT_TYPES', 'javascript:ins(\'INFORMATION_SCHEMA.ELEMENT_TYPES\',true)');
setNode(74, 1, 2,  'table', 'ENUM_VALUES', 'javascript:ins(\'INFORMATION_SCHEMA.ENUM_VALUES\',true)');
setNode(75, 1, 2,  'view', 'FIELDS', 'javascript:ins(\'INFORMATION_SCHEMA.FIELDS\',true)');
setNode(76, 1, 2,  'table', 'IN_DOUBT', 'javascript:ins(\'INFORMATION_SCHEMA.IN_DOUBT\',true)');
setNode(77, 1, 2,  'table', 'INDEX_COLUMNS', 'javascript:ins(\'INFORMATION_SCHEMA.INDEX_COLUMNS\',true)');
setNode(78, 1, 2,  'table', 'INDEXES', 'javascript:ins(\'INFORMATION_SCHEMA.INDEXES\',true)');
setNode(79, 1, 2,  'table', 'INFORMATION_SCHEMA_CATALOG_NAME', 'javascript:ins(\'INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME\',true)');
setNode(80, 1, 2,  'view', 'KEY_COLUMN_USAGE', 'javascript:ins(\'INFORMATION_SCHEMA.KEY_COLUMN_USAGE\',true)');
setNode(81, 1, 2,  'table', 'LOCKS', 'javascript:ins(\'INFORMATION_SCHEMA.LOCKS\',true)');
setNode(82, 1, 2,  'view', 'PARAMETERS', 'javascript:ins(\'INFORMATION_SCHEMA.PARAMETERS\',true)');
setNode(83, 1, 2,  'table', 'QUERY_STATISTICS', 'javascript:ins(\'INFORMATION_SCHEMA.QUERY_STATISTICS\',true)');
setNode(84, 1, 2,  'view', 'REFERENTIAL_CONSTRAINTS', 'javascript:ins(\'INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS\',true)');
setNode(85, 1, 2,  'table', 'RIGHTS', 'javascript:ins(\'INFORMATION_SCHEMA.RIGHTS\',true)');
setNode(86, 1, 2,  'table', 'ROLES', 'javascript:ins(\'INFORMATION_SCHEMA.ROLES\',true)');
setNode(87, 1, 2,  'view', 'ROUTINES', 'javascript:ins(\'INFORMATION_SCHEMA.ROUTINES\',true)');
setNode(88, 1, 2,  'view', 'SCHEMATA', 'javascript:ins(\'INFORMATION_SCHEMA.SCHEMATA\',true)');
setNode(89, 1, 2,  'view', 'SEQUENCES', 'javascript:ins(\'INFORMATION_SCHEMA.SEQUENCES\',true)');
setNode(90, 1, 2,  'table', 'SESSION_STATE', 'javascript:ins(\'INFORMATION_SCHEMA.SESSION_STATE\',true)');
setNode(91, 1, 2,  'table', 'SESSIONS', 'javascript:ins(\'INFORMATION_SCHEMA.SESSIONS\',true)');
setNode(92, 1, 2,  'table', 'SETTINGS', 'javascript:ins(\'INFORMATION_SCHEMA.SETTINGS\',true)');
setNode(93, 1, 2,  'table', 'SYNONYMS', 'javascript:ins(\'INFORMATION_SCHEMA.SYNONYMS\',true)');
setNode(94, 1, 2,  'view', 'TABLE_CONSTRAINTS', 'javascript:ins(\'INFORMATION_SCHEMA.TABLE_CONSTRAINTS\',true)');
setNode(95, 1, 2,  'view', 'TABLE_PRIVILEGES', 'javascript:ins(\'INFORMATION_SCHEMA.TABLE_PRIVILEGES\',true)');
setNode(96, 1, 2,  'view', 'TABLES', 'javascript:ins(\'INFORMATION_SCHEMA.TABLES\',true)');
setNode(97, 1, 2,  'view', 'TRIGGERS', 'javascript:ins(\'INFORMATION_SCHEMA.TRIGGERS\',true)');
setNode(98, 1, 2,  'table', 'USERS', 'javascript:ins(\'INFORMATION_SCHEMA.USERS\',true)');
setNode(99, 1, 2,  'view', 'VIEWS', 'javascript:ins(\'INFORMATION_SCHEMA.VIEWS\',true)');
setNode(100, 0, 1, 'users', 'Users', null);
setNode(101, 1, 1, 'user', 'SA', null);
setNode(102, 2, 2, 'type', 'Admin', null);
setNode(103, 0, 0, 'info', 'H2 2.2.224 (2023-09-17)', null);
refreshQueryTables();
//-->
</script>

</head>
<body>

<div class="tree">
<script type="text/javascript">
<!--
writeTree();
//-->
</script>
</div>

<p class="error">
    
</p>

</body>
</html>

2025-10-23 21:05:46.528 [http-nio-8080-exec-2] DEBUG [51ef858b-29d:fe4a53ed] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=51ef858b-29d, spanId=fe4a53ed, URI=/h2-console/tree.js
2025-10-23 21:05:46.541 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree.js]
Body:
(no body)
2025-10-23 21:05:46.542 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 14 ms]
Body:
/*
 * Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (https://h2database.com/html/license.html).
 *  * Initial Developer: H2 Group
 */

var nodeList = new Array();
var icons = new Array();
var tables = new Array();
var tablesByName = new Object();

function Table(name, columns, i) {
    this.name = name;
    this.columns = columns;
    this.id = i;
}

function addTable(name, columns, i) {
    var t = new Table(name, columns, i);
    tables[tables.length] = t;
    tablesByName[name] = t;
}

function ins(s, isTable) {
    if (parent.h2query) {
        if (parent.h2query.insertText) {
            parent.h2query.insertText(s, isTable);
        }
    }
}

function refreshQueryTables() {
    if (parent.h2query) {
        if (parent.h2query.refreshTables) {
            parent.h2query.refreshTables();
        }
    }
}

function goToTable(s) {
    var t = tablesByName[s];
    if (t) {
        hitOpen(t.id);
        return true;
    }
    return false;
}

function loadIcons() {
    icons[0] = new Image();
    icons[0].src = "tree_minus.gif";
    icons[1] = new Image();
    icons[1].src = "tree_plus.gif";
}

function Node(level, type, icon, text, link) {
    this.level = level;
    this.type = type;
    this.icon = icon;
    this.text = text;
    this.link = link;
}

function setNode(id, level, type, icon, text, link) {
    nodeList[id] = new Node(level, type, icon, text, link);
}

function writeDiv(i, level, dist) {
    if (dist>0) {
        document.write("<div id=\"div"+(i-1)+"\" style=\"display: none;\">");
    } else {
        while (dist++<0) {
            document.write("</div>");
        }
    }
}

function writeTree() {
    loadIcons();
    var last=nodeList[0];
    for (var i=0; i<nodeList.length; i++) {
        var node=nodeList[i];
        writeDiv(i, node.level, node.level-last.level);
        last=node;
        var j=node.level;
        while (j-->0) {
            document.write("<img src=\"tree_empty.gif\"/>");
        }
        if (node.type==1) {
            if (i < nodeList.length-1 && nodeList[i+1].level > node.level) {
                document.write("<img onclick=\"hit("+i+");\" id=\"join"+i+"\" src=\"tree_plus.gif\"/>");
            } else {
                document.write("<img src=\"tree_empty.gif\"/>");
            }
        }
        document.write("<img src=\"tree_"+node.icon+".gif\"/>&nbsp;");
        if (node.link==null) {
            document.write(node.text);
        } else {
            document.write("<a id='"+node.text+"' href=\""+node.link+"\" >"+node.text+"</a>");
        }
        document.write("<br />");
    }
    writeDiv(0, 0, -last.type);
}

function hit(i) {
    var theDiv = document.getElementById("div"+i);
    var theJoin    = document.getElementById("join"+i);
    if (theDiv.style.display == 'none') {
        theJoin.src = icons[0].src;
        theDiv.style.display = '';
    } else {
        theJoin.src = icons[1].src;
        theDiv.style.display = 'none';
    }
}

function hitOpen(i) {
    var theDiv = document.getElementById("div"+i);
    var theJoin    = document.getElementById("join"+i);
    theJoin.src = icons[0].src;
    theDiv.style.display = '';
}
2025-10-23 21:05:46.611 [http-nio-8080-exec-1] DEBUG [c96e49d9-85a:68b5f030] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c96e49d9-85a, spanId=68b5f030, URI=/h2-console/tree_minus.gif
2025-10-23 21:05:46.621 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_minus.gif]
Body:
(no body)
2025-10-23 21:05:46.622 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 10 ms]
Body:
GIF89a  ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !ÔøΩ   ,       : HÔøΩÔøΩÔøΩÔøΩ*\ÔøΩ0ÔøΩ√á ÔøΩ EÔøΩfÔøΩ8ÔøΩÔøΩGÔøΩ6jÔøΩXq$FÔøΩ!Bd»≤ÔøΩÀó0 ;
2025-10-23 21:05:46.635 [http-nio-8080-exec-7] DEBUG [9d9e8395-fef:0d1760aa] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=9d9e8395-fef, spanId=0d1760aa, URI=/h2-console/tree_plus.gif
2025-10-23 21:05:46.640 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_plus.gif]
Body:
(no body)
2025-10-23 21:05:46.641 [http-nio-8080-exec-5] DEBUG [a9179b6f-332:2ee3ddab] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a9179b6f-332, spanId=2ee3ddab, URI=/h2-console/tree_database.gif
2025-10-23 21:05:46.641 [http-nio-8080-exec-8] DEBUG [303f7468-9ec:dc99f621] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=303f7468-9ec, spanId=dc99f621, URI=/h2-console/tree_table.gif
2025-10-23 21:05:46.641 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 5 ms]
Body:
GIF89a  ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !ÔøΩ   ,       C HÔøΩÔøΩÔøΩÔøΩ*\ÔøΩ0ÔøΩ√á Q‡øÅfpQÔøΩFÔøΩÔøΩÔøΩ9ÔøΩcÔøΩÔøΩKVÔøΩq%AÔøΩ/!BdHÔøΩÔøΩÕõ8 ;
2025-10-23 21:05:46.644 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_table.gif]
Body:
(no body)
2025-10-23 21:05:46.648 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_database.gif]
Body:
(no body)
2025-10-23 21:05:46.649 [http-nio-8080-exec-7] DEBUG [089dcc24-596:15919995] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=089dcc24-596, spanId=15919995, URI=/h2-console/tree_empty.gif
2025-10-23 21:05:46.650 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 7 ms]
Body:
GIF89a  ÔøΩG ÔøΩÔøΩaÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩoÔøΩÔøΩpÔøΩÔøΩpÔøΩÔøΩ2ÔøΩÔøΩMÔøΩÔøΩWÔøΩÔøΩXÔøΩÔøΩYÔøΩÔøΩZÔøΩÔøΩ^ÔøΩÔøΩaÔøΩÔøΩ4ÔøΩÔøΩ5ÔøΩÔøΩ=ÔøΩÔøΩ%ÔøΩÔøΩ(ÔøΩÔøΩ<ÔøΩÔøΩDÔøΩÔøΩM«±OÔøΩÔøΩ;ÔøΩÔøΩ=ÔøΩÔøΩ,ÔøΩÔøΩ-ÔøΩÔøΩAÔøΩÔøΩBÔøΩÔøΩ?Ã∞T∆°=«¢?ÔøΩ¬ô5≈û;∆°?ÔøΩ¬ï2ÔøΩÔøΩ4ƒõ:ÔøΩÔøΩÔøΩ/¬ï7ﬂôÔøΩÔøΩ+ÔøΩÔøΩ<ÔøΩÔøΩ<ÔøΩÔøΩ=ÔøΩÔøΩ=ÔøΩÔøΩ<ÔøΩÔøΩ=ÔøΩÔøΩ=¬Ä1¬Å1ÔøΩyÔøΩ}2ÔøΩ|3ÔøΩyÔøΩm&ÔøΩf'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ 0,147 ÔøΩÔøΩ#	/ÔøΩ-$ÔøΩÔøΩ/EÔøΩ:3+ACÔøΩ>!ÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩBÔøΩ<!ÔøΩÔøΩ9ÔøΩ¬Ü8"ÔøΩ?ÔøΩ;%
ÔøΩ@ÔøΩ&ÔøΩÔøΩ6 +DFÔøΩ(ÔøΩÔøΩÔøΩDÔøΩ .*)25'ÔøΩÔøΩÔøΩÔøΩ ;
2025-10-23 21:05:46.654 [http-nio-8080-exec-4] DEBUG [359cc414-387:59c9d914] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=359cc414-387, spanId=59c9d914, URI=/h2-console/tree_type.gif
2025-10-23 21:05:46.655 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_empty.gif]
Body:
(no body)
2025-10-23 21:05:46.656 [http-nio-8080-exec-3] DEBUG [2ace2cfd-3db:5cb78b59] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2ace2cfd-3db, spanId=5cb78b59, URI=/h2-console/tree_index_az.gif
2025-10-23 21:05:46.648 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 3 ms]
Body:
GIF89a  ÔøΩ9 ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbrÔøΩ`pÔøΩhxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[lÔøΩ^oÔøΩk{ÔøΩl|ÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩƒªÔøΩÔøΩÔøΩÔøΩÔøΩevÔøΩoÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ∆∂ÔøΩœπÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ¬¥ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ⁄∞ÔøΩ…ØÔøΩ»êÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ  ? ,     tÔøΩÔøΩpH,ÔøΩFDb ÔøΩÔøΩtÔøΩoÔøΩQ( jÔøΩ<ÔøΩ
5D ÔøΩF!ÔøΩÔøΩp ÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩj.:ÔøΩp"24{B)xyx0C&ÔøΩÔøΩÔøΩ&C$xÔøΩu$C/1511ÔøΩÔøΩ1/C
xÔøΩ9
eÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩA ;
2025-10-23 21:05:46.661 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_index_az.gif]
Body:
(no body)
2025-10-23 21:05:46.665 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 5 ms]
Body:
GIF89a  ÔøΩ ÔøΩFÔøΩÔøΩyÔøΩovÔøΩe}ÔøΩ\ÔøΩÔøΩNÔøΩÔøΩTÔøΩÔøΩMZ]ÔøΩ{EÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     JÔøΩÔøΩIÔøΩ}
ÔøΩÔøΩnÔøΩHÔøΩ]ÔøΩ5Z%ÔøΩlgÔøΩÔøΩRKÔøΩ&OÔøΩÔøΩÔøΩ	zÔøΩÔøΩcHÔøΩ.ÔøΩÔøΩ#ÔøΩ H%ÔøΩ)ÔøΩV-ÔøΩÔøΩApÔøΩ6%ÔøΩGÔøΩ`ÔøΩÔøΩÔøΩÔøΩ ;
2025-10-23 21:05:46.670 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 5 ms]
Body:
GIF89a  ÔøΩ     ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,       ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ⁄ãÔøΩﬁú ;
2025-10-23 21:05:46.670 [http-nio-8080-exec-8] DEBUG [300c360d-ad6:4d9b438b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=300c360d-ad6, spanId=4d9b438b, URI=/h2-console/tree_index.gif
2025-10-23 21:05:46.652 [http-nio-8080-exec-10] DEBUG [3c5c97b1-1ed:c34e2aad] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=3c5c97b1-1ed, spanId=c34e2aad, URI=/h2-console/tree_column.gif
2025-10-23 21:05:46.675 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_column.gif]
Body:
(no body)
2025-10-23 21:05:46.675 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_type.gif]
Body:
(no body)
2025-10-23 21:05:46.675 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_index.gif]
Body:
(no body)
2025-10-23 21:05:46.676 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 21 ms]
Body:
GIF89a  ÔøΩ ÔøΩÔøΩÔøΩ.U&Nr6bÔøΩlÔøΩÔøΩkÔøΩ√ÉÔøΩÕÇÔøΩÃÇÔøΩ»òÔøΩ–©ÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩZÔøΩÔøΩsÔøΩÃêÔøΩÿëÔøΩ◊òÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     BÔøΩ'ÔøΩdiÔøΩhÔøΩ,ÔøΩÔøΩ 
ÔøΩOÔøΩ,IÔøΩÔøΩ&ÔøΩ )"ÔøΩ@@h0$AÔøΩ$,8ÔøΩÔøΩ	0@ÔøΩ)56ÔøΩÔøΩZbÔøΩzÔøΩnÔøΩB ;
2025-10-23 21:05:46.676 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 5 ms]
Body:
GIF89a  ÔøΩ ÔøΩÔøΩovÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsbFcU=zmXÃøÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     EÔøΩÔøΩÔøΩR4O%:ÔøΩ2RÔøΩQÔøΩ)YÔøΩ+2EÔøΩÔøΩ,ÔøΩŒü	BÔøΩÔøΩ 	@/yÔøΩ=ÔøΩÔøΩIÔøΩ)ÔøΩÔøΩ&◊´ÔøΩ8ÔøΩr%ÔøΩ%/\ÔøΩD  ;
2025-10-23 21:05:46.681 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 23 ms]
Body:
GIF89a  ÔøΩ9 ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbrÔøΩ`pÔøΩhxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[lÔøΩ^oÔøΩk{ÔøΩl|ÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩƒªÔøΩÔøΩÔøΩÔøΩÔøΩevÔøΩoÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ∆∂ÔøΩœπÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ¬¥ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ⁄∞ÔøΩ…ØÔøΩ»êÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩCreated with The GIMP !ÔøΩ  ? ,     AÔøΩÔøΩpH,ÔøΩÔøΩ"1ÔøΩ`ÔøΩÔøΩÔøΩlBAÔøΩ ÔøΩÔøΩtUÂæ™ÔøΩÔøΩCSÔøΩÔøΩj2HÔøΩ+)MÔøΩÔøΩbÔøΩÔøΩÔøΩH+ÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩDA ;
2025-10-23 21:05:46.726 [http-nio-8080-exec-1] DEBUG [db44cbfa-d31:6e67de3d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=db44cbfa-d31, spanId=6e67de3d, URI=/h2-console/tree_view.gif
2025-10-23 21:05:46.726 [http-nio-8080-exec-2] DEBUG [3e2429da-901:5f4148b7] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=3e2429da-901, spanId=5f4148b7, URI=/h2-console/tree_folder.gif
2025-10-23 21:05:46.739 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_folder.gif]
Body:
(no body)
2025-10-23 21:05:46.739 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 13 ms]
Body:
GIF89a  ÔøΩ  ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ€∑RÃô4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩq¬è*ÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ"ÔøΩj…ñ1ÔøΩÔøΩ%ÔøΩÔøΩÔøΩg€∑qÔøΩÔøΩÔøΩnÀò3ÔøΩÔøΩÔøΩÔøΩ~≈í-ÔøΩu«î/ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩy»ï0ÔøΩÔøΩ(ÔøΩÔøΩ∆Æ|ÔøΩhÔøΩvÔøΩzÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔâ∂ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ                                                      !ÔøΩ  . ,       ÔøΩ@ÔøΩpH,ÔøΩ»§ÔøΩ5LÔøΩ @9`Y)ÔøΩaz@`0ÔøΩÔøΩÔøΩDÔøΩÔøΩpbmÔøΩ€£œêÔøΩ:ÔøΩÔøΩÔøΩÔøΩ1ƒ¥ÔøΩÔøΩÔøΩ+C-%ÔøΩÔøΩÔøΩ-ÔøΩB-*ÔøΩÔøΩÔøΩ-	ÔøΩ.-)ÔøΩÔøΩÔøΩ-ÔøΩ-(ÔøΩÔøΩÔøΩ-!ÔøΩ
-$ÔøΩÔøΩÔøΩ-|Bg "	C +ÔøΩÔøΩÔøΩD &ÔøΩÔøΩÔøΩRKJA ;
2025-10-23 21:05:46.749 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_view.gif]
Body:
(no body)
2025-10-23 21:05:46.750 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 23 ms]
Body:
GIF89a  ÔøΩ ÔøΩÔøΩ∆ãÔøΩÔøΩUlÔøΩ2NnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     JÔøΩÔøΩIÔøΩÔøΩ8[$@"ÔøΩ2|YÔøΩÔøΩÔøΩ8ÔøΩ+ÔøΩﬁ®ÔøΩ0;ÔøΩ?ÔøΩ @ÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩ:	ÔøΩ	ÀìÔøΩÔøΩ_lÔøΩÔøΩÔøΩ4ÔøΩÔøΩ ;
2025-10-23 21:05:46.771 [http-nio-8080-exec-6] DEBUG [f4fb04ed-0b6:216466d9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=f4fb04ed-0b6, spanId=216466d9, URI=/h2-console/tree_users.gif
2025-10-23 21:05:46.774 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_users.gif]
Body:
(no body)
2025-10-23 21:05:46.775 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 3 ms]
Body:
GIF89a  ÔøΩg *A#6j 1a-DÔøΩ)?x0IÔøΩ;XÔøΩSgÔøΩN_ÔøΩXhÔøΩÔøΩÔøΩÔøΩ]pÔøΩ:r8o(GÔøΩ1OÔøΩ1MÔøΩ9VÔøΩMeÔøΩEYÔøΩJ_ÔøΩWnÔøΩ[rÔøΩPcÔøΩdyÔøΩarÔøΩÔøΩÔøΩƒõÔøΩ–ëÔøΩÔøΩÔøΩÔøΩÔøΩ$@u.KÔøΩ7WÔøΩ9XÔøΩBbÔøΩCcÔøΩFfÔøΩLlÔøΩLkÔøΩXwÔøΩdÔøΩÔøΩUmÔøΩTjÔøΩThÔøΩ_uÔøΩjÔøΩÔøΩ^sÔøΩtÔøΩÔøΩsÔøΩÔøΩgzÔøΩ~ÔøΩÔøΩnÔøΩÔøΩizÔøΩwÔøΩÔøΩÔøΩÔøΩ«öÔøΩ–öÔøΩœõÔøΩœôÔøΩÀùÔøΩ»©ÔøΩ“™ÔøΩÔøΩjÔøΩÔøΩfÔøΩgÔøΩnÔøΩÔøΩoÔøΩÔøΩ|ÔøΩÔøΩoÔøΩÔøΩ|ÔøΩÔøΩyÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩ÷±ÔøΩÔøΩÔøΩ„ó¶ÔøΩÔøΩÔøΩ◊´ÔøΩ“¨ÔøΩ—©ÔøΩŒ≤ÔøΩ◊ÆÔøΩ“∞ÔøΩ”ØÔøΩ“≠ÔøΩœ∞ÔøΩ“ÄÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃΩÔøΩ·ØºÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,       ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQYÔøΩMVÔøΩ>c:Ed0ÔøΩYÔøΩ%\MMÔøΩ^3*
EÔøΩ.I`ÔøΩ@N=]6  6]URBÔøΩ?_<]#J]S[AÔøΩFaO]"K7(]TbXÔøΩ/;]$L7EÔøΩC+ÔøΩP]'&]W4ÔøΩ1Z]f9eÔøΩ9ÔøΩb3p(ÔøΩÔøΩÔøΩCDÔøΩ0ÔøΩ@ÔøΩÔøΩdjÔøΩaÔøΩÔøΩÔøΩ\
ÔøΩÔøΩÔøΩI"A("ÔøΩ8…≤ÔøΩÔøΩ@ ;
2025-10-23 21:05:46.820 [http-nio-8080-exec-7] DEBUG [7b2070e1-7d4:8385235d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=7b2070e1-7d4, spanId=8385235d, URI=/h2-console/tree_info.gif
2025-10-23 21:05:46.820 [http-nio-8080-exec-5] DEBUG [2acda888-fe1:3d68b91b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2acda888-fe1, spanId=3d68b91b, URI=/h2-console/tree_user.gif
2025-10-23 21:05:46.824 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_info.gif]
Body:
(no body)
2025-10-23 21:05:46.824 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/tree_user.gif]
Body:
(no body)
2025-10-23 21:05:46.824 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 4 ms]
Body:
GIF89a  ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩTÔøΩ]ÔøΩ\ÔøΩbÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,     ÔøΩÔøΩ'ÔøΩdYf	2HÔøΩÔøΩÔøΩ4$ÔøΩ(ÔøΩ0ÔøΩÔøΩP vÔøΩÔøΩÔøΩÔøΩ	1ÔøΩÔøΩÔøΩI$$MÔøΩ)ÔøΩXEÔøΩESÔøΩÔøΩ\ÔøΩÔøΩ$ÔøΩÔøΩÔøΩcÔøΩÔøΩTÓòÉÔøΩCÔøΩ>ÔøΩhU	ÔøΩ+_J
++RT1>ÔøΩÔøΩFH#24ÔøΩ8:0(*,.0ÔøΩ%! ;
2025-10-23 21:05:47.072 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 4 ms]
Body:
GIF89a  ÔøΩg *A#6j 1a-DÔøΩ)?x0IÔøΩ;XÔøΩSgÔøΩN_ÔøΩXhÔøΩÔøΩÔøΩÔøΩ]pÔøΩ:r8o(GÔøΩ1OÔøΩ1MÔøΩ9VÔøΩMeÔøΩEYÔøΩJ_ÔøΩWnÔøΩ[rÔøΩPcÔøΩdyÔøΩarÔøΩÔøΩÔøΩƒõÔøΩ–ëÔøΩÔøΩÔøΩÔøΩÔøΩ$@u.KÔøΩ7WÔøΩ9XÔøΩBbÔøΩCcÔøΩFfÔøΩLlÔøΩLkÔøΩXwÔøΩdÔøΩÔøΩUmÔøΩTjÔøΩThÔøΩ_uÔøΩjÔøΩÔøΩ^sÔøΩtÔøΩÔøΩsÔøΩÔøΩgzÔøΩ~ÔøΩÔøΩnÔøΩÔøΩizÔøΩwÔøΩÔøΩÔøΩÔøΩ«öÔøΩ–öÔøΩœõÔøΩœôÔøΩÀùÔøΩ»©ÔøΩ“™ÔøΩÔøΩjÔøΩÔøΩfÔøΩgÔøΩnÔøΩÔøΩoÔøΩÔøΩ|ÔøΩÔøΩoÔøΩÔøΩ|ÔøΩÔøΩyÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩ÷±ÔøΩÔøΩÔøΩ„ó¶ÔøΩÔøΩÔøΩ◊´ÔøΩ“¨ÔøΩ—©ÔøΩŒ≤ÔøΩ◊ÆÔøΩ“∞ÔøΩ”ØÔøΩ“≠ÔøΩœ∞ÔøΩ“ÄÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃΩÔøΩ·ØºÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ   ,       QÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:EÔøΩÔøΩ%\ÔøΩÔøΩEÔøΩÔøΩ6  6ÔøΩ#JÔøΩ"K7(ÔøΩ$L7EÔøΩÔøΩ'&ÔøΩ9ÔøΩ8ÔøΩÔøΩÔøΩ!\ÔøΩ(&ÔøΩŒêÔøΩ ;
2025-10-23 21:05:51.579 [http-nio-8080-exec-9] DEBUG [c3e75b78-ee3:7e9a0a90] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c3e75b78-ee3, spanId=7e9a0a90, URI=/h2-console/query.do
2025-10-23 21:05:51.875 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /h2-console/query.do]
Body:
jsessionid=c621022208ee1e33d5590bf69abdeb84&sql=SELECT+*+FROM+BORROW_HISTORY+
2025-10-23 21:05:51.876 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 297 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
    <script type="text/javascript" src="table.js"></script>
</head>
<body class="result">

<div id="output">
SELECT * FROM BORROW_HISTORY;<br /><table class="resultSet" cellspacing="0" cellpadding="0"><tr><th>ID</th><th>BOOK_CODE</th><th>BOOK_TITLE</th><th>BORROW_DATE</th><th>BORROWER_CODE</th><th>BORROWER_NAME</th><th>RETURN_DATE</th><th>STATUS</th></tr><tr><td>1</td><td>BOOK-00001</td><td>title</td><td>2025-10-23 20:41:20.614345</td><td>BORR-00001</td><td>name</td><td>2025-10-23 20:41:58.687061</td><td>RETURNED</td></tr><tr><td>2</td><td>BOOK-00001</td><td>title</td><td>2025-10-23 20:42:14.255834</td><td>BORR-00001</td><td>name</td><td>2025-10-23 20:42:37.585823</td><td>RETURNED</td></tr><tr><td>3</td><td>BOOK-00001</td><td>title</td><td>2025-10-23 20:42:55.385186</td><td>BORR-00001</td><td>name</td><td>2025-10-23 20:51:16.255742</td><td>RETURNED</td></tr><tr><td>4</td><td>BOOK-00001</td><td>title</td><td>2025-10-23 20:51:19.686744</td><td>BORR-00001</td><td>name</td><td><i>null</i></td><td>BORROWED</td></tr></table>(4 rows, 241 ms)<br /><br /><form name="editResult" method="post" action="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" target="h2result"><input type="submit" class="button" value="Edit" /><input type="hidden" name="sql" value="@edit SELECT * FROM BORROW_HISTORY" /></form><br />
</div>

<table id="h2auto" class="autoComp"><tbody></tbody></table>

</body></html>

2025-10-23 21:05:51.919 [http-nio-8080-exec-3] DEBUG [f3e55e8f-362:f6487b72] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=f3e55e8f-362, spanId=f6487b72, URI=/h2-console/stylesheet.css
2025-10-23 21:05:51.920 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/stylesheet.css]
Body:
(no body)
2025-10-23 21:05:51.921 [http-nio-8080-exec-8] DEBUG [6852a555-5e1:50a7567c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6852a555-5e1, spanId=50a7567c, URI=/h2-console/table.js
2025-10-23 21:05:51.921 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1 ms]
Body:
/*
 * Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (https://h2database.com/html/license.html).
 * Initial Developer: H2 Group
 */

td, input, select, textarea, body, code, pre {
    font: 12px/1.4 Arial, sans-serif;
}

h1, h2, h3, h4, h5 {
    font: 12px/1.4 Arial, sans-serif;
    font-weight: bold;
}

a {
    text-decoration: none;
    color: #0000ff;
}

a:hover {
    text-decoration: underline;
}

body {
    margin: 4px;
}

code {
    background-color: #ece9d8;
    padding: 0px 2px;
}

h1 {
    background-color: #0000bb;
    padding: 2px 4px 2px 4px;
    color: #fff;
    font-size: 22px;
    line-height: normal;
}

h2 {
    font-size: 19px;
}

h3 {
    font-size: 16px;
}

li {
    margin-top: 6px;
}

ol {
    list-style-type: upper-roman;
    list-style-position: outside;
}

table {
    background-color: #ffffff;
    border-collapse: collapse;
    border: 1px solid #aca899;
}

td {
    background-color: #ffffff;
    padding: 2px;
    text-align: left;
    vertical-align:top;
    border: 1px solid #aca899;
}

textarea {
    width: 100%;
    overflow: auto;
}

th {
    font-weight: normal;
    text-align: left;
    background-color: #ece9d8;
    padding: 2px;
    border: 1px solid #aca899;
}

ul {
    list-style-type: disc;
    list-style-position: outside;
    padding-left: 20px;
}

.result {
    background-color: #f4f0e0;
    margin: 10px;
}

table.resultSet {
    white-space: pre;
}

.toolbar {
    background-color: #ece9d8;
}

table.toolbar {
    border-collapse: collapse;
    border: 0px;
    padding: 0px 0px;
}

th.toolbar {
    border: 0px;
}

tr.toolbar {
    border: 0px;
}

td.toolbar {
    vertical-align: middle;
    border: 0px;
    padding: 0px 0px;
}

table.nav {
    border: 0px;
}

tr.nav {
    border: 0px;
}

td.nav {
    border: 0px;
}

table.login {
    background-color: #ece9d8;
    border:1px solid #aca899;
}

tr.login {
    border: 0px;
}

th.login {
    color: #ffffff;
    text-align: left;
    border: 0px;
    background-color: #ece9d8;
    padding: 4px 10px;
    background-image: url(background.gif);
}

td.login {
    background-color: #ece9d8;
    padding: 5px 10px;
    text-align: left;
    border: 0px;
}

.iconLine {
    border-width:0px;
    border-style:solid;
}

.icon {
    border-top-color:#ece9d8;
    border-left-color:#ece9d8;
    border-right-color:#ece9d8;
    border-bottom-color:#ece9d8;
    border-width:1px;
    border-style:solid;
}

.icon_hover {
    border-color:#aca899;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-width:1px;
    border-style:solid;
}

table.empty {
    background-color: #ffffff;
    border: 0px;
}

td.empty {
    background-color: #ffffff;
    border: 0px;
    padding: 5px 10px;
    text-align: left;
}

.error {
    color: #771111;
}

div.error {
    background-color: #eecccc;
    border-color: #ddbbbb;
}

div.success {
    color: #226622;
    background-color: #cceecc;
    border-color: #bbddbb;
}

div.error, div.success {
    border-radius: 4px;
    padding: 10px;
    border-width: 1px;
    border-style: solid;
}

input.button {
    padding: 3px;
    background-color: #ece9d8;
    border-color: #aca899;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-width: 1px;
    border-style: solid;
}

input.button:hover {
    border-color: #5e5c55;
}

input.button:active {
    position:relative;
    top:1px;
}

.tree {
    border: 0px;
    vertical-align: middle;
    white-space: nowrap;
}

.tree img  {
    height: 18px;
    width: 18px;
    border: 0px;
    vertical-align: middle;
}

.tree a {
    border: 0px;
    text-decoration: none;
    vertical-align: middle;
    white-space: nowrap;
    color: #000000;
}

.tree a:hover {
    color: #345373;
}

table.content {
    width: 100%;
    height: 100%;
    border: 0px;
}

tr.content {
    border:0px;
    border-left:1px solid #aca899;
}

td.content {
    border:0px;
    border-left:1px solid #aca899;
}

.contentDiv {
    margin:10px;
}

tr.contentResult {
    border:0px;
    border-top:1px solid #aca899;
    border-left:1px solid #aca899;
}

td.contentResult {
    border:0px;
    border-top:1px solid #aca899;
    border-left:1px solid #aca899;
}

table.autoComp {
    background-color: #e0ecff;
    border: 1px solid #7f9db9;
    cursor: pointer;
    position: absolute;
    top: 1px;
    left: 1px;
    z-index:0;
    padding: 0px;
    margin: 0px;
    border-spacing:2px;
}

td.autoComp0 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #cce0ff;
    border: 0px;
}

td.autoComp1 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #e7f0ff;
    border: 0px;
}

td.autoComp2 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #ffffff;
    border: 0px;
}

td.autoCompHide {
    padding: 2px;
    display: none;
}

table.tool, table.tool tr, table.tool tr td {
    padding: 0px;
    border: 0px;
}

2025-10-23 21:05:51.930 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/table.js]
Body:
(no body)
2025-10-23 21:05:51.936 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 5 ms]
Body:
/*
 * Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (https://h2database.com/html/license.html).
 *  * Initial Developer: H2 Group
 */

addEvent(window, "load", initSort);

function addEvent(elm, evType, fn, useCapture) {
    // addEvent and removeEvent
    // cross-browser event handling for IE5+,  NS6 and Mozilla
    // By Scott Andrew
    if (elm.addEventListener){
        elm.addEventListener(evType, fn, useCapture);
        return true;
    } else if (elm.attachEvent){
        var r = elm.attachEvent("on"+evType, fn);
        return r;
    } else {
        alert("Handler could not be added");
    }
}

function initSort() {
    if (document.getElementById('editing') != undefined) {
        // don't allow sorting while editing
        return;
    }
    var tables = document.getElementsByTagName("table");
    for (var i=0; i<tables.length; i++) {
        table = tables[i];
        if (table.rows && table.rows.length > 0) {
            var header = table.rows[0];
            for(var j=0;j<header.cells.length;j++) {
                var cell = header.cells[j];
                var text = cell.innerHTML;
                cell.innerHTML = '<a href="#" style="text-decoration: none;" class="sortHeader" onclick="resortTable(this);">'+text+'<span class="sortArrow">&nbsp;&nbsp;</span></a>';
            }
        }
    }
}

function editRow(row, session, write, undo) {
    var table = document.getElementById('editTable');
    var y = row < 0 ? table.rows.length - 1 : row;
    var i;
    for(i=1; i<table.rows.length; i++) {
        var cell = table.rows[i].cells[0];
        if (i == y) {
            var edit = '<img width=16 height=16 src="ico_ok.gif" onclick="editOk('+row+')" onmouseover = "this.className =\'icon_hover\'" onmouseout = "this.className=\'icon\'" class="icon" alt="'+write+'" title="'+write+'" border="1"/>';
            var undo = '<img width=16 height=16 src="ico_undo.gif" onclick="editCancel('+row+')" onmouseover = "this.className =\'icon_hover\'" onmouseout = "this.className=\'icon\'" class="icon" alt="'+undo+'" title="'+undo+'" border="1"/>';
            cell.innerHTML = edit + undo;
        } else {
            cell.innerHTML = '';
        }
    }
    var cells = table.rows[y].cells;
    for (i=1; i<cells.length; i++) {
        var cell = cells[i];
        var text = getInnerText(cell);
        // escape so we can edit data that contains HTML special characters
        // '&' needs to be replaced first
        text = text.replace(/&/g, '&amp;').
            replace(/'/g, '&apos;').
            replace(/"/g, '&quot;').
            replace(/</g, '&lt;').
            replace(/>/g, '&gt;');
        var size;
        var newHTML;
        if (text.indexOf('\n') >= 0) {
            size = 40;
            newHTML = '<textarea name="$rowName" cols="$size" onkeydown="return editKeyDown($row, this, event)">$t</textarea/>';
        } else {
            size = text.length+5;
            newHTML = '<input type="text" name="$rowName" value="$t" size="$size" onkeydown="return editKeyDown($row, this, event)" />';
        }
        newHTML = newHTML.replace('$rowName', 'r' + row + 'c' + i);
        newHTML = newHTML.replace('$row', row);
        newHTML = newHTML.replace('$t', text);
        newHTML = newHTML.replace('$size', size);
        cell.innerHTML = newHTML;
    }
}

function deleteRow(row, session, write, undo) {
    var table = document.getElementById('editTable');
    var y = row < 0 ? table.rows.length - 1 : row;
    var i;
    for(i=1; i<table.rows.length; i++) {
        var cell = table.rows[i].cells[0];
        if (i == y) {
            var edit = '<img width=16 height=16 src="ico_remove_ok.gif" onclick="deleteOk('+row+')" onmouseover = "this.className =\'icon_hover\'" onmouseout = "this.className=\'icon\'" class="icon" alt="'+write+'" title="'+write+'" border="1"/>';
            var undo = '<img width=16 height=16 src="ico_undo.gif" onclick="editCancel('+row+')" onmouseover = "this.className =\'icon_hover\'" onmouseout = "this.className=\'icon\'" class="icon" alt="'+undo+'" title="'+undo+'" border="1"/>';
            cell.innerHTML = edit + undo;
        } else {
            cell.innerHTML = '';
        }
    }
    var cells = table.rows[y].cells;
    for (i=1; i<cells.length; i++) {
        var s = cells[i].style;
        s.color = 'red';
        s.textDecoration = 'line-through';
    }
}

function editFinish(row, res) {
    var editing = document.getElementById('editing');
    editing.row.value = row;
    editing.op.value = res;
    editing.submit();
}

function editCancel(row) {
    editFinish(row, '3');
}

function editOk(row) {
    editFinish(row, '1');
}

function deleteOk(row) {
    editFinish(row, '2');
}

function editKeyDown(row, object, event) {
    var key=event.keyCode? event.keyCode : event.charCode;
    if (key == 46 && event.ctrlKey) {
        // ctrl + delete
        object.value = 'null';
        return false;
    } else if (key == 13) {
        if (!event.ctrlKey && !event.shiftKey && !event.altKey) {
            editOk(row);
            return false;
        }
    } else if (key == 27) {
        editCancel(row);
        return false;
    }
}

function getInnerText(el) {
    if (typeof el == "string") return el;
    if (typeof el == "undefined") return el;
    if (el.innerText) {
        // not needed but it is faster
        return el.innerText;
    }
    var str = "";
    var cs = el.childNodes;
    var l = cs.length;
    for (var i = 0; i < l; i++) {
        switch (cs[i].nodeType) {
        case 1: //ELEMENT_NODE
            str += getInnerText(cs[i]);
            break;
        case 3:    //TEXT_NODE
            str += cs[i].nodeValue;
            break;
        }
    }
    return str;
}

function isNullCell(td) {
    return td.childNodes.length == 1 && (td.childNodes[0].nodeName == "I");
}

function resortTable(link) {
    // get the span
    var span;
    for (var ci=0;ci<link.childNodes.length;ci++) {
        if (link.childNodes[ci].tagName && link.childNodes[ci].tagName.toLowerCase() == 'span') {
            span = link.childNodes[ci];
        }
    }
    var td = link.parentNode;
    var column = td.cellIndex;
    var table = getParent(td,'TABLE');
    var rows = table.rows;
    if (rows.length <= 1) return;

    // detect sort type
    var sortNumeric = true;
    for (i = 1; i < rows.length; i++) {
        var td = rows[i].cells[column];
        if (!isNullCell(td)) {
            var x = getInnerText(td);
            // H2 does not return numeric values with leading +, but may return
            // values in scientific notation
            if (!x.match(/^\-?\d*\.?\d+(?:[Ee][\+\-]?\d+)?$/)) {
                sortNumeric = false;
                break;
            }
        }
    }
    var newRows = new Array();
    for (i=1; i<rows.length; i++) {
        var o = new Object();
        o.data = rows[i];
        o.id = i;
        var td = o.data.cells[column];
        var n = isNullCell(td);
        o.isNull = n;
        if (!n) {
            var txt = getInnerText(td);
            if (sortNumeric) {
                o.sort = parseFloat(txt);
                if (isNaN(o.sort)) o.sort = 0;
            } else {
                o.sort = txt;
            }
        }
        newRows[i-1] = o;
    }
    newRows.sort(sortCallback);
    var arrow;
    if (span.getAttribute("sortDir") == 'down') {
        arrow = '&nbsp;<span style="color:gray">&#x25b2;</span>';
        newRows.reverse();
        span.setAttribute('sortDir','up');
    } else {
        arrow = '&nbsp;<span style="color:gray">&#x25bc;</span>';
        span.setAttribute('sortDir','down');
    }

    // we appendChild rows that already exist to the tbody,
    // so it moves them rather than creating new ones
    var body = table.tBodies[0];
    for (i=0; i<newRows.length; i++) {
        body.appendChild(newRows[i].data);
    }

    // delete any other arrows there may be showing
    var allSpans = document.getElementsByTagName("span");
    for (var i=0;i<allSpans.length;i++) {
        if (allSpans[i].className == 'sortArrow') {
            // in the same table as us?
            if (getParent(allSpans[i],"table") == getParent(link,"table")) {
                allSpans[i].innerHTML = '&nbsp;&nbsp;';
            }
        }
    }
    span.innerHTML = arrow;
}

function getParent(el, pTagName) {
    if (el == null) return null;
    else if (el.nodeType == 1 && el.tagName.toLowerCase() == pTagName.toLowerCase())    {
        // Gecko bug, supposed to be uppercase
        return el;
    } else {
        return getParent(el.parentNode, pTagName);
    }
}

function sortCallback(ra, rb) {
    if (ra.isNull) {
        return rb.isNull ? (ra.id - rb.id) : -1;
    } else if (rb.IsNull) {
        return 1;
    }
    return (ra.sort==rb.sort) ? (ra.id-rb.id) : (ra.sort<rb.sort ? -1 : 1);
}

2025-10-23 21:06:12.550 [http-nio-8080-exec-4] DEBUG [9151f056-38c:82baaaaf] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=9151f056-38c, spanId=82baaaaf, URI=/h2-console/query.do
2025-10-23 21:06:12.556 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /h2-console/query.do]
Body:
jsessionid=c621022208ee1e33d5590bf69abdeb84&sql=SELECT+*+FROM+BORROWERS+
2025-10-23 21:06:12.557 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 6 ms]
Body:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
and the EPL 1.0 (https://h2database.com/html/license.html).
Initial Developer: H2 Group
-->
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>H2 Console</title>
    <link rel="stylesheet" type="text/css" href="stylesheet.css" />
    <script type="text/javascript" src="table.js"></script>
</head>
<body class="result">

<div id="output">
SELECT * FROM BORROWERS;<br /><table class="resultSet" cellspacing="0" cellpadding="0"><tr><th>ID</th><th>CODE</th><th>EMAIL</th><th>NAME</th></tr><tr><td>1</td><td>BORR-00001</td><td>email@email.com</td><td>name</td></tr></table>(1 row, 3 ms)<br /><br /><form name="editResult" method="post" action="query.do?jsessionid=c621022208ee1e33d5590bf69abdeb84" target="h2result"><input type="submit" class="button" value="Edit" /><input type="hidden" name="sql" value="@edit SELECT * FROM BORROWERS" /></form><br />
</div>

<table id="h2auto" class="autoComp"><tbody></tbody></table>

</body></html>

2025-10-23 21:06:12.605 [http-nio-8080-exec-10] DEBUG [901ba6b9-d23:e7eb698f] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=901ba6b9-d23, spanId=e7eb698f, URI=/h2-console/table.js
2025-10-23 21:06:12.605 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/table.js]
Body:
(no body)
2025-10-23 21:06:12.606 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 304] [Time: 0 ms]
Body:
(no body)
2025-10-23 21:06:12.609 [http-nio-8080-exec-10] DEBUG [78e80ec4-04a:6ccfcdba] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=78e80ec4-04a, spanId=6ccfcdba, URI=/h2-console/stylesheet.css
2025-10-23 21:06:12.611 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /h2-console/stylesheet.css]
Body:
(no body)
2025-10-23 21:06:12.612 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 2 ms]
Body:
/*
 * Copyright 2004-2023 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (https://h2database.com/html/license.html).
 * Initial Developer: H2 Group
 */

td, input, select, textarea, body, code, pre {
    font: 12px/1.4 Arial, sans-serif;
}

h1, h2, h3, h4, h5 {
    font: 12px/1.4 Arial, sans-serif;
    font-weight: bold;
}

a {
    text-decoration: none;
    color: #0000ff;
}

a:hover {
    text-decoration: underline;
}

body {
    margin: 4px;
}

code {
    background-color: #ece9d8;
    padding: 0px 2px;
}

h1 {
    background-color: #0000bb;
    padding: 2px 4px 2px 4px;
    color: #fff;
    font-size: 22px;
    line-height: normal;
}

h2 {
    font-size: 19px;
}

h3 {
    font-size: 16px;
}

li {
    margin-top: 6px;
}

ol {
    list-style-type: upper-roman;
    list-style-position: outside;
}

table {
    background-color: #ffffff;
    border-collapse: collapse;
    border: 1px solid #aca899;
}

td {
    background-color: #ffffff;
    padding: 2px;
    text-align: left;
    vertical-align:top;
    border: 1px solid #aca899;
}

textarea {
    width: 100%;
    overflow: auto;
}

th {
    font-weight: normal;
    text-align: left;
    background-color: #ece9d8;
    padding: 2px;
    border: 1px solid #aca899;
}

ul {
    list-style-type: disc;
    list-style-position: outside;
    padding-left: 20px;
}

.result {
    background-color: #f4f0e0;
    margin: 10px;
}

table.resultSet {
    white-space: pre;
}

.toolbar {
    background-color: #ece9d8;
}

table.toolbar {
    border-collapse: collapse;
    border: 0px;
    padding: 0px 0px;
}

th.toolbar {
    border: 0px;
}

tr.toolbar {
    border: 0px;
}

td.toolbar {
    vertical-align: middle;
    border: 0px;
    padding: 0px 0px;
}

table.nav {
    border: 0px;
}

tr.nav {
    border: 0px;
}

td.nav {
    border: 0px;
}

table.login {
    background-color: #ece9d8;
    border:1px solid #aca899;
}

tr.login {
    border: 0px;
}

th.login {
    color: #ffffff;
    text-align: left;
    border: 0px;
    background-color: #ece9d8;
    padding: 4px 10px;
    background-image: url(background.gif);
}

td.login {
    background-color: #ece9d8;
    padding: 5px 10px;
    text-align: left;
    border: 0px;
}

.iconLine {
    border-width:0px;
    border-style:solid;
}

.icon {
    border-top-color:#ece9d8;
    border-left-color:#ece9d8;
    border-right-color:#ece9d8;
    border-bottom-color:#ece9d8;
    border-width:1px;
    border-style:solid;
}

.icon_hover {
    border-color:#aca899;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-width:1px;
    border-style:solid;
}

table.empty {
    background-color: #ffffff;
    border: 0px;
}

td.empty {
    background-color: #ffffff;
    border: 0px;
    padding: 5px 10px;
    text-align: left;
}

.error {
    color: #771111;
}

div.error {
    background-color: #eecccc;
    border-color: #ddbbbb;
}

div.success {
    color: #226622;
    background-color: #cceecc;
    border-color: #bbddbb;
}

div.error, div.success {
    border-radius: 4px;
    padding: 10px;
    border-width: 1px;
    border-style: solid;
}

input.button {
    padding: 3px;
    background-color: #ece9d8;
    border-color: #aca899;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-width: 1px;
    border-style: solid;
}

input.button:hover {
    border-color: #5e5c55;
}

input.button:active {
    position:relative;
    top:1px;
}

.tree {
    border: 0px;
    vertical-align: middle;
    white-space: nowrap;
}

.tree img  {
    height: 18px;
    width: 18px;
    border: 0px;
    vertical-align: middle;
}

.tree a {
    border: 0px;
    text-decoration: none;
    vertical-align: middle;
    white-space: nowrap;
    color: #000000;
}

.tree a:hover {
    color: #345373;
}

table.content {
    width: 100%;
    height: 100%;
    border: 0px;
}

tr.content {
    border:0px;
    border-left:1px solid #aca899;
}

td.content {
    border:0px;
    border-left:1px solid #aca899;
}

.contentDiv {
    margin:10px;
}

tr.contentResult {
    border:0px;
    border-top:1px solid #aca899;
    border-left:1px solid #aca899;
}

td.contentResult {
    border:0px;
    border-top:1px solid #aca899;
    border-left:1px solid #aca899;
}

table.autoComp {
    background-color: #e0ecff;
    border: 1px solid #7f9db9;
    cursor: pointer;
    position: absolute;
    top: 1px;
    left: 1px;
    z-index:0;
    padding: 0px;
    margin: 0px;
    border-spacing:2px;
}

td.autoComp0 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #cce0ff;
    border: 0px;
}

td.autoComp1 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #e7f0ff;
    border: 0px;
}

td.autoComp2 {
    border-spacing: 0px;
    padding: 1px 8px;
    background-color: #ffffff;
    border: 0px;
}

td.autoCompHide {
    padding: 2px;
    display: none;
}

table.tool, table.tool tr, table.tool tr td {
    padding: 0px;
    border: 0px;
}

2025-10-23 21:07:32.303 [http-nio-8080-exec-8] DEBUG [61f0b6e5-b41:da80a359] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=61f0b6e5-b41, spanId=da80a359, URI=/api/borrowers
2025-10-23 21:07:32.313 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 21:07:32.314 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 10 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name",
  "email" : "email@email.com"
} ]
2025-10-23 21:08:12.212 [http-nio-8080-exec-4] DEBUG [c6c48aeb-a18:0e46774d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c6c48aeb-a18, spanId=0e46774d, URI=/api/books
2025-10-23 21:08:12.218 [http-nio-8080-exec-4] INFO  [c6c48aeb-a18:0e46774d] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:08:12.219 [http-nio-8080-exec-4] DEBUG [c6c48aeb-a18:0e46774d] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:08:12.228 [http-nio-8080-exec-4] DEBUG [c6c48aeb-a18:0e46774d] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:08:12.231 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:08:12.232 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 19 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "1111",
  "title" : "title",
  "author" : "author",
  "borrowedById" : 1
} ]
2025-10-23 21:09:56.282 [RMI TCP Connection(42)-127.0.0.1] INFO  [:] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-10-23 21:09:56.292 [RMI TCP Connection(42)-127.0.0.1] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-10-23 21:11:55.563 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 21:11:55.825 [main] INFO  [:] c.e.library.LibraryApiApplication - Starting LibraryApiApplication using Java 17.0.16 with PID 13676 (C:\Users\Prakash\Documents\workspace\library\library-api\target\classes started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 21:11:55.828 [main] DEBUG [:] c.e.library.LibraryApiApplication - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 21:11:55.831 [main] INFO  [:] c.e.library.LibraryApiApplication - The following 1 profile is active: "dev"
2025-10-23 21:11:59.281 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 21:11:59.548 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 241 ms. Found 3 JPA repository interfaces.
2025-10-23 21:12:02.077 [main] INFO  [:] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-23 21:12:02.163 [main] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-23 21:12:02.176 [main] INFO  [:] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-23 21:12:02.177 [main] INFO  [:] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-10-23 21:12:02.490 [main] INFO  [:] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-23 21:12:02.491 [main] INFO  [:] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6413 ms
2025-10-23 21:12:02.652 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 21:12:03.628 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 21:12:03.635 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 21:12:03.679 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 21:12:03.876 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 21:12:03.878 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 21:12:04.462 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 21:12:05.062 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 21:12:05.403 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 21:12:07.091 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 21:12:11.948 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 21:12:12.272 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:12:14.310 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 21:12:14.399 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 21:12:15.965 [main] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-23 21:12:16.252 [main] INFO  [:] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-23 21:12:16.440 [main] INFO  [:] c.e.library.LibraryApiApplication - Started LibraryApiApplication in 23.022 seconds (process running for 25.624)
2025-10-23 21:12:49.430 [http-nio-8080-exec-1] INFO  [:] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-23 21:12:49.431 [http-nio-8080-exec-1] INFO  [:] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-23 21:12:49.434 [http-nio-8080-exec-1] INFO  [:] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-10-23 21:12:49.474 [http-nio-8080-exec-1] DEBUG [c45a07f6-ce2:896ab15c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c45a07f6-ce2, spanId=896ab15c, URI=/library.html
2025-10-23 21:12:49.641 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 21:12:49.692 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 185 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedById || '-'}</td>
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 21:12:49.853 [http-nio-8080-exec-2] DEBUG [8b7695b1-486:c787421b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=8b7695b1-486, spanId=c787421b, URI=/favicon.ico
2025-10-23 21:12:49.912 [http-nio-8080-exec-3] DEBUG [2caf37f9-fa9:be7a62ad] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2caf37f9-fa9, spanId=be7a62ad, URI=/api/books
2025-10-23 21:12:49.936 [http-nio-8080-exec-4] DEBUG [50a5f504-532:7726d743] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=50a5f504-532, spanId=7726d743, URI=/api/borrowers
2025-10-23 21:12:49.951 [http-nio-8080-exec-6] DEBUG [a6716be2-ced:6a573dc9] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=a6716be2-ced, spanId=6a573dc9, URI=/api/history
2025-10-23 21:12:50.131 [http-nio-8080-exec-3] INFO  [2caf37f9-fa9:be7a62ad] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:12:50.135 [http-nio-8080-exec-3] DEBUG [2caf37f9-fa9:be7a62ad] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:12:50.498 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 21:12:50.654 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 646 ms]
Body:
{
  "timestamp" : "2025-10-23T21:12:49",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 21:12:50.887 [http-nio-8080-exec-3] DEBUG [2caf37f9-fa9:be7a62ad] c.e.l.controller.BookController - Total books fetched: 0
2025-10-23 21:12:50.901 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:12:50.902 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 989 ms]
Body:
[ ]
2025-10-23 21:12:50.910 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 21:12:50.911 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 959 ms]
Body:
[ ]
2025-10-23 21:12:50.953 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 21:12:50.955 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1018 ms]
Body:
[ ]
2025-10-23 21:13:03.050 [http-nio-8080-exec-7] DEBUG [c664bcf0-dcb:8c799069] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c664bcf0-dcb, spanId=8c799069, URI=/api/borrowers
2025-10-23 21:13:03.619 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "name1",
  "email" : "email@email.com"
}
2025-10-23 21:13:03.620 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 569 ms]
Body:
{
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name1",
  "email" : "email@email.com"
}
2025-10-23 21:13:03.639 [http-nio-8080-exec-5] DEBUG [3562c9e7-0ea:c87398c7] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=3562c9e7-0ea, spanId=c87398c7, URI=/api/borrowers
2025-10-23 21:13:03.669 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 21:13:03.678 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 31 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name1",
  "email" : "email@email.com"
} ]
2025-10-23 21:13:13.711 [http-nio-8080-exec-9] DEBUG [6cb6cf46-dfb:168b3b1a] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6cb6cf46-dfb, spanId=168b3b1a, URI=/api/books
2025-10-23 21:13:13.737 [http-nio-8080-exec-9] INFO  [6cb6cf46-dfb:168b3b1a] c.e.l.controller.BookController - Registering new book: title1 by author2
2025-10-23 21:13:13.740 [http-nio-8080-exec-9] INFO  [6cb6cf46-dfb:168b3b1a] c.e.library.service.BookServiceImpl - Registering new book: [111 - title1]
2025-10-23 21:13:13.750 [http-nio-8080-exec-9] DEBUG [6cb6cf46-dfb:168b3b1a] c.e.library.service.BookServiceImpl - Book saved with ID: 1
2025-10-23 21:13:13.760 [http-nio-8080-exec-9] DEBUG [6cb6cf46-dfb:168b3b1a] c.e.l.controller.BookController - Book registered successfully with ID: 1
2025-10-23 21:13:13.774 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2"
}
2025-10-23 21:13:13.776 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 62 ms]
Body:
{
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : null,
  "borrowedByCode" : null
}
2025-10-23 21:13:13.794 [http-nio-8080-exec-8] DEBUG [08414364-caa:a3fd5b65] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=08414364-caa, spanId=a3fd5b65, URI=/api/books
2025-10-23 21:13:13.797 [http-nio-8080-exec-8] INFO  [08414364-caa:a3fd5b65] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:13:13.799 [http-nio-8080-exec-8] DEBUG [08414364-caa:a3fd5b65] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:13:13.817 [http-nio-8080-exec-8] DEBUG [08414364-caa:a3fd5b65] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:13:13.822 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:13:13.823 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 29 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : null,
  "borrowedByCode" : null
} ]
2025-10-23 21:13:20.558 [http-nio-8080-exec-10] DEBUG [c5e4c2d5-5a5:40ec0c5c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=c5e4c2d5-5a5, spanId=40ec0c5c, URI=/api/books/borrow/BOOK-00001
2025-10-23 21:13:20.595 [http-nio-8080-exec-10] INFO  [c5e4c2d5-5a5:40ec0c5c] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 21:13:20.597 [http-nio-8080-exec-10] INFO  [c5e4c2d5-5a5:40ec0c5c] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:13:20.773 [http-nio-8080-exec-10] INFO  [c5e4c2d5-5a5:40ec0c5c] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 21:13:20.780 [http-nio-8080-exec-10] INFO  [c5e4c2d5-5a5:40ec0c5c] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 21:13:20.785 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 21:13:20.787 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 227 ms]
Body:
Book borrowed successfully
2025-10-23 21:13:20.801 [http-nio-8080-exec-1] DEBUG [b3766434-b1d:256ada83] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b3766434-b1d, spanId=256ada83, URI=/api/books
2025-10-23 21:13:20.807 [http-nio-8080-exec-1] INFO  [b3766434-b1d:256ada83] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:13:20.808 [http-nio-8080-exec-1] DEBUG [b3766434-b1d:256ada83] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:13:20.865 [http-nio-8080-exec-1] DEBUG [b3766434-b1d:256ada83] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:13:20.869 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:13:20.871 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 68 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : 1,
  "borrowedByCode" : "BORR-00001"
} ]
2025-10-23 21:13:25.514 [http-nio-8080-exec-2] DEBUG [6127912b-b0e:259a88c6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6127912b-b0e, spanId=259a88c6, URI=/api/history
2025-10-23 21:13:25.539 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 21:13:25.541 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 25 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title1",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name1",
  "borrowDate" : "2025-10-23T21:13:20.765753",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 21:13:34.096 [http-nio-8080-exec-3] DEBUG [715784e3-fa0:0ad69517] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=715784e3-fa0, spanId=0ad69517, URI=/api/books
2025-10-23 21:13:34.098 [http-nio-8080-exec-3] INFO  [715784e3-fa0:0ad69517] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:13:34.099 [http-nio-8080-exec-3] DEBUG [715784e3-fa0:0ad69517] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:13:34.108 [http-nio-8080-exec-3] DEBUG [715784e3-fa0:0ad69517] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:13:34.113 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:13:34.114 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 16 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : 1,
  "borrowedByCode" : "BORR-00001"
} ]
2025-10-23 21:15:04.902 [http-nio-8080-exec-5] DEBUG [bf1f66cc-a99:1effd44b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=bf1f66cc-a99, spanId=1effd44b, URI=/api/books
2025-10-23 21:15:04.904 [http-nio-8080-exec-5] INFO  [bf1f66cc-a99:1effd44b] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:15:04.904 [http-nio-8080-exec-5] DEBUG [bf1f66cc-a99:1effd44b] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:15:04.911 [http-nio-8080-exec-5] DEBUG [bf1f66cc-a99:1effd44b] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:15:04.915 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:15:04.915 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 14 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : 1,
  "borrowedByCode" : "BORR-00001"
} ]
2025-10-23 21:15:07.349 [http-nio-8080-exec-9] DEBUG [5e61f7d6-640:3cc16d62] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=5e61f7d6-640, spanId=3cc16d62, URI=/api/books
2025-10-23 21:15:07.352 [http-nio-8080-exec-9] INFO  [5e61f7d6-640:3cc16d62] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:15:07.353 [http-nio-8080-exec-9] DEBUG [5e61f7d6-640:3cc16d62] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:15:07.360 [http-nio-8080-exec-9] DEBUG [5e61f7d6-640:3cc16d62] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:15:07.364 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:15:07.366 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 15 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : 1,
  "borrowedByCode" : "BORR-00001"
} ]
2025-10-23 21:15:09.212 [http-nio-8080-exec-8] DEBUG [b5a860db-ed9:5245ab2b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b5a860db-ed9, spanId=5245ab2b, URI=/library.html
2025-10-23 21:15:09.766 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /library.html]
Body:
(no body)
2025-10-23 21:15:09.770 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 555 ms]
Body:
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>üìö Library Management UI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; }
    h2 { margin-top: 1rem; }
    .card { border-radius: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    table { font-size: 0.9rem; }
    .toast-container { z-index: 2000; }
  </style>
</head>
<body>
<div class="container py-4">
  <h2 class="text-center mb-4 text-primary fw-bold">üìö Library Management Dashboard</h2>

  <!-- üîî Toast Notification Container -->
  <div class="position-fixed top-0 end-0 p-3 toast-container">
    <div id="toastBox"></div>
  </div>

  <!-- üë§ Register Borrower -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üë§ Register Borrower</h5>
      <div class="row g-2">
        <div class="col-md-5">
          <input type="text" id="borrowerName" class="form-control" placeholder="Borrower Name">
        </div>
        <div class="col-md-5">
          <input type="email" id="borrowerEmail" class="form-control" placeholder="Borrower Email">
        </div>
        <div class="col-md-2">
          <button class="btn btn-primary w-100" onclick="registerBorrower()">Register</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üßæ Borrowers List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üßæ Borrowers List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBorrowers()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Email</th>
          </tr>
        </thead>
        <tbody id="borrowersTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üìñ Register Book -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üìñ Register Book</h5>
      <div class="row g-2">
        <div class="col-md-3">
          <input type="text" id="bookIsbn" class="form-control" placeholder="ISBN Number">
        </div>
        <div class="col-md-4">
          <input type="text" id="bookTitle" class="form-control" placeholder="Book Title">
        </div>
        <div class="col-md-3">
          <input type="text" id="bookAuthor" class="form-control" placeholder="Author Name">
        </div>
        <div class="col-md-2">
          <button class="btn btn-success w-100" onclick="registerBook()">Add Book</button>
        </div>
      </div>
    </div>
  </div>

  <!-- üìö Books List -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üìò Books List
        <button class="btn btn-outline-info btn-sm" onclick="getAllBooks()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Code</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author</th>
            <th>Status</th>
            <th>Borrower Code</th>
          </tr>
        </thead>
        <tbody id="booksTable"></tbody>
      </table>
    </div>
  </div>

  <!-- üîÅ Borrow / Return -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary">üîÅ Borrow / Return Book</h5>
      <div class="row g-2 align-items-center">
        <div class="col-md-4">
          <select id="borrowerSelect" class="form-select">
            <option value="">Select Borrower</option>
          </select>
        </div>
        <div class="col-md-4">
          <select id="bookSelect" class="form-select">
            <option value="">Select Book</option>
          </select>
        </div>
        <div class="col-md-4 d-flex gap-2">
          <button class="btn btn-warning w-100" onclick="borrowBook()">Borrow</button>
          <button class="btn btn-secondary w-100" onclick="returnBook()">Return</button>
        </div>
      </div>
      <div class="text-end mt-3">
        <button class="btn btn-danger btn-sm" onclick="doubleBorrow()">Test Double Borrow üö´</button>
      </div>
    </div>
  </div>
  
  <!-- üßæ Borrow History -->
  <div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title text-secondary d-flex justify-content-between align-items-center">
        üïì Borrowed Book History
        <button class="btn btn-outline-info btn-sm" onclick="getBorrowHistory()">Refresh</button>
      </h5>
      <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
          <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Borrower</th>
            <th>Borrow Date</th>
            <th>Return Date</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="historyTable"></tbody>
      </table>
    </div>
  </div>

</div>

<script>
  const API_BASE = "http://localhost:8080/api";

  // Notification
  function showAlert(message, type = 'success') {
    const toastBox = document.getElementById('toastBox');
    const bgClass =
      type === 'success' ? 'bg-success' :
      type === 'danger' ? 'bg-danger' :
      type === 'warning' ? 'bg-warning text-dark' :
      'bg-info';

    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white ${bgClass} border-0 show mb-2`;
    toast.role = "alert";
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body fw-semibold">${message}</div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>
    `;

    toastBox.appendChild(toast);
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 300);
    }, 4000);
  }

  // Register Borrower
  async function registerBorrower() {
    const name = document.getElementById("borrowerName").value.trim();
    const email = document.getElementById("borrowerEmail").value.trim();
    if (!name || !email) return showAlert("Enter both name and email!", "warning");

    const res = await fetch(`${API_BASE}/borrowers`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Borrower Registered ‚úÖ (${data.code})`, "success");
      getAllBorrowers();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register borrower", "danger");
    }

    document.getElementById("borrowerName").value = '';
    document.getElementById("borrowerEmail").value = '';
  }

  // Get All Borrowers
  async function getAllBorrowers() {
    const res = await fetch(`${API_BASE}/borrowers`);
    if (!res.ok) {
      return showAlert("Failed to load borrowers", "danger");
    }
    const data = await res.json();

    // Update borrower table
    const table = document.getElementById("borrowersTable");
    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.name}</td>
        <td>${b.email}</td>
      </tr>
    `).join('');

    // Update borrower dropdown
    const select = document.getElementById("borrowerSelect");
    select.innerHTML = '<option value="">Select Borrower</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.name}</option>`).join('');
  }

  // Register Book
  async function registerBook() {
    const isbn = document.getElementById("bookIsbn").value.trim();
    const title = document.getElementById("bookTitle").value.trim();
    const author = document.getElementById("bookAuthor").value.trim();

    if (!isbn || !title || !author)
      return showAlert("Enter ISBN, title, and author!", "warning");

    const res = await fetch(`${API_BASE}/books`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ isbn, title, author })
    });

    if (res.ok) {
      const data = await res.json();
      showAlert(`Book Added ‚úÖ (${data.code})`, "success");
      getAllBooks();
    } else {
      const msg = await res.text();
      showAlert(msg || "Failed to register book", "danger");
    }

    document.getElementById("bookIsbn").value = '';
    document.getElementById("bookTitle").value = '';
    document.getElementById("bookAuthor").value = '';
  }

  // Get All Books
  async function getAllBooks() {
    const res = await fetch(`${API_BASE}/books`);
    const data = await res.json();
    const table = document.getElementById("booksTable");

    table.innerHTML = data.map(b => `
      <tr>
        <td>${b.code}</td>
        <td>${b.isbn}</td>
        <td>${b.title}</td>
        <td>${b.author}</td>
        <td>${b.borrowedById ? '<span class="badge bg-danger">Borrowed</span>' : '<span class="badge bg-success">Available</span>'}</td>
        <td>${b.borrowedByCode || '-'}</td> <!-- ‚úÖ Updated -->
      </tr>
    `).join('');

    // Update book dropdown
    const select = document.getElementById("bookSelect");
    select.innerHTML = '<option value="">Select Book</option>' +
      data.map(b => `<option value="${b.code}">${b.code} - ${b.title}</option>`).join('');
  }

  // Borrow Book
  async function borrowBook() {
    const borrowerSelect = document.getElementById("borrowerSelect");
    const bookSelect = document.getElementById("bookSelect");

    const borrowerOption = borrowerSelect.options[borrowerSelect.selectedIndex].text;
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const borrowerCode = borrowerOption.split(" - ")[0];
    const bookCode = bookOption.split(" - ")[0];

    if (!borrowerCode || !bookCode) return showAlert("Select borrower and book!", "warning");

    const res = await fetch(`${API_BASE}/books/borrow/${bookCode}?borrowerCode=${borrowerCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "info" : "danger");
    getAllBooks();
  }

  // Return Book
  async function returnBook() {
    const bookSelect = document.getElementById("bookSelect");
    const bookOption = bookSelect.options[bookSelect.selectedIndex].text;

    const bookCode = bookOption.split(" - ")[0];
    if (!bookCode) return showAlert("Select a book!", "warning");

    const res = await fetch(`${API_BASE}/books/return/${bookCode}`, { method: "POST" });
    const msg = await res.text();

    showAlert(msg, res.ok ? "secondary" : "danger");
    getAllBooks();
  }
  
  // Get Borrow History
  async function getBorrowHistory() {
    const res = await fetch(`${API_BASE}/history`);
    const data = await res.json();
    const table = document.getElementById("historyTable");

    table.innerHTML = data.map(h => `
      <tr>
        <td>${h.bookCode}</td>
        <td>${h.bookTitle}</td>
        <td>${h.borrowerCode} - ${h.borrowerName}</td>
        <td>${h.borrowDate ? new Date(h.borrowDate).toLocaleString() : '-'}</td>
        <td>${h.returnDate ? new Date(h.returnDate).toLocaleString() : '-'}</td>
        <td>
          ${h.status === 'BORROWED' 
            ? '<span class="badge bg-danger">Borrowed</span>' 
            : '<span class="badge bg-success">Returned</span>'}
        </td>
      </tr>
    `).join('');
  }

  // Double Borrow Test
  async function doubleBorrow() {
    await borrowBook();
    await borrowBook();
  }

  // Load on start
  window.onload = () => {
    getAllBooks();
    getAllBorrowers();
    getBorrowHistory();
  };

</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
2025-10-23 21:15:09.961 [http-nio-8080-exec-10] DEBUG [56bcd1c0-e5d:73b1e6e1] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=56bcd1c0-e5d, spanId=73b1e6e1, URI=/favicon.ico
2025-10-23 21:15:09.977 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /favicon.ico]
Body:
(no body)
2025-10-23 21:15:09.978 [http-nio-8080-exec-10] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 17 ms]
Body:
{
  "timestamp" : "2025-10-23T21:15:09",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 21:15:10.018 [http-nio-8080-exec-1] DEBUG [7ae1f1fb-9e2:9027be60] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=7ae1f1fb-9e2, spanId=9027be60, URI=/api/books
2025-10-23 21:15:10.020 [http-nio-8080-exec-3] DEBUG [95062d8c-bbb:601e7156] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=95062d8c-bbb, spanId=601e7156, URI=/api/history
2025-10-23 21:15:10.024 [http-nio-8080-exec-2] DEBUG [2849839e-dd5:6858c4c3] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2849839e-dd5, spanId=6858c4c3, URI=/api/borrowers
2025-10-23 21:15:10.027 [http-nio-8080-exec-1] INFO  [7ae1f1fb-9e2:9027be60] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:15:10.034 [http-nio-8080-exec-1] DEBUG [7ae1f1fb-9e2:9027be60] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:15:10.039 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 21:15:10.040 [http-nio-8080-exec-2] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 16 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "name1",
  "email" : "email@email.com"
} ]
2025-10-23 21:15:10.045 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 21:15:10.045 [http-nio-8080-exec-1] DEBUG [7ae1f1fb-9e2:9027be60] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:15:10.048 [http-nio-8080-exec-3] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 25 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title1",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name1",
  "borrowDate" : "2025-10-23T21:13:20.765753",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 21:15:10.052 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:15:10.054 [http-nio-8080-exec-1] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 34 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : 1,
  "borrowedByCode" : "BORR-00001"
} ]
2025-10-23 21:15:17.991 [http-nio-8080-exec-4] DEBUG [804f5dbb-db4:b44d0d40] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=804f5dbb-db4, spanId=b44d0d40, URI=/api/books/return/BOOK-00001
2025-10-23 21:15:17.996 [http-nio-8080-exec-4] INFO  [804f5dbb-db4:b44d0d40] c.e.l.controller.BookController - Return request - Book Code: BOOK-00001
2025-10-23 21:15:18.068 [http-nio-8080-exec-4] INFO  [804f5dbb-db4:b44d0d40] c.e.l.controller.BookController - Book returned successfully - Book Code: BOOK-00001
2025-10-23 21:15:18.073 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 21:15:18.074 [http-nio-8080-exec-4] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 82 ms]
Body:
Book returned successfully
2025-10-23 21:15:18.112 [http-nio-8080-exec-6] DEBUG [1baa826c-d39:be5dda95] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=1baa826c-d39, spanId=be5dda95, URI=/api/books
2025-10-23 21:15:18.117 [http-nio-8080-exec-6] INFO  [1baa826c-d39:be5dda95] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:15:18.118 [http-nio-8080-exec-6] DEBUG [1baa826c-d39:be5dda95] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:15:18.128 [http-nio-8080-exec-6] DEBUG [1baa826c-d39:be5dda95] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:15:18.132 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:15:18.133 [http-nio-8080-exec-6] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 21 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : null,
  "borrowedByCode" : null
} ]
2025-10-23 21:15:19.771 [http-nio-8080-exec-7] DEBUG [09429d08-260:fa83fa3b] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=09429d08-260, spanId=fa83fa3b, URI=/api/history
2025-10-23 21:15:19.786 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 21:15:19.787 [http-nio-8080-exec-7] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 15 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title1",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name1",
  "borrowDate" : "2025-10-23T21:13:20.765753",
  "returnDate" : "2025-10-23T21:15:18.026354",
  "status" : "RETURNED"
} ]
2025-10-23 21:15:24.789 [http-nio-8080-exec-5] DEBUG [6bc39a77-6d6:47ab896f] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=6bc39a77-6d6, spanId=47ab896f, URI=/api/books/borrow/BOOK-00001
2025-10-23 21:15:24.793 [http-nio-8080-exec-5] INFO  [6bc39a77-6d6:47ab896f] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 21:15:24.794 [http-nio-8080-exec-5] INFO  [6bc39a77-6d6:47ab896f] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:15:24.818 [http-nio-8080-exec-5] INFO  [6bc39a77-6d6:47ab896f] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 21:15:24.824 [http-nio-8080-exec-5] INFO  [6bc39a77-6d6:47ab896f] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 21:15:24.827 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 21:15:24.828 [http-nio-8080-exec-5] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 39 ms]
Body:
Book borrowed successfully
2025-10-23 21:15:24.849 [http-nio-8080-exec-9] DEBUG [40ddafde-427:6e404b5d] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=40ddafde-427, spanId=6e404b5d, URI=/api/books
2025-10-23 21:15:24.852 [http-nio-8080-exec-9] INFO  [40ddafde-427:6e404b5d] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:15:24.853 [http-nio-8080-exec-9] DEBUG [40ddafde-427:6e404b5d] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:15:24.894 [http-nio-8080-exec-9] DEBUG [40ddafde-427:6e404b5d] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:15:24.898 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:15:24.902 [http-nio-8080-exec-9] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 50 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "111",
  "title" : "title1",
  "author" : "author2",
  "borrowedById" : 1,
  "borrowedByCode" : "BORR-00001"
} ]
2025-10-23 21:15:28.937 [http-nio-8080-exec-8] DEBUG [56bc680e-edf:4429a259] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=56bc680e-edf, spanId=4429a259, URI=/api/history
2025-10-23 21:15:28.968 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/history]
Body:
(no body)
2025-10-23 21:15:28.970 [http-nio-8080-exec-8] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 32 ms]
Body:
[ {
  "id" : 1,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title1",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name1",
  "borrowDate" : "2025-10-23T21:13:20.765753",
  "returnDate" : "2025-10-23T21:15:18.026354",
  "status" : "RETURNED"
}, {
  "id" : 2,
  "bookCode" : "BOOK-00001",
  "bookTitle" : "title1",
  "borrowerCode" : "BORR-00001",
  "borrowerName" : "name1",
  "borrowDate" : "2025-10-23T21:15:24.813597",
  "returnDate" : null,
  "status" : "BORROWED"
} ]
2025-10-23 21:21:50.131 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 21:21:50.296 [main] INFO  [:] c.e.library.BookServiceImplTest - Starting BookServiceImplTest using Java 17.0.16 with PID 6016 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 21:21:50.298 [main] DEBUG [:] c.e.library.BookServiceImplTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 21:21:50.301 [main] INFO  [:] c.e.library.BookServiceImplTest - The following 1 profile is active: "dev"
2025-10-23 21:21:55.199 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 21:21:55.553 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 310 ms. Found 3 JPA repository interfaces.
2025-10-23 21:21:58.056 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 21:21:58.779 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 21:21:59.174 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 21:22:01.643 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 21:22:01.905 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 21:22:03.556 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 21:22:03.561 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 21:22:11.010 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 21:22:11.294 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:22:15.177 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 21:22:15.351 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 21:22:18.214 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 21:22:18.892 [main] INFO  [:] c.e.library.BookServiceImplTest - Started BookServiceImplTest in 30.687 seconds (process running for 39.524)
2025-10-23 21:22:26.113 [main] DEBUG [:] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:22:26.865 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:22:27.016 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:22:27.482 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:22:27.887 [main] INFO  [:] c.e.library.service.BookServiceImpl - Registering new book: [1111 - Title]
2025-10-23 21:22:28.051 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00002 for borrower: BORR-00001
2025-10-23 21:22:28.620 [SpringApplicationShutdownHook] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:22:28.642 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 21:22:28.730 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-23 21:34:54.441 [RMI TCP Connection(35)-127.0.0.1] INFO  [:] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-10-23 21:34:54.454 [RMI TCP Connection(35)-127.0.0.1] INFO  [:] o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-10-23 21:35:47.541 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 21:35:47.994 [main] INFO  [:] c.e.library.BookServiceImplTest - Starting BookServiceImplTest using Java 17.0.16 with PID 15956 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 21:35:48.044 [main] DEBUG [:] c.e.library.BookServiceImplTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 21:35:48.048 [main] INFO  [:] c.e.library.BookServiceImplTest - The following 1 profile is active: "dev"
2025-10-23 21:35:54.297 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 21:35:54.691 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 341 ms. Found 3 JPA repository interfaces.
2025-10-23 21:35:58.538 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 21:36:00.063 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 21:36:01.190 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 21:36:06.041 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 21:36:06.381 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 21:36:08.644 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 21:36:08.654 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 21:36:17.086 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 21:36:17.482 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:36:24.029 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 21:36:24.282 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 21:36:28.602 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 21:36:29.543 [main] INFO  [:] c.e.library.BookServiceImplTest - Started BookServiceImplTest in 46.773 seconds (process running for 75.654)
2025-10-23 21:36:40.377 [main] INFO  [:] c.e.library.service.BookServiceImpl - Registering new book: [1111 - Title]
2025-10-23 21:36:41.799 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:36:42.550 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:36:43.512 [main] DEBUG [:] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:36:43.915 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:36:44.110 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00002 for borrower: BORR-00001
2025-10-23 21:36:44.845 [SpringApplicationShutdownHook] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:36:44.855 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 21:36:45.051 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-23 21:39:12.348 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 21:39:12.579 [main] INFO  [:] c.e.library.BookServiceImplTest - Starting BookServiceImplTest using Java 17.0.16 with PID 4180 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 21:39:12.582 [main] DEBUG [:] c.e.library.BookServiceImplTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 21:39:12.585 [main] INFO  [:] c.e.library.BookServiceImplTest - The following 1 profile is active: "dev"
2025-10-23 21:39:24.760 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 21:39:25.131 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 315 ms. Found 3 JPA repository interfaces.
2025-10-23 21:39:29.605 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 21:39:30.723 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 21:39:31.312 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 21:39:37.298 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 21:39:37.640 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 21:39:41.398 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 21:39:41.409 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 21:39:59.812 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 21:40:02.943 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:40:08.598 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 21:40:08.749 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 21:40:12.574 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 21:40:13.549 [main] INFO  [:] c.e.library.BookServiceImplTest - Started BookServiceImplTest in 66.835 seconds (process running for 93.963)
2025-10-23 21:40:37.825 [main] DEBUG [:] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:40:41.333 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:40:41.488 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:40:41.598 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 21:40:41.737 [main] INFO  [:] c.e.library.service.BookServiceImpl - Registering new book: [1111 - Title]
2025-10-23 21:40:42.021 [main] INFO  [:] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00002 for borrower: BORR-00001
2025-10-23 21:40:42.672 [main] INFO  [:] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.library.integration.LibraryApiIntegrationTest]: LibraryApiIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-23 21:40:43.164 [main] INFO  [:] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.library.LibraryApiApplication for test class com.example.library.integration.LibraryApiIntegrationTest
2025-10-23 21:40:43.719 [main] INFO  [:] c.e.l.i.LibraryApiIntegrationTest - Starting LibraryApiIntegrationTest using Java 17.0.16 with PID 4180 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 21:40:43.721 [main] DEBUG [:] c.e.l.i.LibraryApiIntegrationTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 21:40:43.722 [main] INFO  [:] c.e.l.i.LibraryApiIntegrationTest - The following 1 profile is active: "dev"
2025-10-23 21:40:59.569 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 21:41:00.265 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 692 ms. Found 3 JPA repository interfaces.
2025-10-23 21:41:03.168 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 21:41:03.604 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 21:41:04.223 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 21:41:04.229 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-10-23 21:41:04.244 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 21:41:04.245 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-10-23 21:41:06.451 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 21:41:06.596 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:41:09.700 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 21:41:09.815 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 21:41:11.100 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 21:41:11.381 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 21:41:11.382 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 21:41:11.395 [main] INFO  [:] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-23 21:41:11.396 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-23 21:41:11.404 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-10-23 21:41:11.538 [main] INFO  [:] c.e.l.i.LibraryApiIntegrationTest - Started LibraryApiIntegrationTest in 28.353 seconds (process running for 151.953)
2025-10-23 21:41:13.671 [main] DEBUG [7c97731c-4f9:594c2abd] c.e.library.config.TracingFilter - Trace Started ? traceId=7c97731c-4f9, spanId=594c2abd, URI=/api/books/borrow/1
2025-10-23 21:41:15.107 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/1]
Body:
(no body)
2025-10-23 21:41:15.268 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 1505 ms]
Body:
{
  "timestamp" : "2025-10-23T21:41:14",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 21:41:15.550 [main] DEBUG [51e66f60-247:16ceefc5] c.e.library.config.TracingFilter - Trace Started ? traceId=51e66f60-247, spanId=16ceefc5, URI=/api/books/borrow/2
2025-10-23 21:41:15.557 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/2]
Body:
(no body)
2025-10-23 21:41:15.573 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 8 ms]
Body:
{
  "timestamp" : "2025-10-23T21:41:15",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 21:41:15.743 [main] DEBUG [9c903f40-f58:4aaeb0a3] c.e.library.config.TracingFilter - Trace Started ? traceId=9c903f40-f58, spanId=4aaeb0a3, URI=/api/books
2025-10-23 21:41:17.189 [main] INFO  [9c903f40-f58:4aaeb0a3] c.e.l.controller.BookController - Registering new book: Clean Code by Robert C. Martin
2025-10-23 21:41:17.191 [main] INFO  [9c903f40-f58:4aaeb0a3] c.e.library.service.BookServiceImpl - Registering new book: [978-0132350884 - Clean Code]
2025-10-23 21:41:17.211 [main] DEBUG [9c903f40-f58:4aaeb0a3] c.e.library.service.BookServiceImpl - Book saved with ID: 4
2025-10-23 21:41:17.213 [main] DEBUG [9c903f40-f58:4aaeb0a3] c.e.l.controller.BookController - Book registered successfully with ID: 4
2025-10-23 21:41:17.295 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "978-0132350884",
  "title" : "Clean Code",
  "author" : "Robert C. Martin"
}
2025-10-23 21:41:17.298 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1551 ms]
Body:
{
  "id" : 4,
  "code" : "BOOK-00004",
  "isbn" : "978-0132350884",
  "title" : "Clean Code",
  "author" : "Robert C. Martin",
  "borrowedById" : null,
  "borrowedByCode" : null
}
2025-10-23 21:41:17.765 [main] DEBUG [6e42154d-7b9:39e22e13] c.e.library.config.TracingFilter - Trace Started ? traceId=6e42154d-7b9, spanId=39e22e13, URI=/api/books
2025-10-23 21:41:17.771 [main] INFO  [6e42154d-7b9:39e22e13] c.e.l.controller.BookController - Fetching all books
2025-10-23 21:41:17.773 [main] DEBUG [6e42154d-7b9:39e22e13] c.e.library.service.BookServiceImpl - Fetching all books from repository
2025-10-23 21:41:18.872 [main] DEBUG [6e42154d-7b9:39e22e13] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 21:41:18.884 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 21:41:18.888 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1120 ms]
Body:
[ {
  "id" : 5,
  "code" : null,
  "isbn" : "978-0134685991",
  "title" : "Effective Java",
  "author" : "Joshua Bloch",
  "borrowedById" : null,
  "borrowedByCode" : null
} ]
2025-10-23 21:41:18.969 [main] DEBUG [76239cda-e69:340833d3] c.e.library.config.TracingFilter - Trace Started ? traceId=76239cda-e69, spanId=340833d3, URI=/api/borrowers
2025-10-23 21:41:19.202 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "Jane Smith",
  "email" : "jane@example.com"
}
2025-10-23 21:41:19.209 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 232 ms]
Body:
{
  "id" : 6,
  "code" : "BORR-00006",
  "name" : "Jane Smith",
  "email" : "jane@example.com"
}
2025-10-23 21:41:19.292 [main] INFO  [:] o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.library.LibraryApiApplicationTests]: LibraryApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-23 21:41:19.315 [main] INFO  [:] o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.library.LibraryApiApplication for test class com.example.library.LibraryApiApplicationTests
2025-10-23 21:41:19.831 [SpringApplicationShutdownHook] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:41:19.855 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 21:41:19.965 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-23 21:41:19.976 [SpringApplicationShutdownHook] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 21:41:19.979 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-10-23 21:41:20.097 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-10-23 22:48:36.597 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 22:48:37.039 [main] INFO  [:] c.e.library.BorrowerControllerTest - Starting BorrowerControllerTest using Java 17.0.16 with PID 3996 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 22:48:37.041 [main] DEBUG [:] c.e.library.BorrowerControllerTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 22:48:37.046 [main] INFO  [:] c.e.library.BorrowerControllerTest - The following 1 profile is active: "dev"
2025-10-23 22:48:53.434 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 22:48:57.631 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 22:48:57.634 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 22:48:57.699 [main] INFO  [:] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-23 22:48:57.700 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-23 22:48:57.715 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 13 ms
2025-10-23 22:48:58.026 [main] INFO  [:] c.e.library.BorrowerControllerTest - Started BorrowerControllerTest in 26.445 seconds (process running for 33.931)
2025-10-23 22:48:59.118 [main] DEBUG [b96be942-3f3:8c6319ed] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b96be942-3f3, spanId=8c6319ed, URI=/api/borrowers
2025-10-23 22:49:00.774 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "John Doe",
  "email" : "john@example.com"
}
2025-10-23 22:49:00.781 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1681 ms]
Body:
{
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "John Doe",
  "email" : "john@example.com"
}
2025-10-23 22:49:01.523 [main] DEBUG [0aa46b08-224:6f59e908] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=0aa46b08-224, spanId=6f59e908, URI=/api/borrowers
2025-10-23 22:49:01.569 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 22:49:01.583 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 131 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "John Doe",
  "email" : "john@example.com"
} ]
2025-10-23 22:54:41.381 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 22:54:41.563 [main] INFO  [:] c.e.l.c.BorrowerControllerTest - Starting BorrowerControllerTest using Java 17.0.16 with PID 2528 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 22:54:41.573 [main] DEBUG [:] c.e.l.c.BorrowerControllerTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 22:54:41.576 [main] INFO  [:] c.e.l.c.BorrowerControllerTest - The following 1 profile is active: "dev"
2025-10-23 22:54:56.141 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 22:54:58.328 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 22:54:58.329 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 22:54:58.412 [main] INFO  [:] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-23 22:54:58.413 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-23 22:54:58.420 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 5 ms
2025-10-23 22:54:58.781 [main] INFO  [:] c.e.l.c.BorrowerControllerTest - Started BorrowerControllerTest in 20.63 seconds (process running for 27.726)
2025-10-23 22:54:59.734 [main] DEBUG [cd0360cb-b04:26b8f9da] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=cd0360cb-b04, spanId=26b8f9da, URI=/api/borrowers
2025-10-23 22:55:01.169 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "John Doe",
  "email" : "john@example.com"
}
2025-10-23 22:55:01.178 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 1390 ms]
Body:
{
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "John Doe",
  "email" : "john@example.com"
}
2025-10-23 22:55:02.112 [main] DEBUG [785530fc-7ca:d0a7b1b6] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=785530fc-7ca, spanId=d0a7b1b6, URI=/api/borrowers
2025-10-23 22:55:02.137 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/borrowers]
Body:
(no body)
2025-10-23 22:55:02.186 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 26 ms]
Body:
[ {
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "John Doe",
  "email" : "john@example.com"
} ]
2025-10-23 22:57:21.446 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 22:57:21.582 [main] INFO  [:] c.e.l.controller.BookControllerTest - Starting BookControllerTest using Java 17.0.16 with PID 15304 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 22:57:21.584 [main] DEBUG [:] c.e.l.controller.BookControllerTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 22:57:21.587 [main] INFO  [:] c.e.l.controller.BookControllerTest - The following 1 profile is active: "dev"
2025-10-23 22:57:30.572 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 22:57:32.302 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 22:57:32.303 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 22:57:32.339 [main] INFO  [:] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-23 22:57:32.342 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-23 22:57:32.351 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 7 ms
2025-10-23 22:57:32.498 [main] INFO  [:] c.e.l.controller.BookControllerTest - Started BookControllerTest in 13.44 seconds (process running for 19.624)
2025-10-23 22:57:33.039 [main] DEBUG [d83be0d4-28a:f029d182] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=d83be0d4-28a, spanId=f029d182, URI=/api/books
2025-10-23 22:57:33.387 [main] INFO  [d83be0d4-28a:f029d182] c.e.l.controller.BookController - Fetching all books
2025-10-23 22:57:33.397 [main] DEBUG [d83be0d4-28a:f029d182] c.e.l.controller.BookController - Total books fetched: 1
2025-10-23 22:57:33.617 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [GET /api/books]
Body:
(no body)
2025-10-23 22:57:33.667 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 597 ms]
Body:
[ {
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "12345",
  "title" : "Java 101",
  "author" : "John Doe",
  "borrowedById" : null,
  "borrowedByCode" : null
} ]
2025-10-23 22:57:34.186 [main] DEBUG [ca1d2a5d-91e:a2fe905c] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=ca1d2a5d-91e, spanId=a2fe905c, URI=/api/books/borrow/BOOK-00001
2025-10-23 22:57:34.346 [main] INFO  [ca1d2a5d-91e:a2fe905c] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 22:57:34.422 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 22:57:34.425 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 500] [Time: 238 ms]
Body:
{
  "timestamp" : "2025-10-23T22:57:34",
  "status" : 500,
  "error" : "Internal Server Error",
  "message" : "Internal server error"
}
2025-10-23 22:57:34.465 [main] DEBUG [b0ec6738-fe3:42ed5f65] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b0ec6738-fe3, spanId=42ed5f65, URI=/api/books/return/BOOK-00001
2025-10-23 22:57:34.471 [main] INFO  [b0ec6738-fe3:42ed5f65] c.e.l.controller.BookController - Return request - Book Code: BOOK-00001
2025-10-23 22:57:34.473 [main] INFO  [b0ec6738-fe3:42ed5f65] c.e.l.controller.BookController - Book returned successfully - Book Code: BOOK-00001
2025-10-23 22:57:34.482 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 22:57:34.488 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 19 ms]
Body:
Book returned successfully
2025-10-23 22:57:34.570 [main] DEBUG [4180ded9-ee3:c13610c7] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=4180ded9-ee3, spanId=c13610c7, URI=/api/books/borrow/BOOK-99999
2025-10-23 22:57:34.581 [main] INFO  [4180ded9-ee3:c13610c7] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-99999, Borrower ID: BORR-00001
2025-10-23 22:57:34.589 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-99999]
Body:
(no body)
2025-10-23 22:57:34.592 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 404] [Time: 20 ms]
Body:
{
  "timestamp" : "2025-10-23T22:57:34",
  "status" : 404,
  "error" : "Not Found",
  "message" : "Book not found with code: BOOK-99999"
}
2025-10-23 22:57:34.647 [main] DEBUG [95f478ad-765:997a91d0] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=95f478ad-765, spanId=997a91d0, URI=/api/books/borrow/BOOK-00001
2025-10-23 22:57:34.649 [main] INFO  [95f478ad-765:997a91d0] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 22:57:34.651 [main] INFO  [95f478ad-765:997a91d0] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 22:57:34.656 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 22:57:34.656 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 12 ms]
Body:
Book borrowed successfully
2025-10-23 22:57:34.678 [main] DEBUG [4fe90eae-6ca:a41b5fb5] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=4fe90eae-6ca, spanId=a41b5fb5, URI=/api/books/borrow/BOOK-00001
2025-10-23 22:57:34.680 [main] INFO  [4fe90eae-6ca:a41b5fb5] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 22:57:34.699 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 22:57:34.700 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 409] [Time: 22 ms]
Body:
{
  "timestamp" : "2025-10-23T22:57:34",
  "status" : 409,
  "error" : "Conflict",
  "message" : "Book BOOK-00001 is already borrowed."
}
2025-10-23 22:57:34.769 [main] DEBUG [b73ead08-9de:fb42d413] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=b73ead08-9de, spanId=fb42d413, URI=/api/books
2025-10-23 22:57:35.143 [main] INFO  [b73ead08-9de:fb42d413] c.e.l.controller.BookController - Registering new book: Java 101 by John Doe
2025-10-23 22:57:35.145 [main] DEBUG [b73ead08-9de:fb42d413] c.e.l.controller.BookController - Book registered successfully with ID: 1
2025-10-23 22:57:35.153 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "12345",
  "title" : "Java 101",
  "author" : "John Doe"
}
2025-10-23 22:57:35.154 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 385 ms]
Body:
{
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "12345",
  "title" : "Java 101",
  "author" : "John Doe",
  "borrowedById" : null,
  "borrowedByCode" : null
}
2025-10-23 22:59:58.347 [background-preinit] INFO  [:] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-23 22:59:58.589 [main] INFO  [:] c.e.l.i.LibraryApiIntegrationTest - Starting LibraryApiIntegrationTest using Java 17.0.16 with PID 7256 (started by Prakash in C:\Users\Prakash\Documents\workspace\library\library-api)
2025-10-23 22:59:58.592 [main] DEBUG [:] c.e.l.i.LibraryApiIntegrationTest - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-10-23 22:59:58.609 [main] INFO  [:] c.e.l.i.LibraryApiIntegrationTest - The following 1 profile is active: "dev"
2025-10-23 23:00:04.285 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-23 23:00:04.601 [main] INFO  [:] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 291 ms. Found 3 JPA repository interfaces.
2025-10-23 23:00:07.812 [main] INFO  [:] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-23 23:00:08.622 [main] INFO  [:] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-23 23:00:08.979 [main] INFO  [:] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-23 23:00:10.879 [main] INFO  [:] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-23 23:00:11.152 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-23 23:00:12.242 [main] INFO  [:] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:librarydb user=SA
2025-10-23 23:00:12.249 [main] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-23 23:00:18.532 [main] INFO  [:] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-23 23:00:19.031 [main] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 23:00:24.523 [main] WARN  [:] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-23 23:00:24.827 [main] INFO  [:] o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-23 23:00:28.534 [main] INFO  [:] o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:librarydb'
2025-10-23 23:00:28.933 [main] DEBUG [:] c.e.l.c.RequestResponseLoggingFilter - Filter 'requestResponseLoggingFilter' configured for use
2025-10-23 23:00:28.938 [main] DEBUG [:] c.e.library.config.TracingFilter - Filter 'tracingFilter' configured for use
2025-10-23 23:00:28.943 [main] INFO  [:] o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-10-23 23:00:28.946 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-10-23 23:00:28.963 [main] INFO  [:] o.s.t.w.s.TestDispatcherServlet - Completed initialization in 11 ms
2025-10-23 23:00:29.353 [main] INFO  [:] c.e.l.i.LibraryApiIntegrationTest - Started LibraryApiIntegrationTest in 32.822 seconds (process running for 38.355)
2025-10-23 23:00:32.822 [main] DEBUG [2a62e382-86a:54ef5cf2] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=2a62e382-86a, spanId=54ef5cf2, URI=/api/borrowers
2025-10-23 23:00:39.339 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/borrowers]
Body:
{
  "name" : "John",
  "email" : "john@example.com"
}
2025-10-23 23:00:39.351 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 6514 ms]
Body:
{
  "id" : 1,
  "code" : "BORR-00001",
  "name" : "John",
  "email" : "john@example.com"
}
2025-10-23 23:00:39.611 [main] DEBUG [60e3e741-9ca:4b713df4] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=60e3e741-9ca, spanId=4b713df4, URI=/api/books
2025-10-23 23:00:39.671 [main] INFO  [60e3e741-9ca:4b713df4] c.e.l.controller.BookController - Registering new book: Java 101 by John Doe
2025-10-23 23:00:39.673 [main] INFO  [60e3e741-9ca:4b713df4] c.e.library.service.BookServiceImpl - Registering new book: [12345 - Java 101]
2025-10-23 23:00:39.685 [main] DEBUG [60e3e741-9ca:4b713df4] c.e.library.service.BookServiceImpl - Book saved with ID: 1
2025-10-23 23:00:39.687 [main] DEBUG [60e3e741-9ca:4b713df4] c.e.l.controller.BookController - Book registered successfully with ID: 1
2025-10-23 23:00:39.704 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books]
Body:
{
  "isbn" : "12345",
  "title" : "Java 101",
  "author" : "John Doe"
}
2025-10-23 23:00:39.710 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 95 ms]
Body:
{
  "id" : 1,
  "code" : "BOOK-00001",
  "isbn" : "12345",
  "title" : "Java 101",
  "author" : "John Doe",
  "borrowedById" : null,
  "borrowedByCode" : null
}
2025-10-23 23:00:39.717 [main] DEBUG [47b72309-8ae:8ec62d28] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=47b72309-8ae, spanId=8ec62d28, URI=/api/books/borrow/BOOK-00001
2025-10-23 23:00:39.741 [main] INFO  [47b72309-8ae:8ec62d28] c.e.l.controller.BookController - Borrow request - Book ID: BOOK-00001, Borrower ID: BORR-00001
2025-10-23 23:00:39.742 [main] INFO  [47b72309-8ae:8ec62d28] c.e.library.service.BookServiceImpl - Borrowing book with code: BOOK-00001 for borrower: BORR-00001
2025-10-23 23:00:40.463 [main] INFO  [47b72309-8ae:8ec62d28] c.e.library.service.BookServiceImpl - Book BOOK-00001 successfully borrowed by BORR-00001
2025-10-23 23:00:40.466 [main] INFO  [47b72309-8ae:8ec62d28] c.e.l.controller.BookController - Book borrowed successfully - Book ID: BOOK-00001
2025-10-23 23:00:40.477 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/borrow/BOOK-00001]
Body:
(no body)
2025-10-23 23:00:40.480 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 760 ms]
Body:
Book borrowed successfully
2025-10-23 23:00:40.507 [main] DEBUG [bd79ed5e-e94:90e30d8a] c.e.library.config.TracingFilter - Trace Started ‚Üí traceId=bd79ed5e-e94, spanId=90e30d8a, URI=/api/books/return/BOOK-00001
2025-10-23 23:00:40.514 [main] INFO  [bd79ed5e-e94:90e30d8a] c.e.l.controller.BookController - Return request - Book Code: BOOK-00001
2025-10-23 23:00:40.556 [main] INFO  [bd79ed5e-e94:90e30d8a] c.e.l.controller.BookController - Book returned successfully - Book Code: BOOK-00001
2025-10-23 23:00:40.570 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Request: [POST /api/books/return/BOOK-00001]
Body:
(no body)
2025-10-23 23:00:40.583 [main] INFO  [:] c.e.l.c.RequestResponseLoggingFilter - Response: [Status: 200] [Time: 64 ms]
Body:
Book returned successfully
2025-10-23 23:00:40.779 [SpringApplicationShutdownHook] INFO  [:] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-23 23:00:40.876 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-23 23:00:41.512 [SpringApplicationShutdownHook] INFO  [:] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
